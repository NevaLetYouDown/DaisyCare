{"version":3,"sources":["store/actions/actionTypes.js","utils/CommonUtils.js","utils/KeyCodeUtils.js","utils/LanguageUtils.js","components/CustomToast.js","utils/emitter.js","containers/System/Admin/UserRedux.js","containers/System/Admin/TableManageUser.js","utils/constant.js","containers/HomePage/Patient/Doctor/AllDoctor.js","services/userService.js","store/actions/appActions.js","store/actions/userActions.js","store/actions/adminActions.js","axios.js","../node_modules/@highcharts/map-collection/countries lazy /^/.*/-all/.geo/.json$/ groupOptions: {} namespace object","assets/images/logo.png","containers/HomePage/HomeHeader.js","store/reducers/appReducer.js","store/reducers/userReducer.js","store/reducers/adminReducer.js","store/reducers/rootReducer.js","redux.js","hoc/authentication.js","routes/Home.js","containers/Auth/Login.js","containers/System/UserManage.js","components/Navigator.js","containers/Header/menuApp.js","containers/Header/Header.js","containers/System/Admin/ManageDoctor.js","containers/System/Specialty/TableManageSpecialty.js","containers/System/Specialty/ManageSpecialty.js","containers/System/Clinic/TableManageClinic.js","containers/System/Clinic/ManageClinic.js","routes/System.js","containers/HomePage/Sections/Specialty.js","containers/HomePage/Sections/MedicalFacility.js","containers/HomePage/Sections/Outstanding-Doctor.js","containers/HomePage/Sections/About.js","containers/HomePage/Sections/Covid.js","containers/HomePage/HomePage.js","containers/HomePage/Patient/Doctor/ProfileDoctor.js","containers/HomePage/Patient/Doctor/Modal/BookingModal.js","containers/HomePage/Patient/Doctor/DoctorSchedule.js","containers/HomePage/Patient/Doctor/DoctorExtraInfo.js","containers/HomePage/Patient/Social/LikeButton.js","containers/HomePage/Patient/Social/Comment.js","containers/HomePage/Patient/Doctor/DetailDoctor.js","components/Input/DatePicker.js","containers/System/Doctor/RemedyModal.js","containers/System/Doctor/ManagePatient.js","containers/System/Doctor/ManageSchedule.js","routes/Doctor.js","containers/HomePage/Patient/VerifyingEmail.js","containers/HomePage/Patient/Specialty/DetailSpecialty.js","containers/HomePage/Patient/Clinic/DetailClinic.js","components/Chart/LineChart.js","components/Chart/HighMaps.js","components/Chart/chartService.js","containers/HomePage/Patient/COVID/DetailCOVID.js","containers/HomePage/Patient/Clinic/AllClinic.js","containers/HomePage/Patient/Specialty/AllSpecialty.js","containers/Auth/Register.js","containers/App.js","serviceWorker.js","hoc/IntlProviderWrapper.js","index.js","containers/HomePage/HomeFooter.js","components/CustomScrollbars.js"],"names":["actionTypes","Object","freeze","APP_START_UP_COMPLETE","SET_CONTENT_OF_CONFIRM_MODAL","CHANGE_LANGUAGE","ADD_USER_SUCCESS","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","PROCESS_LOGOUT","UPDATE_USER_INFO","FETCH_INFO_START","FETCH_GENDER_SUCCESS","FETCH_GENDER_FAIL","FETCH_POSITION_SUCCESS","FETCH_POSITION_FAIL","FETCH_ROLE_SUCCESS","FETCH_ROLE_FAIL","CREATE_USER_SUCCESS","CREATE_USER_FAIL","DELETE_USER_SUCCESS","DELETE_USER_FAIL","EDIT_USER_SUCCESS","EDIT_USER_FAIL","FETCH_ALL_USER_SUCCESS","FETCH_ALL_USER_FAIL","FETCH_TOP_DOCTOR_SUCCESS","FETCH_TOP_DOCTOR_FAIL","FETCH_ALL_DOCTOR_SUCCESS","FETCH_ALL_DOCTOR_FAIL","SAVE_DETAIL_DOCTOR_SUCCESS","SAVE_DETAIL_DOCTOR_FAIL","FETCH_ALLCODE_SCHEDULE_SUCCESS","FETCH_ALLCODE_SCHEDULE_FAIL","FETCH_REQUIRED_DOCTOR_INFO_SUCCESS","FETCH_REQUIRED_DOCTOR_INFO_FAIL","FETCH_ALL_SPECIALTY_SUCCESS","FETCH_ALL_SPECIALTY_FAIL","FETCH_ALL_CLINIC_SUCCESS","FETCH_ALL_CLINIC_FAIL","FETCH_ALL_DETAIL_DOCTOR_SUCCESS","FETCH_ALL_DETAIL_DOCTOR_FAIL","CommonUtils","number","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","KeyCodeUtils","e","UP","DOWN","TAB","ENTER","E","ESCAPE","flattenMessages","nestedMessages","prefix","keys","reduce","messages","key","value","prefixedKey","assign","messages_vi","messages_en","LanguageUtils","lang","Component","_emitter","EventEmitter","setMaxListeners","UserRedux","props","handleChangeImg","files","getBase64","b64","imgUrl","URL","createObjectURL","setState","previewImg","avartar","validateInput","isValid","validate","i","length","state","alert","resetInput","email","password","firstName","lastName","phoneNumber","address","gender","position","role","id","action","CRUD_ACTIONS","CREATE","birthday","isLoading","handleSaveUser","createUser","roleId","positionId","image","EDIT","editAUser","onChangInput","event","target","name","handleEditUserFromParent","user","imageBase64","Buffer","from","toString","isOpen","this","getGenderStart","getRoleStart","getPositionStart","language","genderArr","genderRedux","roleArr","roleRedux","positionArr","positionRedux","active","spinner","text","LANGUAGES","VI","className","type","onChange","disabled","map","item","index","keyMap","valueVi","valueEn","hidden","htmlFor","style","backgroundImage","onClick","hideMarkdown","mainSrc","onCloseRequest","connect","app","admin","genders","positions","roles","users","dispatch","actions","data","cb","fetchAllUserRedux","mdParser","MarkdownIt","handleEditorChange","html","console","log","TableManageUser","handleDeleteUser","deleteAUser","handleEditUser","userRedux","prevProps","Fragment","height","renderHTML","render","path","HOME","HOMEPAGE","LOGIN","REGISTER","LOG_OUT","SYSTEM","DOCTOR","VERIFY_EMAIL_BOOKING","DETAIL_DOCTOR","DETAIL_SPECIALTY","DETAIL_CLINIC","ALL_DOCTOR","ALL_SPECIALTY","ALL_CLINIC","DETAIL_COVID","EN","READ","DELETE","USER_ROLE","ADMIN","PATIENT","AllDoctor","handleViewDetailClinic","history","push","buidDataSelect","allDoctorsDetail","obj","label","handleChangeSelect","listDoctor","fetchAllDetailDoctor","marginTop","options","placeholder","imgBase64","positionData","class","withRouter","handleLogin","userEmail","userPassword","axios","post","getAllUser","userId","get","createUserService","deleteUser","delete","editUser","userInfo","put","getAllCodeService","inputType","getTopDoctorHomeService","limit","getAllDoctors","saveDoctorInfoService","getDetailInfoDoctor","saveBulkSchedule","getScheduleDoctorByDate","doctorId","date","getExtraInfoDoctorById","getProfileDoctorById","postBookingAppointment","postVerifyBooking","createNewSpecialty","getAllSpecialties","getDetailSpecialtyById","location","deleteSpecialty","editSpecialty","createNewClinic","getTopClinics","getAllClinics","getDetailClinicById","deleteClinic","editClinic","getAllPatient","sendEmailRemedyService","getAllDoctorDetail","changeLanguageApp","languageInput","userLoginSuccess","processLogout","window","href","localStorage","clear","updateUserInfo","payload","fetchGenderStart","res","errCode","fetchGenderSuccess","fetchGenderFailed","fetchPostionStart","fetchPositionSuccess","fetchPositionFailed","fetchRoleStart","fetchRoleSuccess","fetchRoleFailed","toast","success","saveUserSuccess","fetchAllUsersStart","saveUserFail","fetchAllUsersnSuccess","reverse","fetchAllUsersnFailed","warn","deleteUserSuccess","deleteUserFail","editUserSuccess","editUserFail","fetchTopDoctor","fetchALLDoctor","saveInfoDoctorRedux","fetchAllcodeSchedule","getDoctorRequiredInfo","resPrice","resPayment","resProvince","resSpecialty","resClinic","fetchAllSpecialty","fetchAllClinic","instance","create","baseURL","process","interceptors","response","use","webpackAsyncContext","req","__webpack_require__","o","then","Error","code","ids","t","module","exports","HomeHeader","changeLanguage","l","changeLanguageAppRedux","returnToHomePage","handleClickSpecialtyPage","handleClickClinicPage","handleClickViewAllDoctor","handleClickDoctorPage","message","nagvigateLogin","isShowBanner","src","logo","alt","marginRight","handleLogout","open","isLoggedIn","initialState","started","systemMenuPath","doctorMenuPath","patientMenuPath","contentOfConfirmModal","messageId","handleFunc","dataFunc","appReducer","topDoctors","allDoctors","allSpecialty","allClinic","allScheduleTime","requiredDoctorInfo","allProvince","adminReducer","persistCommonConfig","storage","stateReconciler","autoMergeLevel2","userPersistConfig","whitelist","appPersistConfig","store","combineReducers","router","connectRouter","persistReducer","userReducer","createBrowserHistory","basename","REACT_APP_ROUTER_BASE_NAME","reduxStateSyncConfig","rootReducer","createRootReducer","middleware","routerMiddleware","thunkMiddleware","createStateSyncMiddleware","composeEnhancers","compose","reduxStore","createStore","applyMiddleware","persistor","persistStore","locationHelper","locationHelperBuilder","userIsAuthenticated","connectedRouterRedirect","authenticatedSelector","wrapperDisplayName","redirectPath","userIsNotAuthenticated","ownProps","getRedirectQueryParam","allowRedirectBack","Home","linkToRedirect","to","Login","errMessage","submit","err","handleShowPassword","isShowPassword","onKeyPress","charCode","handleChangeText","cpState","navigate","arrButton","UserManage","useHistory","useSelector","useEffect","replace","MenuGroup","children","Menu","link","hasSubMenu","onLinkClick","SubMenu","getItemClass","pathname","MenuGroupWithRouter","MenuWithRouter","SubMenuWithRouter","Navigator","expandedMenu","toggle","groupIndex","menuIndex","isMenuHasSubMenuActive","subMenus","currentPath","checkActiveMenu","menus","outerLoop","group","j","menu","prevState","isSubMenuOpen","subMenu","subMenuIndex","closeOtherExpand","withRouterInnerRef","WrappedComponent","InnerComponentWithRef","forwardRef","rest","ref","React","ComponentWithRef","withRef","adminMenu","doctorMenu","Header","handleChangeLanguage","menuApp","_","isEmpty","ManageDoctor","buildInputDataSelectDoctor","buildInputDoctorRequiredInfo","nameVi","nameEn","contentMarkdown","contentHTML","handleSaveDetailDoctor","description","selectedDoctor","selectedPayment","selectedPrice","selectedProvince","nameClinic","clinicAddress","note","selectedClinic","selectedSpecialty","listPayment","listProvince","listPrice","listSpecialty","listClinic","Markdown","mardown","addressClinicId","paymentId","priceId","provinceId","specialtyId","clinicId","Doctor_Info","find","hasOldData","handleChangeSelectDoctorInfo","selectedValue","stateName","copyState","handleOnChangeTextInput","listDoctos","getRequiredDoctorInfo","dataSelect","dataPrice","dataPayment","dataProvince","dataSpecialty","dataClinic","color","rows","TableManageSpecialty","handleDelete","deleteFromParent","handleEdit","handleEditFromParent","ManageSpecialty","fetchDataSpecialty","descriptionMarkdown","descriptionHTML","handleSubmit","TableManageClinic","ManageClinic","fetchDataClinic","allClinics","System","getRedirectLink","component","Specialty","handleViewDetailSpecialty","handleViewAllSpecialty","settings","margin","paddingTop","fontWeight","fontSize","paddingLeft","textAlign","MeicalFacility","dataClinics","OutStandingDoctor","handleViewDetailDoctor","getNameSpecialty","handleViewAllDoctor","arrDoctos","loadTopDoctor","About","width","title","frameBorder","allow","allowFullScreen","CovidSection","handleViewDetail","fetchCountries","countries","listCountries","buildDataSelecter","Country","Slug","handOnChangeSelect","selectedCountry","infoCOVID","getName","moment","Date","locale","format","paddingBottom","Confirmed","Active","Deaths","HomePage","dots","infinite","speed","slidesToShow","slidesToScroll","MedicalFacility","Covid","HomeFooter","ProfileDoctor","getInfoDoctor","getProvinceName","dataProfile","provinceData","renderTimeBooking","dataTime","time","timeTypeData","unix","doctorInfo","isShowDoctorDescription","isShowLink","isShowPrice","priceVi","priceEn","priceData","displayType","thousandSeparator","suffix","BookingModal","buildFirstGenderSelect","onChangeText","buildDataGender","selectedGender","valid","reason","timeType","dataSchedule","timeString","buildTimeBooking","doctorName","buildDoctorName","dataUser","dataName","doctorData","listGender","fetchGender","Modal","size","centered","DoctorSchedule","getArrayDays","arrDate","labelVi","today","capitalizeFirstLetter","add","labelEn","startOf","valueOf","doctorIdFromParent","allTime","allAvailableTimes","onHandleChoose","isShowModal","dataScheduleTimeModal","allDays","string","charAt","toUpperCase","slice","marginBottom","DoctorExtraInfo","showInfo","viewDetail","extraInfo","provinceVi","provinceEn","paymentVi","paymentEn","paymentData","LikeButton","FB","XFBML","parse","fbAsyncInit","init","appId","REACT_APP_FACEBOOK_APP_ID","cookie","xfbml","version","d","s","js","fjs","getElementsByTagName","getElementById","createElement","parentNode","insertBefore","document","initFacebookSDK","dataHref","Comment","numberCmt","DetailDoctor","detailDoctor","match","params","currentURL","dangerouslySetInnerHTML","__html","DatePicker","flatpickrNode","nodeRef","element","flatpickr","node","addEventListener","handleBlur","handlerKeyDown","which","keyCode","preventDefault","valueMoment","toDate","onOpen","checkDateValue","str","max","num","parseInt","isNaN","autoFormatOnChange","seperator","input","RegExp","test","substr","values","split","v","join","onInputChange","DISPLAY_FORMAT","DATE_FORMAT_AUTO_FILL","converted","SEPERATOR","onInputBlur","removeEventListener","close","minDate","onClose","otherProps","dateFormat","allowInput","disableMobile","RemedyModal","imageB64","handleSendRemedy","handleSendBill","dataModal","ModalHeader","ModalBody","ModalFooter","Button","ManagePatient","ArrayButton","getDataPatient","currentDate","formattedDate","getTime","dataPatient","handleChangeDayPicker","getValueByLanguage","handleConfirm","patientId","patientData","closeModal","dataFromChild","timeData","genderData","colSpan","ManageSchedule","buildInputDataSelect","allSchedule","copySchedule","isSelected","formatedDate","selectedTime","filter","arrSchedule","yesterday","setDate","getDate","Doctor","VerifyingEmail","statusVerify","search","urlParams","URLSearchParams","token","DetailSpecialty","arrId","arr","doctorSpecialty","dataDetailSpecialty","arrDoctorId","isShowDetail","DetailClinic","dataDetailClinic","doctorClinic","LineChart","generateOptions","categories","chart","xAxis","crosshair","colors","yAxis","min","labels","align","tooltip","headerFormat","pointFormat","footerFormat","shared","useHTML","plotOptions","column","pointPadding","borderWidth","series","setReportType","reportType","renderOptions","customData","Math","display","highcharts","Highcharts","highchartsMap","initOptions","mapNavigation","enabled","colorAxis","stops","legend","layout","verticalAlign","joinBy","HighMaps","mapData","useState","setOptions","mapLoaded","setMapLoaded","chartRef","useRef","fakeData","features","feature","properties","current","update","cloneDeep","constructorType","defaultProps","memo","fetchDataCOVID","DetailCOVID","getMapDataByCountryId","countryId","toLowerCase","catch","ISO2","pop","report","AllClinic","handleChangeSelectClinic","AllSpecialty","getAllSpecialty","Register","validatePass","confirmpass","handleRegister","goBack","listGenders","App","handlePersistorState","getState","bootstrapped","onBeforeLift","CustomScrollbars","exact","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","Boolean","hostname","getFlattenedMessages","IntlProviderWrapper","defaultLocale","ReactDOM","navigator","serviceWorker","ready","registration","unregister","rel","createRef","getScrollLeft","getScrollTop","scrollToBottom","targetScrollTop","getScrollHeight","scrollTo","targetTop","quickScroll","scrollbars","originalTop","iteration","scroll","scrollTop","setTimeout","renderTrackHorizontal","renderTrackVertical","renderThumbHorizontal","renderThumbVertical","renderNone","disableVerticalScroll","disableHorizontalScroll","autoHide","autoHideTimeout","hideTracksWhenNotNeeded"],"mappings":"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vB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,uBAAwB,CACvB,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,uBAAwB,CACvB,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,uBAAwB,CACvB,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,uBAAwB,CACvB,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACv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","file":"static/js/main.c0296f6a.chunk.js","sourcesContent":["const actionTypes = Object.freeze({\r\n    //app\r\n    APP_START_UP_COMPLETE: 'APP_START_UP_COMPLETE',\r\n    SET_CONTENT_OF_CONFIRM_MODAL: 'SET_CONTENT_OF_CONFIRM_MODAL',\r\n    CHANGE_LANGUAGE: \"CHANGE_LANGUAGE\",\r\n\r\n    //user\r\n    ADD_USER_SUCCESS: 'ADD_USER_SUCCESS',\r\n    USER_LOGIN_SUCCESS: \"USER_LOGIN_SUCCESS\",\r\n    USER_LOGIN_FAIL: \"USER_LOGIN_FAIL\",\r\n    PROCESS_LOGOUT: \"PROCESS_LOGOUT\",\r\n    UPDATE_USER_INFO: \"UPDATE_USER_INFO\",\r\n\r\n\r\n    //admin\r\n    FETCH_INFO_START: \"FETCH_INFO_START\",\r\n    FETCH_GENDER_SUCCESS: \"FETCH_GENDER_SUCCESS\",\r\n    FETCH_GENDER_FAIL: \"FETCH_GENDER_FAIL\",\r\n\r\n    FETCH_POSITION_SUCCESS: \"FETCH_POSITION_SUCCESS\",\r\n    FETCH_POSITION_FAIL: \"FETCH_POSITION_FAIL\",\r\n\r\n    FETCH_ROLE_SUCCESS: \"FETCH_ROLE_SUCCESS\",\r\n    FETCH_ROLE_FAIL: \"FETCH_ROLE_FAIL\",\r\n\r\n\r\n    CREATE_USER_SUCCESS: \"CREATE_USER_SUCCESS\",\r\n    CREATE_USER_FAIL: \"CREATE_USER_FAIL\",\r\n\r\n    DELETE_USER_SUCCESS: \"DELETE_USER_SUCCESS\",\r\n    DELETE_USER_FAIL: \"DELETE_USER_FAIL\",\r\n\r\n    EDIT_USER_SUCCESS: \"EDIT_USER_SUCCESS\",\r\n    EDIT_USER_FAIL: \"EDIT_USER_FAIL\",\r\n\r\n    FETCH_ALL_USER_SUCCESS: \"FETCH_ALL_USER_SUCCESS\",\r\n    FETCH_ALL_USER_FAIL: \"FETCH_ALL_USER_FAIL\",\r\n\r\n    FETCH_TOP_DOCTOR_SUCCESS: \"FETCH_TOP_DOCTOR_SUCCESS\",\r\n    FETCH_TOP_DOCTOR_FAIL: \"FETCH_TOP_DOCTOR_FAIL\",\r\n\r\n    FETCH_ALL_DOCTOR_SUCCESS: \"FETCH_ALL_DOCTOR_SUCCESS\",\r\n    FETCH_ALL_DOCTOR_FAIL: \"FETCH_ALL_DOCTOR_FAIL\",\r\n\r\n    SAVE_DETAIL_DOCTOR_SUCCESS: \"SAVE_DETAIL_DOCTOR_SUCCESS\",\r\n    SAVE_DETAIL_DOCTOR_FAIL: \"SAVE_DETAIL_DOCTOR_FAIL\",\r\n\r\n    FETCH_ALLCODE_SCHEDULE_SUCCESS: \"FETCH_ALLCODE_SCHEDULE_SUCCESS\",\r\n    FETCH_ALLCODE_SCHEDULE_FAIL: \"FETCH_ALLCODE_SCHEDULE_FAIL\",\r\n\r\n    FETCH_REQUIRED_DOCTOR_INFO_SUCCESS: \"FETCH_REQUIRED_DOCTOR_INFO_SUCCESS\",\r\n    FETCH_REQUIRED_DOCTOR_INFO_FAIL: \"FETCH_REQUIRED_DOCTOR_INFO_FAIL\",\r\n\r\n    FETCH_ALL_SPECIALTY_SUCCESS: \"FETCH_ALL_SPECIALTY_SUCCESS\",\r\n    FETCH_ALL_SPECIALTY_FAIL: \"FETCH_ALL_SPECIALTY_FAIL\",\r\n\r\n    FETCH_ALL_CLINIC_SUCCESS: \"FETCH_ALL_CLINIC_SUCCESS\",\r\n    FETCH_ALL_CLINIC_FAIL: \"FETCH_ALL_CLINIC_FAIL\",\r\n\r\n    FETCH_ALL_DETAIL_DOCTOR_SUCCESS: \"FETCH_ALL_DETAIL_DOCTOR_SUCCESS\",\r\n    FETCH_ALL_DETAIL_DOCTOR_FAIL: \"FETCH_ALL_DETAIL_DOCTOR_FAIL\"\r\n})\r\n\r\nexport default actionTypes;","class CommonUtils {\r\n    static isNumber1 (number) {\r\n        if (number === 1) return true;\r\n        return false;\r\n    }\r\n\r\n    static getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader()\r\n            reader.readAsDataURL(file)\r\n            reader.onload = () => resolve(reader.result)\r\n            reader.onerror = error => reject(error)\r\n        })\r\n    }\r\n}\r\n\r\nexport default CommonUtils;","class KeyCodeUtils {\r\n\r\n    static UP = 38;\r\n\r\n    static DOWN = 40;\r\n\r\n    static TAB = 9;\r\n\r\n    static ENTER = 13;\r\n\r\n    static E = 69;\r\n\r\n    static ESCAPE = 27; \r\n\r\n    static isNavigation(e) {\r\n        return (e >= 33 && e <= 40) || e === 9 || e === 8 || e === 46 || e === 14 || e === 13;\r\n    }\r\n\r\n    static isNumeric(e) {\r\n        return (e >= 48 && e <= 57) || (e >= 96 && e <= 105);\r\n    }\r\n    static isAlphabetic(e) {\r\n        return (e >= 65 && e <= 90);\r\n    }\r\n    static isDecimal(e) {\r\n        return e === 190 || e === 188 || e === 108 || e === 110;\r\n    }\r\n\r\n    static isDash(e) {\r\n        return e === 109 || e === 189;\r\n    }\r\n}\r\n\r\nexport default KeyCodeUtils;","import messages_vi from '../translations/vi.json';\r\nimport messages_en from '../translations/en.json';\r\n\r\nconst flattenMessages = ((nestedMessages, prefix = '') => {\r\n    if (nestedMessages == null) {\r\n        return {}\r\n    }\r\n    return Object.keys(nestedMessages).reduce((messages, key) => {\r\n        const value = nestedMessages[key];\r\n        const prefixedKey = prefix ? `${prefix}.${key}` : key;\r\n\r\n        if (typeof value === 'string') {\r\n            Object.assign(messages, {[prefixedKey]: value})\r\n        } else {\r\n            Object.assign(messages, flattenMessages(value, prefixedKey))\r\n        }\r\n\r\n        return messages\r\n    }, {})\r\n});\r\n\r\nconst messages = {\r\n    'vi': flattenMessages(messages_vi),\r\n    'en': flattenMessages(messages_en),\r\n};\r\n\r\nexport default class LanguageUtils {\r\n    static getMessageByKey(key, lang) {\r\n        return messages[lang][key]\r\n    }\r\n\r\n    static getFlattenedMessages() {\r\n        return messages;\r\n    }\r\n}","import React, { Component, Fragment } from 'react';\r\nimport { FormattedMessage, FormattedTime } from 'react-intl';\r\n\r\nimport CustomScrollBar from '../components/CustomScrollbars';\r\n\r\nimport './CustomToast.scss';\r\n\r\nclass CustomToast extends Component {\r\n\r\n    render() {\r\n        const { titleId, message, messageId, time } = this.props;\r\n        return (\r\n            <Fragment>\r\n                <div className=\"custom-toast\">\r\n                    <div className=\"toast-title\">\r\n                        {time && (\r\n                            <span className=\"date\">\r\n                                <FormattedTime hour='numeric' minute='numeric' second='numeric' hour12={true} value={time} />\r\n                            </span>\r\n                        )}\r\n                        <i className=\"fa fa-fw fa-exclamation-triangle\" />\r\n                        <FormattedMessage id={titleId} />\r\n                    </div>\r\n                    {\r\n                        (message && typeof message === 'object') ?\r\n                            <CustomScrollBar autoHeight={true} autoHeightMin={50} autoHeightMax={100}>\r\n                                {\r\n                                    message.map((msg, index) => {\r\n                                        return (\r\n                                            <Fragment key={index}>\r\n                                                <div className=\"toast-content\">{msg}</div>\r\n                                            </Fragment>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </CustomScrollBar> :\r\n                            <div className=\"toast-content\">\r\n                                {message ? message : (messageId ? (<FormattedMessage id={messageId} />) : null)}\r\n                            </div>\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport class CustomToastCloseButton extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <button type=\"button\" className=\"toast-close\" onClick={this.props.closeToast}>\r\n                <i className=\"fa fa-fw fa-times-circle\" />\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CustomToast;","import EventEmitter from 'events'\r\n\r\nconst _emitter = new EventEmitter();\r\n_emitter.setMaxListeners(0); //unlimited\r\n\r\nexport default _emitter","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { LANGUAGES, CRUD_ACTIONS, CommonUtils } from '../../../utils'\r\nimport * as actions from '../../../store/actions'\r\nimport \"./UserRedux.scss\"\r\nimport LoadingOverlay from 'react-loading-overlay-ts';\r\n\r\nimport Lightbox from 'react-image-lightbox'\r\nimport 'react-image-lightbox/style.css'; // This only needs to be imported once in your app\r\nimport TableManageUser from './TableManageUser';\r\n\r\nclass UserRedux extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            previewImg: '',\r\n            isOpen: false,\r\n\r\n            email: '',\r\n            password: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            phoneNumber: '',\r\n            address: '',\r\n            gender: '',\r\n            position: '',\r\n            role: '',\r\n            avartar: '',\r\n            id: '',\r\n            birthday: '',\r\n            action: CRUD_ACTIONS.CREATE,\r\n            isLoading: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getGenderStart()\r\n        this.props.getRoleStart()\r\n        this.props.getPositionStart()\r\n    }\r\n\r\n    handleChangeImg = async (files) => {\r\n        if (files) {\r\n            let file = files[0]\r\n\r\n            //encode user image\r\n            let b64 = await CommonUtils.getBase64(file)\r\n            let imgUrl = URL.createObjectURL(file)\r\n            this.setState({\r\n                previewImg: imgUrl,\r\n                avartar: b64\r\n            })\r\n        }\r\n    }\r\n\r\n    validateInput = () => {\r\n        let isValid = true;\r\n        const validate = [\r\n            \"email\",\r\n            \"password\",\r\n            \"firstName\",\r\n            \"lastName\",\r\n            \"phoneNumber\",\r\n            \"address\"\r\n        ]\r\n        for (let i = 0; i < validate.length; i++) {\r\n            if (!this.state[validate[i]]) {\r\n                alert(\"Missing parrameter: \" + validate[i])\r\n                isValid = false\r\n                break;\r\n            }\r\n        }\r\n\r\n        return isValid\r\n    }\r\n\r\n    resetInput = () => {\r\n        this.setState({\r\n            email: '',\r\n            password: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            phoneNumber: '',\r\n            address: '',\r\n            gender: '',\r\n            position: '',\r\n            role: '',\r\n            avartar: '',\r\n            id: '',\r\n            action: CRUD_ACTIONS.CREATE,\r\n            previewImg: '',\r\n            birthday: '',\r\n            isLoading: false\r\n        })\r\n    }\r\n\r\n    handleSaveUser = () => {\r\n        const {\r\n            email,\r\n            password,\r\n            firstName,\r\n            lastName,\r\n            phoneNumber,\r\n            address,\r\n            gender,\r\n            role,\r\n            position,\r\n            avartar,\r\n            action,\r\n            id,\r\n            birthday\r\n        } = this.state\r\n\r\n        let isValid = this.validateInput()\r\n        if (!isValid) return\r\n        this.setState({ isLoading: true })\r\n\r\n        if (action === CRUD_ACTIONS.CREATE) {\r\n            this.props.createUser({\r\n                email: email,\r\n                password: password,\r\n                firstName: firstName,\r\n                lastName: lastName,\r\n                address: address,\r\n                phoneNumber: phoneNumber,\r\n                gender: gender,\r\n                roleId: role,\r\n                positionId: position,\r\n                image: avartar || \"\",\r\n                birthday: birthday\r\n            }, this.resetInput)\r\n        } else if (action === CRUD_ACTIONS.EDIT) {\r\n            this.props.editAUser({\r\n                id: id,\r\n                email: email,\r\n                password: password,\r\n                firstName: firstName,\r\n                lastName: lastName,\r\n                address: address,\r\n                phoneNumber: phoneNumber,\r\n                gender: gender,\r\n                roleId: role,\r\n                positionId: position,\r\n                image: avartar || \"\",\r\n                birthday: birthday\r\n            }, this.resetInput)\r\n        }\r\n    }\r\n\r\n    onChangInput = (event) => {\r\n        const { name, value } = event.target\r\n        this.setState({\r\n            ...this.state,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleEditUserFromParent = (user) => {\r\n        let imageBase64 = \"\"\r\n\r\n        //decode user image\r\n        if (user.image) {\r\n            imageBase64 = Buffer.from(user.image, 'base64').toString('binary')\r\n        }\r\n\r\n        this.setState({\r\n            email: user.email,\r\n            password: \"hashcode\",\r\n            firstName: user.firstName,\r\n            lastName: user.lastName,\r\n            phoneNumber: user.phoneNumber,\r\n            address: user.address,\r\n            gender: user.gender,\r\n            position: user.positionId,\r\n            role: user.roleId,\r\n            avartar: \"\",\r\n            previewImg: imageBase64,\r\n            id: user.id,\r\n            birthday: user.birthday,\r\n            action: CRUD_ACTIONS.EDIT\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            previewImg,\r\n            isOpen,\r\n            email,\r\n            password,\r\n            firstName,\r\n            lastName,\r\n            phoneNumber,\r\n            address,\r\n            role,\r\n            position,\r\n            gender,\r\n            birthday,\r\n            action,\r\n            isLoading\r\n        } = this.state\r\n        const { \r\n            language,\r\n            genderRedux: genderArr,\r\n            roleRedux: roleArr,\r\n            positionRedux: positionArr\r\n        } = this.props\r\n        return (\r\n            <LoadingOverlay\r\n                active={isLoading}\r\n                spinner\r\n                text={language === LANGUAGES.VI ? 'Đang gửi...' : 'Sending content...'}\r\n            >\r\n            <div className=\"user-redux-container\">\r\n                <div className=\"title\">\r\n                    <FormattedMessage id=\"manage-user.add\" />\r\n                </div>\r\n                <div className=\"mt-3\" />\r\n                <div className=\"user-redux-body\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">{isLoading && \"Loading ...\"}</div>\r\n                            <div className=\"col-3\">\r\n                                <label>\r\n                                    <FormattedMessage id=\"manage-user.email\" />\r\n                                </label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    value={email}\r\n                                    onChange={this.onChangInput}\r\n                                    disabled={action === CRUD_ACTIONS.EDIT && true}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"col-3\">\r\n                                <label><FormattedMessage id=\"manage-user.password\" /></label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    value={password}\r\n                                    onChange={this.onChangInput}\r\n                                    disabled={action === CRUD_ACTIONS.EDIT && true}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"col-3\">\r\n                                <label><FormattedMessage id=\"manage-user.first-name\" /></label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"firstName\"\r\n                                    value={firstName}\r\n                                    onChange={this.onChangInput}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"col-3\">\r\n                                <label><FormattedMessage id=\"manage-user.last-name\" /></label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"lastName\"\r\n                                    value={lastName}\r\n                                    onChange={this.onChangInput}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"col-3\">\r\n                                <label><FormattedMessage id=\"manage-user.phone-number\" /></label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"phoneNumber\"\r\n                                    value={phoneNumber}\r\n                                    onChange={this.onChangInput}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"col-9\">\r\n                                <label><FormattedMessage id=\"manage-user.address\" /></label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"address\"\r\n                                    value={address}\r\n                                    onChange={this.onChangInput}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"col-3\">\r\n                                <label><FormattedMessage id=\"manage-user.gender\" /></label>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name=\"gender\"\r\n                                    onChange={this.onChangInput}\r\n                                    value={gender}\r\n                                >\r\n                                    <option\r\n                                        value={''}\r\n                                    >\r\n                                        {\r\n                                            language === LANGUAGES.VI ?\r\n                                                'Chọn giới tính' :\r\n                                                'Select gender'\r\n                                        }\r\n                                    </option>\r\n                                    {genderArr && genderArr.length > 0 && (\r\n                                        genderArr.map((item, index) => (\r\n                                            <option\r\n                                                value={item.keyMap}\r\n                                                key={index}\r\n                                            >\r\n                                                {\r\n                                                    language === LANGUAGES.VI ?\r\n                                                        item.valueVi :\r\n                                                        item.valueEn\r\n                                                }\r\n                                            </option>\r\n                                        ))\r\n                                    )}\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"col-3\">\r\n                                <label><FormattedMessage id=\"manage-user.role\" /></label>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name=\"role\"\r\n                                    onChange={this.onChangInput}\r\n                                    value={role}\r\n                                >\r\n                                    <option\r\n                                        value={''}\r\n                                    >\r\n                                        {\r\n                                            language === LANGUAGES.VI ?\r\n                                                'Chọn vai trò' :\r\n                                                'Select role'\r\n                                        }\r\n                                    </option>\r\n                                    {roleArr && roleArr.length > 0 && (\r\n                                        roleArr.map((item, index) => (\r\n                                            <option\r\n                                                key={index}\r\n                                                value={item.keyMap}\r\n                                            >\r\n                                                {\r\n                                                    language === LANGUAGES.VI ?\r\n                                                        item.valueVi :\r\n                                                        item.valueEn\r\n                                                }\r\n                                            </option>\r\n                                        ))\r\n                                    )}\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"col-3\">\r\n                                <label><FormattedMessage id=\"manage-user.position\" /></label>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name=\"position\"\r\n                                    onChange={this.onChangInput}\r\n                                    value={position}\r\n                                >\r\n                                    <option\r\n                                        value={''}\r\n                                    >\r\n                                        {\r\n                                            language === LANGUAGES.VI ?\r\n                                                'Chọn vị trí' :\r\n                                                'Select position'\r\n                                        }\r\n                                    </option>\r\n                                    {positionArr && positionArr.length > 0 && (\r\n                                        positionArr.map((item, index) => (\r\n                                            <option\r\n                                                key={index}\r\n                                                value={item.keyMap}\r\n                                            >\r\n                                                {\r\n                                                    language === LANGUAGES.VI ?\r\n                                                        item.valueVi :\r\n                                                        item.valueEn\r\n                                                }\r\n                                            </option>\r\n                                        ))\r\n                                    )}\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"col-3\">\r\n                                <label><FormattedMessage id=\"manage-user.birthday\" /></label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"birthday\"\r\n                                    value={birthday}\r\n                                    onChange={this.onChangInput}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"col-3\">\r\n                                <label>\r\n                                    <FormattedMessage id=\"manage-user.image\" />\r\n                                </label>\r\n                                <div className=\"preview-image-container\">\r\n                                    <input\r\n                                        type=\"file\"\r\n                                        id=\"previewImg\" hidden\r\n                                        onChange={(e) => this.handleChangeImg(e.target.files)}\r\n                                    />\r\n                                    <label className=\"lable-upload\" htmlFor=\"previewImg\">\r\n                                        <FormattedMessage id=\"manage-user.upload\" />\r\n                                        <i className=\"fas fa-upload  px-3\" />\r\n                                    </label>\r\n                                    <div\r\n                                        className=\"preview-img\"\r\n                                        style={{\r\n                                            backgroundImage: `url(${previewImg})`\r\n                                        }}\r\n                                        onClick={previewImg ? (() => this.setState({ isOpen: true })) : () => { }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-12 my-3\">\r\n                                <button\r\n                                    className={action === CRUD_ACTIONS.EDIT ? \"btn btn-warning\" : \"btn btn-primary\"}\r\n                                    onClick={this.handleSaveUser}\r\n                                >\r\n                                    {action === CRUD_ACTIONS.EDIT ?\r\n                                        <FormattedMessage id=\"manage-user.edit\" /> :\r\n                                        <FormattedMessage id=\"manage-user.save\" />\r\n                                    }\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div className=\"col-12 mb-5\">\r\n                                <TableManageUser\r\n                                    handleEditUserFromParent={this.handleEditUserFromParent}\r\n                                    action={action}\r\n                                    hideMarkdown\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {isOpen && (\r\n                    <Lightbox\r\n                        mainSrc={previewImg}\r\n                        onCloseRequest={() => this.setState({ isOpen: false })}\r\n                    />\r\n                )}\r\n            </div>\r\n            </LoadingOverlay>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language,\r\n        genderRedux: state.admin.genders,\r\n        positionRedux: state.admin.positions,\r\n        roleRedux: state.admin.roles,\r\n        isLoading: state.admin.isLoading,\r\n        users: state.admin.users\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getGenderStart: () => dispatch(actions.fetchGenderStart()),\r\n        getPositionStart: () => dispatch(actions.fetchPostionStart()),\r\n        getRoleStart: () => dispatch(actions.fetchRoleStart()),\r\n        createUser: (data, cb) => dispatch(actions.createUser(data, cb)),\r\n        fetchAllUserRedux: () => dispatch(actions.fetchAllUsersStart()),\r\n        editAUser: (user, cb) => dispatch(actions.editAUser(user, cb))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRedux);\r\n","import React, { Component } from 'react';\r\nimport \"./TableManageUser.scss\"\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../store/actions'\r\n\r\nimport MarkdownIt from 'markdown-it';\r\nimport MdEditor from 'react-markdown-editor-lite';\r\n// import style manually\r\nimport 'react-markdown-editor-lite/lib/index.css';\r\n\r\n// import { getAllUser, createUserService, deleteUser, editUser } from '../../services/userService';\r\n// import ModalUser from './Modal'\r\n// import ModalEditUser from './ModalEditUser';\r\n// import { emitter } from '../../utils/index'\r\n\r\n// emitter xử  lí được cả thằng cha và thằng con\r\n// là 1 cái của nodejs\r\n\r\n// Initialize a markdown parser\r\nconst mdParser = new MarkdownIt(/* Markdown-it options */);\r\n\r\n// Finish!\r\nfunction handleEditorChange({ html, text }) {\r\n    console.log('handleEditorChange', html, text);\r\n}\r\n\r\n\r\nclass TableManageUser extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            userRedux: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchAllUserRedux()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.users !== this.props.users) {\r\n            this.setState({\r\n                userRedux: this.props.users\r\n            })\r\n        }\r\n    }\r\n\r\n    handleDeleteUser = (user) => {\r\n        this.props.deleteAUser(user.id)\r\n    }\r\n\r\n    handleEditUser = (user) => {\r\n        this.props.handleEditUserFromParent(user)\r\n    }\r\n\r\n    render() {\r\n        const { userRedux } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                <table id=\"table-manage-user\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Email</th>\r\n                            <th>First name</th>\r\n                            <th>Last Name</th>\r\n                            <th>Birthday</th>\r\n                            <th>Address</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                        {userRedux && userRedux.map((item, i) => (\r\n                            <tr key={i}>\r\n                                <td>{item.email}</td>\r\n                                <td>{item.firstName}</td>\r\n                                <td>{item.lastName}</td>\r\n                                <td>{item.birthday}</td>\r\n                                <td>{item.address}</td>\r\n                                <td>\r\n                                    <button\r\n                                        className=\"btn-edit\"\r\n                                        onClick={() => {\r\n                                            this.handleEditUser(item)\r\n                                        }}\r\n                                    >\r\n                                        <i className=\"fas fa-pencil-alt \"></i>\r\n                                    </button>\r\n                                    <button className=\"btn-delete\"\r\n                                        onClick={() => this.handleDeleteUser(item)}\r\n                                    >\r\n                                        <i className=\"fas fa-trash\"></i>\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n                {\r\n                    !this.props.hideMarkdown && (\r\n                        <MdEditor style={{ height: '500px' }} renderHTML={text => mdParser.render(text)} onChange={handleEditorChange} />\r\n                    )\r\n                }\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.admin.users\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchAllUserRedux: () => dispatch(actions.fetchAllUsersStart()),\r\n        deleteAUser: (id) => dispatch(actions.deleteAUser(id))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableManageUser);\r\n","export const path = {\r\n    HOME: '/',\r\n    HOMEPAGE: '/home',\r\n    LOGIN: '/login',\r\n    REGISTER: '/register',\r\n    LOG_OUT: '/logout',\r\n    SYSTEM: '/system',\r\n    DOCTOR: '/doctor',\r\n    VERIFY_EMAIL_BOOKING: \"/verify-booking\",\r\n    DETAIL_DOCTOR: \"/detail-doctor/:id\",\r\n    DETAIL_SPECIALTY: \"/detail-specialty/:id\",\r\n    DETAIL_CLINIC: \"/detail-clinic/:id\",\r\n    ALL_DOCTOR: \"/all-doctor\",\r\n    ALL_SPECIALTY: \"/all-specialty\",\r\n    ALL_CLINIC: \"/all-clinic\",\r\n    DETAIL_COVID: \"/detail-covid\"\r\n};\r\n\r\nexport const LANGUAGES = {\r\n    VI: 'vi',\r\n    EN: 'en'\r\n};\r\n\r\nexport const CRUD_ACTIONS = {\r\n    CREATE: \"CREATE\",\r\n    READ: \"READ\",\r\n    EDIT: \"EDIT\",\r\n    DELETE: \"DELETE\"\r\n};\r\n\r\nexport const dateFormat = {\r\n    SEND_TO_SERVER: 'DD/MM/YYYY'\r\n};\r\n\r\nexport const YesNoObj = {\r\n    YES: 'Y',\r\n    NO: 'N'\r\n}\r\n\r\nexport const USER_ROLE = {\r\n    ADMIN: \"R1\",\r\n    DOCTOR: \"R2\",\r\n    PATIENT: \"R3\"\r\n}","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { LANGUAGES } from '../../../../utils/constant';\r\nimport './AllDoctor.scss'\r\nimport * as actions from '../../../../store/actions'\r\nimport { withRouter } from 'react-router'\r\nimport HomeHeader from '../../HomeHeader'\r\nimport HomeFooter from '../../HomeFooter'\r\nimport Select from 'react-select'\r\nimport { FormattedMessage } from 'react-intl'\r\n\r\n\r\nclass AllDoctor extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            listDoctor: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { allDoctorsDetail } = this.props\r\n        if (allDoctorsDetail.length === 0) {\r\n            this.props.fetchAllDetailDoctor()\r\n        }\r\n\r\n        if (allDoctorsDetail.length > 0) {\r\n            this.setState({\r\n                listDoctor: this.buidDataSelect(allDoctorsDetail)\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    async componentDidUpdate(prevProps) {\r\n        const { language, allDoctorsDetail } = this.props\r\n        if (prevProps.allDoctorsDetail !== allDoctorsDetail) {\r\n            this.setState({\r\n                listDoctor: this.buidDataSelect(allDoctorsDetail)\r\n            })\r\n        }\r\n\r\n        if (prevProps.language !== language) {\r\n            this.setState({\r\n                listDoctor: this.buidDataSelect(allDoctorsDetail)\r\n            })\r\n        }\r\n    }\r\n\r\n    handleViewDetailClinic = (item) => {\r\n        this.props.history.push(`/detail-doctor/${item.id}`)\r\n    }\r\n\r\n    buidDataSelect = (allDoctorsDetail) => {\r\n        const { language } = this.props\r\n        let result = []\r\n\r\n        allDoctorsDetail.map((item, i) => {\r\n            let obj = {}\r\n            let name = language === LANGUAGES.VI ?\r\n                `${item.lastName} ${item.firstName}` :\r\n                `${item.firstName} ${item.lastName}`\r\n            obj.label = name\r\n            obj.value = item.id\r\n            result.push(obj)\r\n            return item\r\n        })\r\n\r\n        return result\r\n    }\r\n\r\n\r\n    handleChangeSelect = (item) => {\r\n        this.props.history.push(`/detail-doctor/${item.value}`)\r\n    }\r\n\r\n\r\n    render() {\r\n        const { allDoctorsDetail, language } = this.props\r\n        const { listDoctor } = this.state\r\n\r\n        return (\r\n            <>\r\n                <HomeHeader />\r\n                <div style={{ marginTop: \"120px\" }} />\r\n                <Select\r\n                    onChange={this.handleChangeSelect}\r\n                    options={listDoctor}\r\n                    className=\"select\"\r\n                    placeholder={<FormattedMessage id=\"manage-doctor.choose-a-doctor\" />}\r\n                />\r\n                <div className=\"all-doctor-container\">\r\n                    {\r\n                        allDoctorsDetail && allDoctorsDetail.length > 0 ? allDoctorsDetail.map((item, index) => {\r\n                            let name = language === LANGUAGES.VI ?\r\n                                `${item.lastName} ${item.firstName}` :\r\n                                `${item.firstName} ${item.lastName}`\r\n                            let imgBase64 = Buffer.from(item.image, 'base64').toString('binary')\r\n                            let position = language === LANGUAGES.VI ?\r\n                                `${item.positionData.valueVi}` :\r\n                                `${item.positionData.valueEn}`\r\n                            return (\r\n                                <div\r\n                                    className=\"all-doctor-content\"\r\n                                    key={index}\r\n                                    onClick={() => this.handleViewDetailClinic(item)}\r\n                                >\r\n                                    <div\r\n                                        className=\"content-left\"\r\n                                        style={{ backgroundImage: `url(${imgBase64})` }}\r\n                                    />\r\n\r\n                                    <div className='content-right'>\r\n                                        <span className=\"a-d-title\">\r\n                                            {position} | {name}\r\n                                        </span>\r\n                                        <span className=\"a-d-subTitle\">\r\n                                            <i className=\"fas fa-map-marker-alt\" />\r\n                                            <span>\r\n                                                {item.address}\r\n                                            </span>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }) : (\r\n                            <div className='empty_content'>\r\n                                No data<br/>\r\n                                <span class=\"iconify\" data-icon=\"icomoon-free:file-empty\"></span>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n                <HomeFooter />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language,\r\n        allDoctorsDetail: state.admin.allDoctorsDetail\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchAllDetailDoctor: () => dispatch(actions.fetchAllDetailDoctor())\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AllDoctor));","import axios from '../axios'\r\n\r\nexport const handleLogin = (userEmail, userPassword) => {\r\n    return axios.post('/api/login', {\r\n        email: userEmail,\r\n        password: userPassword\r\n    })\r\n}\r\n\r\nexport const getAllUser = (userId) => {\r\n    return axios.get(`/api/get-all-users?id=${userId}`)\r\n}\r\n\r\nexport const createUserService = (data) => {\r\n    return axios.post(\"/api/create-new-user\", data);\r\n}\r\n\r\nexport const deleteUser = (userId) => {\r\n    return axios.delete('/api/delete-user', {\r\n        data: {\r\n            id: userId\r\n        }\r\n    })\r\n}\r\n\r\nexport const editUser = (userInfo) => {\r\n    return axios.put('/api/edit-user', userInfo)\r\n}\r\n\r\nexport const getAllCodeService = (inputType) => {\r\n    return axios.get(`/api/allcode?type=${inputType}`)\r\n}\r\n\r\nexport const getTopDoctorHomeService = (limit) => {\r\n    return axios.get(`/api/top-doctor-home?limit=${limit}`)\r\n}\r\n\r\nexport const getAllDoctors = () => {\r\n    return axios.get(\"/api/get-all-doctors\")\r\n}\r\n\r\nexport const saveDoctorInfoService = (data) => {\r\n    return axios.post(`/api/save-info-doctors`, data)\r\n}\r\n\r\nexport const getDetailInfoDoctor = (id) => {\r\n    return axios.get(`/api/get-detail-doctors-by-id?id=${id}`)\r\n}\r\n\r\nexport const saveBulkSchedule = (data) => {\r\n    return axios.post(`/api/bulk-create-schedule`, data)\r\n}\r\n\r\nexport const getScheduleDoctorByDate = (doctorId, date) => {\r\n    return axios.get(`/api/get-schedule-doctors-by-date?doctorId=${doctorId}&date=${date}`)\r\n}\r\n\r\nexport const getExtraInfoDoctorById = (id) => {\r\n    return axios.get(`/api/get-extra-info-doctors-by-id?doctorId=${id}`)\r\n}\r\n\r\nexport const getProfileDoctorById = (id) => {\r\n    return axios.get(`/api/get-profile-doctors-by-id?doctorId=${id}`)\r\n}\r\n\r\nexport const postBookingAppointment = (data) => {\r\n    return axios.post(`/api/patient-book-schedule`, data)\r\n}\r\n\r\nexport const postVerifyBooking = (data) => {\r\n    return axios.post(`/api/verifying-book-appointment`, data)\r\n}\r\n\r\nexport const createNewSpecialty = (data) => {\r\n    return axios.post(`/api/create-a-new-specialty`, data)\r\n}\r\n\r\nexport const getTopSpecialties = (limit) => {\r\n    return axios.get(`/api/get-top-specialties-home?limit=${limit}`)\r\n}\r\n\r\nexport const getAllSpecialties = () => {\r\n    return axios.get(\"/api/get-all-specialties\")\r\n}\r\n\r\nexport const getDetailSpecialtyById = (data) => {\r\n    return axios.get(`/api/get-detail-specialty-by-id/?id=${data.id}&location=${data.location}`)\r\n}\r\n\r\nexport const deleteSpecialty = (id) => {\r\n    return axios.delete('/api/delete-specialty', {\r\n        data: {\r\n            id: id\r\n        }\r\n    })\r\n}\r\n\r\nexport const editSpecialty = (data) => {\r\n    return axios.put('/api/edit-specialty', data)\r\n}\r\n\r\nexport const createNewClinic = (data) => {\r\n    return axios.post(`/api/create-a-new-clinic`, data)\r\n}\r\n\r\nexport const getTopClinics = (limit) => {\r\n    return axios.get(`/api/get-top-clinics-home?limit=${limit}`)\r\n}\r\n\r\nexport const getAllClinics = () => {\r\n    return axios.get(\"/api/get-all-clinics\")\r\n}\r\n\r\nexport const getDetailClinicById = (id) => {\r\n    return axios.get(`/api/get-detail-clinic-by-id/?id=${id}`)\r\n}\r\n\r\nexport const deleteClinic = (id) => {\r\n    return axios.delete('/api/delete-clinic', {\r\n        data: {\r\n            id: id\r\n        }\r\n    })\r\n}\r\n\r\nexport const editClinic = (data) => {\r\n    return axios.put('/api/edit-clinic', data)\r\n}\r\n\r\nexport const getAllPatient = (id, date) => {\r\n    return axios.get(`/api/get-list-patient-by-doctor/?id=${id}&date=${date}`)\r\n}\r\n\r\nexport const sendEmailRemedyService = (data) => {\r\n    return axios.post(`/api/send-remedy`, data)\r\n}\r\n\r\nexport const getAllDoctorDetail = () => {\r\n    return axios.get(\"/api/get-all-doctors-detail\")\r\n}","import actionTypes from './actionTypes';\r\n\r\nexport const appStartUpComplete = () => ({\r\n    type: actionTypes.APP_START_UP_COMPLETE\r\n});\r\n\r\nexport const setContentOfConfirmModal = (contentOfConfirmModal) => ({\r\n    type: actionTypes.SET_CONTENT_OF_CONFIRM_MODAL,\r\n    contentOfConfirmModal: contentOfConfirmModal\r\n});\r\n\r\nexport const changeLanguageApp = (languageInput) => ({\r\n    type: actionTypes.CHANGE_LANGUAGE,\r\n    language: languageInput\r\n})","import actionTypes from './actionTypes';\r\n\r\nexport const addUserSuccess = () => ({\r\n    type: actionTypes.ADD_USER_SUCCESS\r\n})\r\n\r\nexport const userLoginSuccess = (userInfo) => ({\r\n    type: actionTypes.USER_LOGIN_SUCCESS,\r\n    userInfo: userInfo\r\n})\r\n\r\nexport const userLoginFail = () => ({\r\n    type: actionTypes.USER_LOGIN_FAIL\r\n})\r\n\r\nexport const processLogout = () => {\r\n    window.location.href = \"/home\"\r\n    window.localStorage.clear()\r\n    return ({\r\n        type: actionTypes.PROCESS_LOGOUT\r\n    })\r\n}\r\n\r\nexport const updateUserInfo = (payload) => ({\r\n    type: actionTypes.UPDATE_USER_INFO,\r\n    payload: payload\r\n})","import actionTypes from './actionTypes';\r\nimport {\r\n    getAllCodeService,\r\n    createUserService,\r\n    getAllUser,\r\n    deleteUser,\r\n    editUser,\r\n    getTopDoctorHomeService,\r\n    getAllDoctors,\r\n    saveDoctorInfoService,\r\n    getAllSpecialties,\r\n    getAllClinics,\r\n    getAllDoctorDetail\r\n} from '../../services/userService'\r\nimport { toast } from 'react-toastify'\r\n\r\nexport const fetchGenderStart = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch({\r\n                type: actionTypes.FETCH_INFO_START\r\n            })\r\n\r\n            let res = await getAllCodeService('GENDER')\r\n            if (res && res.errCode === 0) {\r\n                dispatch(fetchGenderSuccess(res.data))\r\n            } else {\r\n                dispatch(fetchGenderFailed())\r\n            }\r\n        } catch (e) {\r\n            dispatch(fetchGenderFailed())\r\n            console.log(\"Fetch data failed\", e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchPostionStart = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n\r\n            let res = await getAllCodeService('POSITION')\r\n            if (res && res.errCode === 0) {\r\n                dispatch(fetchPositionSuccess(res.data))\r\n            } else {\r\n                dispatch(fetchPositionFailed())\r\n            }\r\n        } catch (e) {\r\n            dispatch(fetchPositionFailed())\r\n            console.log(\"Fetch data failed\", e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchRoleStart = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n\r\n            let res = await getAllCodeService('ROLE')\r\n            if (res && res.errCode === 0) {\r\n                dispatch(fetchRoleSuccess(res.data))\r\n            } else {\r\n                dispatch(fetchRoleFailed())\r\n            }\r\n        } catch (e) {\r\n            dispatch(fetchRoleFailed())\r\n            console.log(\"Fetch data failed\", e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchGenderSuccess = (data) => ({\r\n    type: actionTypes.FETCH_GENDER_SUCCESS,\r\n    data: data\r\n})\r\n\r\nexport const fetchGenderFailed = () => ({\r\n    type: actionTypes.FETCH_GENDER_FAIL\r\n})\r\n\r\nexport const fetchPositionSuccess = (data) => ({\r\n    type: actionTypes.FETCH_POSITION_SUCCESS,\r\n    data: data\r\n})\r\n\r\nexport const fetchPositionFailed = () => ({\r\n    type: actionTypes.FETCH_POSITION_FAIL\r\n})\r\n\r\nexport const fetchRoleSuccess = (data) => ({\r\n    type: actionTypes.FETCH_ROLE_SUCCESS,\r\n    data: data\r\n})\r\n\r\nexport const fetchRoleFailed = () => ({\r\n    type: actionTypes.FETCH_ROLE_FAIL\r\n})\r\n\r\nexport const createUser = (data, cb) => {\r\n    return async (dispatch) => {\r\n        try {\r\n\r\n            let res = await createUserService(data)\r\n            if (res && res.errCode === 0) {\r\n                toast.success(\"Create a user successed!\")\r\n                dispatch(saveUserSuccess(res.data))\r\n                dispatch(fetchAllUsersStart())\r\n                cb()\r\n            } else {\r\n                toast.error(\"Something went rong :( !\")\r\n                dispatch(saveUserFail())\r\n            }\r\n        } catch (e) {\r\n            toast.error(\"Something went rong :( !\")\r\n            dispatch(saveUserFail())\r\n            console.log(\"Fetch data failed\", e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const saveUserSuccess = () => ({\r\n    type: actionTypes.CREATE_USER_SUCCESS\r\n})\r\n\r\nexport const saveUserFail = () => ({\r\n    type: actionTypes.CREATE_USER_FAIL\r\n})\r\n\r\nexport const fetchAllUsersStart = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n\r\n            let res = await getAllUser('ALL')\r\n            if (res && res.errCode === 0) {\r\n                dispatch(fetchAllUsersnSuccess(res.users.reverse()))\r\n            } else {\r\n                dispatch(fetchAllUsersnFailed())\r\n            }\r\n        } catch (e) {\r\n            dispatch(fetchAllUsersnFailed())\r\n            console.log(\"Fetch data failed\", e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchAllUsersnSuccess = (data) => ({\r\n    type: actionTypes.FETCH_ALL_USER_SUCCESS,\r\n    users: data\r\n})\r\n\r\nexport const fetchAllUsersnFailed = () => ({\r\n    type: actionTypes.FETCH_ALL_USER_FAIL\r\n})\r\n\r\nexport const deleteAUser = (userId) => {\r\n    return async (dispatch) => {\r\n        try {\r\n\r\n            let res = await deleteUser(userId)\r\n            if (res && res.errCode === 0) {\r\n                toast.warn(\"Delete user successed!\")\r\n                dispatch(deleteUserSuccess(res.data))\r\n                dispatch(fetchAllUsersStart())\r\n            } else {\r\n                toast.error(\"Something went rong :( !\")\r\n                dispatch(deleteUserFail())\r\n            }\r\n        } catch (e) {\r\n            toast.error(\"Something went rong :( !\")\r\n            dispatch(deleteUserFail())\r\n            console.log(\"Fetch data failed\", e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteUserSuccess = () => ({\r\n    type: actionTypes.DELETE_USER_SUCCESS\r\n})\r\n\r\nexport const deleteUserFail = () => ({\r\n    type: actionTypes.DELETE_USER_FAIL\r\n})\r\n\r\nexport const editAUser = (data, cb) => {\r\n    return async (dispatch) => {\r\n        try {\r\n\r\n            let res = await editUser(data)\r\n            if (res && res.errCode === 0) {\r\n                toast.warn(\"Update user successed!\")\r\n                dispatch(editUserSuccess(res.data))\r\n                dispatch(fetchAllUsersStart())\r\n                cb()\r\n            } else {\r\n                toast.error(\"Update user info failed :( !\")\r\n                dispatch(editUserFail())\r\n            }\r\n        } catch (e) {\r\n            toast.error(\"Update user info failed :( !\")\r\n            dispatch(editUserFail())\r\n            console.log(\"Fetch data failed\", e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const editUserSuccess = () => ({\r\n    type: actionTypes.EDIT_USER_SUCCESS\r\n})\r\n\r\nexport const editUserFail = () => ({\r\n    type: actionTypes.EDIT_USER_FAIL\r\n})\r\n\r\nexport const fetchTopDoctor = (limit) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let res = await getTopDoctorHomeService(limit)\r\n            if (res && res.errCode === 0) {\r\n                dispatch({\r\n                    type: actionTypes.FETCH_TOP_DOCTOR_SUCCESS,\r\n                    data: res.data\r\n                })\r\n            } else {\r\n                toast.error(\"Something went rong :( !\")\r\n                dispatch({\r\n                    type: actionTypes.FETCH_TOP_DOCTOR_FAIL\r\n                })\r\n            }\r\n        } catch (e) {\r\n            console.log(\"Fetch data failed\", e)\r\n            toast.error(\"Something went rong :( !\")\r\n            dispatch({\r\n                type: actionTypes.FETCH_TOP_DOCTOR_FAIL\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchALLDoctor = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let res = await getAllDoctors()\r\n            if (res && res.errCode === 0) {\r\n                dispatch({\r\n                    type: actionTypes.FETCH_ALL_DOCTOR_SUCCESS,\r\n                    data: res.data\r\n                })\r\n            } else {\r\n                toast.error(\"Fetch data failed :( !\")\r\n                dispatch({\r\n                    type: actionTypes.FETCH_ALL_DOCTOR_FAIL\r\n                })\r\n            }\r\n        } catch (e) {\r\n            console.log(\"Fetch data failed\", e)\r\n            toast.error(\"Fetch data failed :( !\")\r\n            dispatch({\r\n                type: actionTypes.FETCH_ALL_DOCTOR_FAIL\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const saveInfoDoctorRedux = (data) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let res = await saveDoctorInfoService(data)\r\n            if (res && res.errCode === 0) {\r\n                toast.success(\"Saved data!\")\r\n                dispatch({\r\n                    type: actionTypes.SAVE_DETAIL_DOCTOR_SUCCESS\r\n                })\r\n            } else {\r\n                toast.error(\"Save data failed :( !\")\r\n                dispatch({ type: actionTypes.SAVE_DETAIL_DOCTOR_FAIL })\r\n            }\r\n        } catch (e) {\r\n            console.log(\"Fetch data failed\", e)\r\n            toast.error(\"Save data failed :( !\")\r\n            dispatch({ type: actionTypes.SAVE_DETAIL_DOCTOR_FAIL })\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchAllcodeSchedule = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let res = await getAllCodeService(\"TIME\")\r\n            if (res && res.errCode === 0) {\r\n                dispatch({\r\n                    type: actionTypes.FETCH_ALLCODE_SCHEDULE_SUCCESS,\r\n                    data: res.data\r\n                })\r\n            } else {\r\n                toast.error(\"Fetch data failed :( !\")\r\n                dispatch({\r\n                    type: actionTypes.FETCH_ALLCODE_SCHEDULE_FAIL\r\n                })\r\n            }\r\n        } catch (e) {\r\n            console.log(\"Fetch data failed\", e)\r\n            toast.error(\"Fetch data failed :( !\")\r\n            dispatch({\r\n                type: actionTypes.FETCH_ALLCODE_SCHEDULE_FAIL\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const getDoctorRequiredInfo = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch({ type: actionTypes.FETCH_INFO_START })\r\n\r\n            let resPrice = await getAllCodeService('PRICE')\r\n            let resPayment = await getAllCodeService('PAYMENT')\r\n            let resProvince = await getAllCodeService('PROVINCE')\r\n            let resSpecialty = await getAllSpecialties()\r\n            let resClinic = await getAllClinics()\r\n            if (\r\n                resPrice && resPrice.errCode === 0 &&\r\n                resPayment && resPayment.errCode === 0 &&\r\n                resProvince && resProvince.errCode === 0 &&\r\n                resSpecialty && resSpecialty.errCode === 0 &&\r\n                resClinic && resClinic.errCode === 0\r\n            ) {\r\n                let data = {\r\n                    resPrice: resPrice.data,\r\n                    resProvince: resProvince.data,\r\n                    resPayment: resPayment.data,\r\n                    resSpecialty: resSpecialty.data,\r\n                    resClinic: resClinic.data\r\n                }\r\n                dispatch({\r\n                    type: actionTypes.FETCH_REQUIRED_DOCTOR_INFO_SUCCESS,\r\n                    data: data\r\n                })\r\n            } else {\r\n                dispatch({\r\n                    type: actionTypes.FETCH_REQUIRED_DOCTOR_INFO_FAIL\r\n                })\r\n            }\r\n        } catch (e) {\r\n            dispatch({\r\n                type: actionTypes.FETCH_REQUIRED_DOCTOR_INFO_FAIL\r\n            })\r\n            console.log(\"Fetch required doctor info failed\", e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchAllSpecialty = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let res = await getAllSpecialties()\r\n            if (res && res.errCode === 0) {\r\n                dispatch({\r\n                    type: actionTypes.FETCH_ALL_SPECIALTY_SUCCESS,\r\n                    data: res.data\r\n                })\r\n            } else {\r\n                toast.error(\"Fetch data failed :( !\")\r\n                dispatch({\r\n                    type: actionTypes.FETCH_ALL_SPECIALTY_FAIL\r\n                })\r\n            }\r\n        } catch (e) {\r\n            console.log(\"Fetch data failed\", e)\r\n            toast.error(\"Fetch data failed :( !\")\r\n            dispatch({\r\n                type: actionTypes.FETCH_ALL_SPECIALTY_FAIL\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchAllClinic = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let res = await getAllClinics()\r\n            if (res && res.errCode === 0) {\r\n                dispatch({\r\n                    type: actionTypes.FETCH_ALL_CLINIC_SUCCESS,\r\n                    data: res.data\r\n                })\r\n            } else {\r\n                toast.error(\"Fetch data clinic failed :( !\")\r\n                dispatch({\r\n                    type: actionTypes.FETCH_ALL_CLINIC_FAIL\r\n                })\r\n            }\r\n        } catch (e) {\r\n            console.log(\"Fetch data clinic failed\", e)\r\n            toast.error(\"Fetch data clinic failed :( !\")\r\n            dispatch({\r\n                type: actionTypes.FETCH_ALL_CLINIC_FAIL\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchAllDetailDoctor = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let res = await getAllDoctorDetail()\r\n            if (res && res.errCode === 0) {\r\n                dispatch({\r\n                    type: actionTypes.FETCH_ALL_DETAIL_DOCTOR_SUCCESS,\r\n                    data: res.data\r\n                })\r\n            } else {\r\n                toast.error(\"Fetch data failed :( !\")\r\n                dispatch({\r\n                    type: actionTypes.FETCH_ALL_DETAIL_DOCTOR_FAIL\r\n                })\r\n            }\r\n        } catch (e) {\r\n            console.log(\"Fetch detail data failed\", e)\r\n            toast.error(\"Fetch detail data failed :( !\")\r\n            dispatch({\r\n                type: actionTypes.FETCH_ALL_DETAIL_DOCTOR_FAIL\r\n            })\r\n        }\r\n    }\r\n}\r\n","import axios from 'axios';\r\n// import _ from 'lodash';\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_SERVER_URL,\r\n    // withCredentials: true\r\n});\r\n\r\ninstance.interceptors.response.use(\r\n    (response) => {\r\n        // Thrown error for request with OK status code\r\n        const { data } = response;\r\n        return data;\r\n    },\r\n);\r\n\r\nexport default instance;\r\n","var map = {\n\t\"./ad/ad-all.geo.json\": [\n\t\t388,\n\t\t3\n\t],\n\t\"./ae/ae-all.geo.json\": [\n\t\t389,\n\t\t4\n\t],\n\t\"./af/af-all.geo.json\": [\n\t\t390,\n\t\t5\n\t],\n\t\"./ag/ag-all.geo.json\": [\n\t\t391,\n\t\t6\n\t],\n\t\"./al/al-all.geo.json\": [\n\t\t392,\n\t\t7\n\t],\n\t\"./am/am-all.geo.json\": [\n\t\t393,\n\t\t8\n\t],\n\t\"./ao/ao-all.geo.json\": [\n\t\t394,\n\t\t9\n\t],\n\t\"./ar/ar-all.geo.json\": [\n\t\t395,\n\t\t10\n\t],\n\t\"./as/as-all.geo.json\": [\n\t\t396,\n\t\t11\n\t],\n\t\"./at/at-all.geo.json\": [\n\t\t397,\n\t\t12\n\t],\n\t\"./au/au-all.geo.json\": [\n\t\t398,\n\t\t13\n\t],\n\t\"./az/az-all.geo.json\": [\n\t\t399,\n\t\t14\n\t],\n\t\"./ba/ba-all.geo.json\": [\n\t\t400,\n\t\t15\n\t],\n\t\"./bb/bb-all.geo.json\": [\n\t\t401,\n\t\t16\n\t],\n\t\"./bd/bd-all.geo.json\": [\n\t\t402,\n\t\t17\n\t],\n\t\"./be/be-all.geo.json\": [\n\t\t403,\n\t\t18\n\t],\n\t\"./bf/bf-all.geo.json\": [\n\t\t404,\n\t\t19\n\t],\n\t\"./bg/bg-all.geo.json\": [\n\t\t405,\n\t\t20\n\t],\n\t\"./bh/bh-all.geo.json\": [\n\t\t406,\n\t\t21\n\t],\n\t\"./bi/bi-all-all.geo.json\": [\n\t\t407,\n\t\t22\n\t],\n\t\"./bi/bi-all.geo.json\": [\n\t\t408,\n\t\t23\n\t],\n\t\"./bj/bj-all.geo.json\": [\n\t\t409,\n\t\t24\n\t],\n\t\"./bn/bn-all.geo.json\": [\n\t\t410,\n\t\t25\n\t],\n\t\"./bo/bo-all.geo.json\": [\n\t\t411,\n\t\t26\n\t],\n\t\"./br/br-all.geo.json\": [\n\t\t412,\n\t\t27\n\t],\n\t\"./bs/bs-all.geo.json\": [\n\t\t413,\n\t\t28\n\t],\n\t\"./bt/bt-all.geo.json\": [\n\t\t414,\n\t\t29\n\t],\n\t\"./bw/bw-all.geo.json\": [\n\t\t415,\n\t\t30\n\t],\n\t\"./by/by-all.geo.json\": [\n\t\t416,\n\t\t31\n\t],\n\t\"./bz/bz-all.geo.json\": [\n\t\t417,\n\t\t32\n\t],\n\t\"./ca/ca-ab-all.geo.json\": [\n\t\t418,\n\t\t33\n\t],\n\t\"./ca/ca-all-all.geo.json\": [\n\t\t419,\n\t\t34\n\t],\n\t\"./ca/ca-all.geo.json\": [\n\t\t420,\n\t\t35\n\t],\n\t\"./ca/ca-bc-all.geo.json\": [\n\t\t421,\n\t\t36\n\t],\n\t\"./ca/ca-mb-all.geo.json\": [\n\t\t422,\n\t\t37\n\t],\n\t\"./ca/ca-nb-all.geo.json\": [\n\t\t423,\n\t\t38\n\t],\n\t\"./ca/ca-nf-all.geo.json\": [\n\t\t424,\n\t\t39\n\t],\n\t\"./ca/ca-ns-all.geo.json\": [\n\t\t425,\n\t\t40\n\t],\n\t\"./ca/ca-nt-all.geo.json\": [\n\t\t426,\n\t\t41\n\t],\n\t\"./ca/ca-nu-all.geo.json\": [\n\t\t427,\n\t\t42\n\t],\n\t\"./ca/ca-on-all.geo.json\": [\n\t\t428,\n\t\t43\n\t],\n\t\"./ca/ca-pe-all.geo.json\": [\n\t\t429,\n\t\t44\n\t],\n\t\"./ca/ca-qc-all.geo.json\": [\n\t\t430,\n\t\t45\n\t],\n\t\"./ca/ca-sk-all.geo.json\": [\n\t\t431,\n\t\t46\n\t],\n\t\"./ca/ca-yt-all.geo.json\": [\n\t\t432,\n\t\t47\n\t],\n\t\"./cd/cd-all.geo.json\": [\n\t\t433,\n\t\t48\n\t],\n\t\"./cf/cf-all.geo.json\": [\n\t\t434,\n\t\t49\n\t],\n\t\"./cg/cg-all.geo.json\": [\n\t\t435,\n\t\t50\n\t],\n\t\"./ch/ch-all.geo.json\": [\n\t\t436,\n\t\t51\n\t],\n\t\"./ci/ci-all.geo.json\": [\n\t\t437,\n\t\t52\n\t],\n\t\"./ck/ck-all.geo.json\": [\n\t\t438,\n\t\t53\n\t],\n\t\"./cl/cl-all.geo.json\": [\n\t\t439,\n\t\t54\n\t],\n\t\"./cm/cm-all.geo.json\": [\n\t\t440,\n\t\t55\n\t],\n\t\"./cn/cn-all.geo.json\": [\n\t\t441,\n\t\t56\n\t],\n\t\"./co/co-all.geo.json\": [\n\t\t442,\n\t\t57\n\t],\n\t\"./cr/cr-all.geo.json\": [\n\t\t443,\n\t\t58\n\t],\n\t\"./cu/cu-all.geo.json\": [\n\t\t444,\n\t\t59\n\t],\n\t\"./cv/cv-all.geo.json\": [\n\t\t445,\n\t\t60\n\t],\n\t\"./cy/cy-all.geo.json\": [\n\t\t446,\n\t\t61\n\t],\n\t\"./cz/cz-all.geo.json\": [\n\t\t447,\n\t\t62\n\t],\n\t\"./de/de-all-all.geo.json\": [\n\t\t448,\n\t\t63\n\t],\n\t\"./de/de-all.geo.json\": [\n\t\t449,\n\t\t64\n\t],\n\t\"./de/de-bb-all-all.geo.json\": [\n\t\t450,\n\t\t65\n\t],\n\t\"./de/de-bb-all.geo.json\": [\n\t\t451,\n\t\t66\n\t],\n\t\"./de/de-be-all-all.geo.json\": [\n\t\t452,\n\t\t67\n\t],\n\t\"./de/de-be-all.geo.json\": [\n\t\t453,\n\t\t68\n\t],\n\t\"./de/de-bw-all-all.geo.json\": [\n\t\t454,\n\t\t69\n\t],\n\t\"./de/de-bw-all.geo.json\": [\n\t\t455,\n\t\t70\n\t],\n\t\"./de/de-by-all-all.geo.json\": [\n\t\t456,\n\t\t71\n\t],\n\t\"./de/de-by-all.geo.json\": [\n\t\t457,\n\t\t72\n\t],\n\t\"./de/de-hb-all-all.geo.json\": [\n\t\t458,\n\t\t73\n\t],\n\t\"./de/de-hb-all.geo.json\": [\n\t\t459,\n\t\t74\n\t],\n\t\"./de/de-he-all-all.geo.json\": [\n\t\t460,\n\t\t75\n\t],\n\t\"./de/de-he-all.geo.json\": [\n\t\t461,\n\t\t76\n\t],\n\t\"./de/de-hh-all-all.geo.json\": [\n\t\t462,\n\t\t77\n\t],\n\t\"./de/de-hh-all.geo.json\": [\n\t\t463,\n\t\t78\n\t],\n\t\"./de/de-mv-all-all.geo.json\": [\n\t\t464,\n\t\t79\n\t],\n\t\"./de/de-mv-all.geo.json\": [\n\t\t465,\n\t\t80\n\t],\n\t\"./de/de-ni-all-all.geo.json\": [\n\t\t466,\n\t\t81\n\t],\n\t\"./de/de-ni-all.geo.json\": [\n\t\t467,\n\t\t82\n\t],\n\t\"./de/de-nw-all-all.geo.json\": [\n\t\t468,\n\t\t83\n\t],\n\t\"./de/de-nw-all.geo.json\": [\n\t\t469,\n\t\t84\n\t],\n\t\"./de/de-rp-all-all.geo.json\": [\n\t\t470,\n\t\t85\n\t],\n\t\"./de/de-rp-all.geo.json\": [\n\t\t471,\n\t\t86\n\t],\n\t\"./de/de-sh-all-all.geo.json\": [\n\t\t472,\n\t\t87\n\t],\n\t\"./de/de-sh-all.geo.json\": [\n\t\t473,\n\t\t88\n\t],\n\t\"./de/de-sl-all-all.geo.json\": [\n\t\t474,\n\t\t89\n\t],\n\t\"./de/de-sl-all.geo.json\": [\n\t\t475,\n\t\t90\n\t],\n\t\"./de/de-sn-all-all.geo.json\": [\n\t\t476,\n\t\t91\n\t],\n\t\"./de/de-sn-all.geo.json\": [\n\t\t477,\n\t\t92\n\t],\n\t\"./de/de-st-all-all.geo.json\": [\n\t\t478,\n\t\t93\n\t],\n\t\"./de/de-st-all.geo.json\": [\n\t\t479,\n\t\t94\n\t],\n\t\"./de/de-th-all-all.geo.json\": [\n\t\t480,\n\t\t95\n\t],\n\t\"./de/de-th-all.geo.json\": [\n\t\t481,\n\t\t96\n\t],\n\t\"./dj/dj-all.geo.json\": [\n\t\t482,\n\t\t97\n\t],\n\t\"./dk/dk-all.geo.json\": [\n\t\t483,\n\t\t98\n\t],\n\t\"./dm/dm-all.geo.json\": [\n\t\t484,\n\t\t99\n\t],\n\t\"./do/do-all.geo.json\": [\n\t\t485,\n\t\t100\n\t],\n\t\"./dz/dz-all.geo.json\": [\n\t\t486,\n\t\t101\n\t],\n\t\"./ec/ec-all.geo.json\": [\n\t\t487,\n\t\t102\n\t],\n\t\"./ee/ee-all.geo.json\": [\n\t\t488,\n\t\t103\n\t],\n\t\"./eg/eg-all.geo.json\": [\n\t\t489,\n\t\t104\n\t],\n\t\"./eh/eh-all.geo.json\": [\n\t\t490,\n\t\t105\n\t],\n\t\"./er/er-all.geo.json\": [\n\t\t491,\n\t\t106\n\t],\n\t\"./es/es-all.geo.json\": [\n\t\t492,\n\t\t107\n\t],\n\t\"./et/et-all.geo.json\": [\n\t\t493,\n\t\t108\n\t],\n\t\"./fi/fi-all.geo.json\": [\n\t\t494,\n\t\t109\n\t],\n\t\"./fj/fj-all.geo.json\": [\n\t\t495,\n\t\t110\n\t],\n\t\"./fo/fo-all.geo.json\": [\n\t\t496,\n\t\t111\n\t],\n\t\"./fr/fr-all-all.geo.json\": [\n\t\t497,\n\t\t112\n\t],\n\t\"./fr/fr-all.geo.json\": [\n\t\t498,\n\t\t113\n\t],\n\t\"./fr/fr-ara-all.geo.json\": [\n\t\t499,\n\t\t114\n\t],\n\t\"./fr/fr-bfc-all.geo.json\": [\n\t\t500,\n\t\t115\n\t],\n\t\"./fr/fr-bre-all.geo.json\": [\n\t\t501,\n\t\t116\n\t],\n\t\"./fr/fr-cor-all.geo.json\": [\n\t\t502,\n\t\t117\n\t],\n\t\"./fr/fr-cvl-all.geo.json\": [\n\t\t503,\n\t\t118\n\t],\n\t\"./fr/fr-ges-all.geo.json\": [\n\t\t504,\n\t\t119\n\t],\n\t\"./fr/fr-gf-all.geo.json\": [\n\t\t505,\n\t\t120\n\t],\n\t\"./fr/fr-gua-all.geo.json\": [\n\t\t506,\n\t\t121\n\t],\n\t\"./fr/fr-hdf-all.geo.json\": [\n\t\t507,\n\t\t122\n\t],\n\t\"./fr/fr-idf-all.geo.json\": [\n\t\t508,\n\t\t123\n\t],\n\t\"./fr/fr-lre-all.geo.json\": [\n\t\t509,\n\t\t124\n\t],\n\t\"./fr/fr-may-all.geo.json\": [\n\t\t510,\n\t\t125\n\t],\n\t\"./fr/fr-mq-all.geo.json\": [\n\t\t511,\n\t\t126\n\t],\n\t\"./fr/fr-naq-all.geo.json\": [\n\t\t512,\n\t\t127\n\t],\n\t\"./fr/fr-nor-all.geo.json\": [\n\t\t513,\n\t\t128\n\t],\n\t\"./fr/fr-occ-all.geo.json\": [\n\t\t514,\n\t\t129\n\t],\n\t\"./fr/fr-pac-all.geo.json\": [\n\t\t515,\n\t\t130\n\t],\n\t\"./fr/fr-pdl-all.geo.json\": [\n\t\t516,\n\t\t131\n\t],\n\t\"./ga/ga-all.geo.json\": [\n\t\t517,\n\t\t132\n\t],\n\t\"./gb/gb-all.geo.json\": [\n\t\t518,\n\t\t133\n\t],\n\t\"./gd/gd-all.geo.json\": [\n\t\t519,\n\t\t134\n\t],\n\t\"./ge/ge-all.geo.json\": [\n\t\t520,\n\t\t135\n\t],\n\t\"./gh/gh-all.geo.json\": [\n\t\t521,\n\t\t136\n\t],\n\t\"./gl/gl-all.geo.json\": [\n\t\t522,\n\t\t137\n\t],\n\t\"./gm/gm-all.geo.json\": [\n\t\t523,\n\t\t138\n\t],\n\t\"./gn/gn-all.geo.json\": [\n\t\t524,\n\t\t139\n\t],\n\t\"./gq/gq-all.geo.json\": [\n\t\t525,\n\t\t140\n\t],\n\t\"./gr/gr-all.geo.json\": [\n\t\t526,\n\t\t141\n\t],\n\t\"./gt/gt-all.geo.json\": [\n\t\t527,\n\t\t142\n\t],\n\t\"./gu/gu-all.geo.json\": [\n\t\t528,\n\t\t143\n\t],\n\t\"./gw/gw-all.geo.json\": [\n\t\t529,\n\t\t144\n\t],\n\t\"./gy/gy-all.geo.json\": [\n\t\t530,\n\t\t145\n\t],\n\t\"./hn/hn-all.geo.json\": [\n\t\t531,\n\t\t146\n\t],\n\t\"./hr/hr-all.geo.json\": [\n\t\t532,\n\t\t147\n\t],\n\t\"./ht/ht-all.geo.json\": [\n\t\t533,\n\t\t148\n\t],\n\t\"./hu/hu-all.geo.json\": [\n\t\t534,\n\t\t149\n\t],\n\t\"./id/id-all.geo.json\": [\n\t\t535,\n\t\t150\n\t],\n\t\"./ie/ie-all.geo.json\": [\n\t\t536,\n\t\t151\n\t],\n\t\"./il/il-all.geo.json\": [\n\t\t537,\n\t\t152\n\t],\n\t\"./in/in-all.geo.json\": [\n\t\t538,\n\t\t153\n\t],\n\t\"./iq/iq-all.geo.json\": [\n\t\t539,\n\t\t154\n\t],\n\t\"./ir/ir-all.geo.json\": [\n\t\t540,\n\t\t155\n\t],\n\t\"./is/is-all.geo.json\": [\n\t\t541,\n\t\t156\n\t],\n\t\"./it/it-all.geo.json\": [\n\t\t542,\n\t\t157\n\t],\n\t\"./jm/jm-all.geo.json\": [\n\t\t543,\n\t\t158\n\t],\n\t\"./jo/jo-all.geo.json\": [\n\t\t544,\n\t\t159\n\t],\n\t\"./jp/jp-all.geo.json\": [\n\t\t545,\n\t\t160\n\t],\n\t\"./ke/ke-all.geo.json\": [\n\t\t546,\n\t\t161\n\t],\n\t\"./kg/kg-all.geo.json\": [\n\t\t547,\n\t\t162\n\t],\n\t\"./kh/kh-all.geo.json\": [\n\t\t548,\n\t\t163\n\t],\n\t\"./km/km-all.geo.json\": [\n\t\t549,\n\t\t164\n\t],\n\t\"./kn/kn-all.geo.json\": [\n\t\t550,\n\t\t165\n\t],\n\t\"./kp/kp-all.geo.json\": [\n\t\t551,\n\t\t166\n\t],\n\t\"./kr/kr-all.geo.json\": [\n\t\t552,\n\t\t167\n\t],\n\t\"./kv/kv-all.geo.json\": [\n\t\t553,\n\t\t168\n\t],\n\t\"./kw/kw-all.geo.json\": [\n\t\t554,\n\t\t169\n\t],\n\t\"./kz/kz-all.geo.json\": [\n\t\t555,\n\t\t170\n\t],\n\t\"./la/la-all.geo.json\": [\n\t\t556,\n\t\t171\n\t],\n\t\"./lb/lb-all.geo.json\": [\n\t\t557,\n\t\t172\n\t],\n\t\"./lc/lc-all.geo.json\": [\n\t\t558,\n\t\t173\n\t],\n\t\"./li/li-all.geo.json\": [\n\t\t559,\n\t\t174\n\t],\n\t\"./lk/lk-all.geo.json\": [\n\t\t560,\n\t\t175\n\t],\n\t\"./lr/lr-all.geo.json\": [\n\t\t561,\n\t\t176\n\t],\n\t\"./ls/ls-all.geo.json\": [\n\t\t562,\n\t\t177\n\t],\n\t\"./lt/lt-all.geo.json\": [\n\t\t563,\n\t\t178\n\t],\n\t\"./lu/lu-all.geo.json\": [\n\t\t564,\n\t\t179\n\t],\n\t\"./lv/lv-all.geo.json\": [\n\t\t565,\n\t\t180\n\t],\n\t\"./ly/ly-all.geo.json\": [\n\t\t566,\n\t\t181\n\t],\n\t\"./ma/ma-all.geo.json\": [\n\t\t567,\n\t\t182\n\t],\n\t\"./mc/mc-all.geo.json\": [\n\t\t568,\n\t\t183\n\t],\n\t\"./md/md-all.geo.json\": [\n\t\t569,\n\t\t184\n\t],\n\t\"./me/me-all.geo.json\": [\n\t\t570,\n\t\t185\n\t],\n\t\"./mg/mg-all.geo.json\": [\n\t\t571,\n\t\t186\n\t],\n\t\"./mk/mk-all.geo.json\": [\n\t\t572,\n\t\t187\n\t],\n\t\"./ml/ml-all.geo.json\": [\n\t\t573,\n\t\t188\n\t],\n\t\"./mm/mm-all.geo.json\": [\n\t\t574,\n\t\t189\n\t],\n\t\"./mn/mn-all.geo.json\": [\n\t\t575,\n\t\t190\n\t],\n\t\"./mp/mp-all.geo.json\": [\n\t\t576,\n\t\t191\n\t],\n\t\"./mr/mr-all.geo.json\": [\n\t\t577,\n\t\t192\n\t],\n\t\"./mt/mt-all.geo.json\": [\n\t\t578,\n\t\t193\n\t],\n\t\"./mu/mu-all.geo.json\": [\n\t\t579,\n\t\t194\n\t],\n\t\"./mw/mw-all.geo.json\": [\n\t\t580,\n\t\t195\n\t],\n\t\"./mx/mx-all.geo.json\": [\n\t\t581,\n\t\t196\n\t],\n\t\"./my/my-all.geo.json\": [\n\t\t582,\n\t\t197\n\t],\n\t\"./mz/mz-all.geo.json\": [\n\t\t583,\n\t\t198\n\t],\n\t\"./na/na-all.geo.json\": [\n\t\t584,\n\t\t199\n\t],\n\t\"./nc/nc-all.geo.json\": [\n\t\t585,\n\t\t200\n\t],\n\t\"./ne/ne-all.geo.json\": [\n\t\t586,\n\t\t201\n\t],\n\t\"./ng/ng-all.geo.json\": [\n\t\t587,\n\t\t202\n\t],\n\t\"./ni/ni-all.geo.json\": [\n\t\t588,\n\t\t203\n\t],\n\t\"./nl/nl-all-all.geo.json\": [\n\t\t589,\n\t\t204\n\t],\n\t\"./nl/nl-all.geo.json\": [\n\t\t590,\n\t\t205\n\t],\n\t\"./nl/nl-dr-all.geo.json\": [\n\t\t591,\n\t\t206\n\t],\n\t\"./nl/nl-fl-all.geo.json\": [\n\t\t592,\n\t\t207\n\t],\n\t\"./nl/nl-fr-all.geo.json\": [\n\t\t593,\n\t\t208\n\t],\n\t\"./nl/nl-ge-all.geo.json\": [\n\t\t594,\n\t\t209\n\t],\n\t\"./nl/nl-gr-all.geo.json\": [\n\t\t595,\n\t\t210\n\t],\n\t\"./nl/nl-li-all.geo.json\": [\n\t\t596,\n\t\t211\n\t],\n\t\"./nl/nl-nb-all.geo.json\": [\n\t\t597,\n\t\t212\n\t],\n\t\"./nl/nl-nh-all.geo.json\": [\n\t\t598,\n\t\t213\n\t],\n\t\"./nl/nl-ov-all.geo.json\": [\n\t\t599,\n\t\t214\n\t],\n\t\"./nl/nl-ut-all.geo.json\": [\n\t\t600,\n\t\t215\n\t],\n\t\"./nl/nl-ze-all.geo.json\": [\n\t\t601,\n\t\t216\n\t],\n\t\"./nl/nl-zh-all.geo.json\": [\n\t\t602,\n\t\t217\n\t],\n\t\"./no/no-ag-all.geo.json\": [\n\t\t603,\n\t\t218\n\t],\n\t\"./no/no-all-all.geo.json\": [\n\t\t604,\n\t\t219\n\t],\n\t\"./no/no-all.geo.json\": [\n\t\t605,\n\t\t220\n\t],\n\t\"./no/no-in-all.geo.json\": [\n\t\t606,\n\t\t221\n\t],\n\t\"./no/no-mr-all.geo.json\": [\n\t\t607,\n\t\t222\n\t],\n\t\"./no/no-no-all.geo.json\": [\n\t\t608,\n\t\t223\n\t],\n\t\"./no/no-os-all.geo.json\": [\n\t\t609,\n\t\t224\n\t],\n\t\"./no/no-ro-all.geo.json\": [\n\t\t610,\n\t\t225\n\t],\n\t\"./no/no-td-all.geo.json\": [\n\t\t611,\n\t\t226\n\t],\n\t\"./no/no-tf-all.geo.json\": [\n\t\t612,\n\t\t227\n\t],\n\t\"./no/no-vi-all.geo.json\": [\n\t\t613,\n\t\t228\n\t],\n\t\"./no/no-vl-all.geo.json\": [\n\t\t614,\n\t\t229\n\t],\n\t\"./no/no-vt-all.geo.json\": [\n\t\t615,\n\t\t230\n\t],\n\t\"./np/np-all.geo.json\": [\n\t\t616,\n\t\t231\n\t],\n\t\"./nr/nr-all.geo.json\": [\n\t\t617,\n\t\t232\n\t],\n\t\"./nz/nz-all.geo.json\": [\n\t\t618,\n\t\t233\n\t],\n\t\"./om/om-all.geo.json\": [\n\t\t619,\n\t\t234\n\t],\n\t\"./pa/pa-all.geo.json\": [\n\t\t620,\n\t\t235\n\t],\n\t\"./pe/pe-all.geo.json\": [\n\t\t621,\n\t\t236\n\t],\n\t\"./pg/pg-all.geo.json\": [\n\t\t622,\n\t\t237\n\t],\n\t\"./ph/ph-all.geo.json\": [\n\t\t623,\n\t\t238\n\t],\n\t\"./pk/pk-all.geo.json\": [\n\t\t624,\n\t\t239\n\t],\n\t\"./pl/pl-all.geo.json\": [\n\t\t625,\n\t\t240\n\t],\n\t\"./pr/pr-all-all.geo.json\": [\n\t\t626,\n\t\t241\n\t],\n\t\"./pr/pr-all.geo.json\": [\n\t\t627,\n\t\t242\n\t],\n\t\"./pt/pt-all.geo.json\": [\n\t\t628,\n\t\t243\n\t],\n\t\"./pw/pw-all.geo.json\": [\n\t\t629,\n\t\t244\n\t],\n\t\"./py/py-all.geo.json\": [\n\t\t630,\n\t\t245\n\t],\n\t\"./qa/qa-all.geo.json\": [\n\t\t631,\n\t\t246\n\t],\n\t\"./ro/ro-all.geo.json\": [\n\t\t632,\n\t\t247\n\t],\n\t\"./rs/rs-all.geo.json\": [\n\t\t633,\n\t\t248\n\t],\n\t\"./ru/ru-all.geo.json\": [\n\t\t634,\n\t\t249\n\t],\n\t\"./rw/rw-all.geo.json\": [\n\t\t635,\n\t\t250\n\t],\n\t\"./sa/sa-all.geo.json\": [\n\t\t636,\n\t\t251\n\t],\n\t\"./sb/sb-all.geo.json\": [\n\t\t637,\n\t\t252\n\t],\n\t\"./sc/sc-all.geo.json\": [\n\t\t638,\n\t\t253\n\t],\n\t\"./sd/sd-all.geo.json\": [\n\t\t639,\n\t\t254\n\t],\n\t\"./se/se-all.geo.json\": [\n\t\t640,\n\t\t255\n\t],\n\t\"./sg/sg-all.geo.json\": [\n\t\t641,\n\t\t256\n\t],\n\t\"./si/si-all.geo.json\": [\n\t\t642,\n\t\t257\n\t],\n\t\"./sk/sk-all.geo.json\": [\n\t\t643,\n\t\t258\n\t],\n\t\"./sl/sl-all.geo.json\": [\n\t\t644,\n\t\t259\n\t],\n\t\"./sm/sm-all.geo.json\": [\n\t\t645,\n\t\t260\n\t],\n\t\"./sn/sn-all.geo.json\": [\n\t\t646,\n\t\t261\n\t],\n\t\"./so/so-all.geo.json\": [\n\t\t647,\n\t\t262\n\t],\n\t\"./sr/sr-all.geo.json\": [\n\t\t648,\n\t\t263\n\t],\n\t\"./ss/ss-all.geo.json\": [\n\t\t649,\n\t\t264\n\t],\n\t\"./st/st-all.geo.json\": [\n\t\t650,\n\t\t265\n\t],\n\t\"./sv/sv-all.geo.json\": [\n\t\t651,\n\t\t266\n\t],\n\t\"./sx/sx-all.geo.json\": [\n\t\t652,\n\t\t267\n\t],\n\t\"./sy/sy-all.geo.json\": [\n\t\t653,\n\t\t268\n\t],\n\t\"./sz/sz-all.geo.json\": [\n\t\t654,\n\t\t269\n\t],\n\t\"./td/td-all.geo.json\": [\n\t\t655,\n\t\t270\n\t],\n\t\"./tf/tf-all.geo.json\": [\n\t\t656,\n\t\t271\n\t],\n\t\"./tg/tg-all.geo.json\": [\n\t\t657,\n\t\t272\n\t],\n\t\"./th/th-all.geo.json\": [\n\t\t658,\n\t\t273\n\t],\n\t\"./tj/tj-all.geo.json\": [\n\t\t659,\n\t\t274\n\t],\n\t\"./tl/tl-all.geo.json\": [\n\t\t660,\n\t\t275\n\t],\n\t\"./tm/tm-all.geo.json\": [\n\t\t661,\n\t\t276\n\t],\n\t\"./tn/tn-all.geo.json\": [\n\t\t662,\n\t\t277\n\t],\n\t\"./tr/tr-all.geo.json\": [\n\t\t663,\n\t\t278\n\t],\n\t\"./tt/tt-all.geo.json\": [\n\t\t664,\n\t\t279\n\t],\n\t\"./tw/tw-all.geo.json\": [\n\t\t665,\n\t\t280\n\t],\n\t\"./tz/tz-all.geo.json\": [\n\t\t666,\n\t\t281\n\t],\n\t\"./ua/ua-all.geo.json\": [\n\t\t667,\n\t\t282\n\t],\n\t\"./ug/ug-all.geo.json\": [\n\t\t668,\n\t\t283\n\t],\n\t\"./us/us-ak-all.geo.json\": [\n\t\t669,\n\t\t284\n\t],\n\t\"./us/us-al-all.geo.json\": [\n\t\t670,\n\t\t285\n\t],\n\t\"./us/us-all-all.geo.json\": [\n\t\t671,\n\t\t286\n\t],\n\t\"./us/us-all.geo.json\": [\n\t\t672,\n\t\t287\n\t],\n\t\"./us/us-ar-all.geo.json\": [\n\t\t673,\n\t\t288\n\t],\n\t\"./us/us-az-all.geo.json\": [\n\t\t674,\n\t\t289\n\t],\n\t\"./us/us-ca-all.geo.json\": [\n\t\t675,\n\t\t290\n\t],\n\t\"./us/us-co-all.geo.json\": [\n\t\t676,\n\t\t291\n\t],\n\t\"./us/us-ct-all.geo.json\": [\n\t\t677,\n\t\t292\n\t],\n\t\"./us/us-dc-all.geo.json\": [\n\t\t678,\n\t\t293\n\t],\n\t\"./us/us-de-all.geo.json\": [\n\t\t679,\n\t\t294\n\t],\n\t\"./us/us-fl-all.geo.json\": [\n\t\t680,\n\t\t295\n\t],\n\t\"./us/us-ga-all.geo.json\": [\n\t\t681,\n\t\t296\n\t],\n\t\"./us/us-hi-all.geo.json\": [\n\t\t682,\n\t\t297\n\t],\n\t\"./us/us-ia-all.geo.json\": [\n\t\t683,\n\t\t298\n\t],\n\t\"./us/us-id-all.geo.json\": [\n\t\t684,\n\t\t299\n\t],\n\t\"./us/us-il-all.geo.json\": [\n\t\t685,\n\t\t300\n\t],\n\t\"./us/us-in-all.geo.json\": [\n\t\t686,\n\t\t301\n\t],\n\t\"./us/us-ks-all.geo.json\": [\n\t\t687,\n\t\t302\n\t],\n\t\"./us/us-ky-all.geo.json\": [\n\t\t688,\n\t\t303\n\t],\n\t\"./us/us-la-all.geo.json\": [\n\t\t689,\n\t\t304\n\t],\n\t\"./us/us-ma-all.geo.json\": [\n\t\t690,\n\t\t305\n\t],\n\t\"./us/us-md-all.geo.json\": [\n\t\t691,\n\t\t306\n\t],\n\t\"./us/us-me-all.geo.json\": [\n\t\t692,\n\t\t307\n\t],\n\t\"./us/us-mi-all.geo.json\": [\n\t\t693,\n\t\t308\n\t],\n\t\"./us/us-mn-all.geo.json\": [\n\t\t694,\n\t\t309\n\t],\n\t\"./us/us-mo-all.geo.json\": [\n\t\t695,\n\t\t310\n\t],\n\t\"./us/us-ms-all.geo.json\": [\n\t\t696,\n\t\t311\n\t],\n\t\"./us/us-mt-all.geo.json\": [\n\t\t697,\n\t\t312\n\t],\n\t\"./us/us-nc-all.geo.json\": [\n\t\t698,\n\t\t313\n\t],\n\t\"./us/us-nd-all.geo.json\": [\n\t\t699,\n\t\t314\n\t],\n\t\"./us/us-ne-all.geo.json\": [\n\t\t700,\n\t\t315\n\t],\n\t\"./us/us-nh-all.geo.json\": [\n\t\t701,\n\t\t316\n\t],\n\t\"./us/us-nj-all.geo.json\": [\n\t\t702,\n\t\t317\n\t],\n\t\"./us/us-nm-all.geo.json\": [\n\t\t703,\n\t\t318\n\t],\n\t\"./us/us-nv-all.geo.json\": [\n\t\t704,\n\t\t319\n\t],\n\t\"./us/us-ny-all.geo.json\": [\n\t\t705,\n\t\t320\n\t],\n\t\"./us/us-oh-all.geo.json\": [\n\t\t706,\n\t\t321\n\t],\n\t\"./us/us-ok-all.geo.json\": [\n\t\t707,\n\t\t322\n\t],\n\t\"./us/us-or-all.geo.json\": [\n\t\t708,\n\t\t323\n\t],\n\t\"./us/us-pa-all.geo.json\": [\n\t\t709,\n\t\t324\n\t],\n\t\"./us/us-ri-all.geo.json\": [\n\t\t710,\n\t\t325\n\t],\n\t\"./us/us-sc-all.geo.json\": [\n\t\t711,\n\t\t326\n\t],\n\t\"./us/us-sd-all.geo.json\": [\n\t\t712,\n\t\t327\n\t],\n\t\"./us/us-tn-all.geo.json\": [\n\t\t713,\n\t\t328\n\t],\n\t\"./us/us-tx-all.geo.json\": [\n\t\t714,\n\t\t329\n\t],\n\t\"./us/us-ut-all.geo.json\": [\n\t\t715,\n\t\t330\n\t],\n\t\"./us/us-va-all.geo.json\": [\n\t\t716,\n\t\t331\n\t],\n\t\"./us/us-vt-all.geo.json\": [\n\t\t717,\n\t\t332\n\t],\n\t\"./us/us-wa-all.geo.json\": [\n\t\t718,\n\t\t333\n\t],\n\t\"./us/us-wi-all.geo.json\": [\n\t\t719,\n\t\t334\n\t],\n\t\"./us/us-wv-all.geo.json\": [\n\t\t720,\n\t\t335\n\t],\n\t\"./us/us-wy-all.geo.json\": [\n\t\t721,\n\t\t336\n\t],\n\t\"./uy/uy-all.geo.json\": [\n\t\t722,\n\t\t337\n\t],\n\t\"./uz/uz-all.geo.json\": [\n\t\t723,\n\t\t338\n\t],\n\t\"./vc/vc-all.geo.json\": [\n\t\t724,\n\t\t339\n\t],\n\t\"./ve/ve-all.geo.json\": [\n\t\t725,\n\t\t340\n\t],\n\t\"./vi/vi-all.geo.json\": [\n\t\t726,\n\t\t341\n\t],\n\t\"./vn/vn-all.geo.json\": [\n\t\t727,\n\t\t342\n\t],\n\t\"./vu/vu-all.geo.json\": [\n\t\t728,\n\t\t343\n\t],\n\t\"./wf/wf-all.geo.json\": [\n\t\t729,\n\t\t344\n\t],\n\t\"./ws/ws-all.geo.json\": [\n\t\t730,\n\t\t345\n\t],\n\t\"./ye/ye-all.geo.json\": [\n\t\t731,\n\t\t346\n\t],\n\t\"./za/za-all.geo.json\": [\n\t\t732,\n\t\t347\n\t],\n\t\"./zm/zm-all.geo.json\": [\n\t\t733,\n\t\t348\n\t],\n\t\"./zw/zw-all.geo.json\": [\n\t\t734,\n\t\t349\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 364;\nmodule.exports = webpackAsyncContext;","export default __webpack_public_path__ + \"static/media/logo.bf22b662.png\";","import React, { Component } from 'react'\r\nimport './HomeHeader.scss'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router'\r\nimport logo from \"../../assets/images/logo.png\"\r\nimport { LANGUAGES } from '../../utils/constant'\r\nimport * as actions from '../../store/actions'\r\nimport { toast } from 'react-toastify'\r\n\r\nclass HomeHeader extends Component {\r\n\r\n    changeLanguage = (l) => {\r\n        this.props.changeLanguageAppRedux(l)\r\n    }\r\n\r\n    returnToHomePage = () => {\r\n        if (this.props.history)\r\n            this.props.history.push(`/home`)\r\n    }\r\n\r\n    handleClickSpecialtyPage = () => {\r\n        this.props.history.push('/all-specialty')\r\n\r\n    }\r\n\r\n    handleClickClinicPage = () => {\r\n        this.props.history.push('/all-clinic')\r\n    }\r\n\r\n    handleClickViewAllDoctor = () => {\r\n        this.props.history.push('/all-doctor')\r\n    }\r\n\r\n    handleClickDoctorPage = () => {\r\n        const { user, language } = this.props\r\n        if (user && user.roleId === \"R3\") {\r\n            let message = language === LANGUAGES.VI ? \"Bạn không có quyền truy cập vào trang này.\" : \"You don't have permission to access this site.\"\r\n            toast.error(message)\r\n        } else\r\n            this.props.history.push('/login')\r\n    }\r\n\r\n    nagvigateLogin = () => {\r\n        this.props.history.push('/login')\r\n    }\r\n\r\n    render() {\r\n        const { language, isShowBanner, user } = this.props\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"home-header-container\">\r\n\r\n                    <div className=\"home-header-content\">\r\n                        <div className=\"left-content\">\r\n                            {/* <i className=\"fas fa-bars btnIcon\" /> */}\r\n                            <img\r\n                                className=\"header-logo\"\r\n                                src={logo}\r\n                                alt=\"logo\"\r\n                                onClick={this.returnToHomePage}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"center-content\">\r\n                            <div className=\"child-content\" onClick={this.handleClickSpecialtyPage}>\r\n                                <div><b><FormattedMessage id=\"homeheader.specialty\" /></b></div>\r\n                                <div className=\"subTitle\"><FormattedMessage id=\"homeheader.search-doctor\" /></div>\r\n                            </div>\r\n\r\n                            <div className=\"child-content\" onClick={this.handleClickClinicPage}>\r\n                                <div><b><FormattedMessage id=\"homeheader.health-facility\" /></b></div>\r\n                                <div className=\"subTitle\"><FormattedMessage id=\"homeheader.select-room\" /></div>\r\n                            </div>\r\n\r\n                            <div className=\"child-content\" onClick={this.handleClickViewAllDoctor}>\r\n                                <div><b><FormattedMessage id=\"homeheader.doctor\" /></b></div>\r\n                                <div className=\"subTitle\"><FormattedMessage id=\"homeheader.select-doctor\" /></div>\r\n                            </div>\r\n\r\n                            <div className=\"child-content\" onClick={this.handleClickDoctorPage}>\r\n                                <div><b><FormattedMessage id=\"homeheader.fee\" /></b></div>\r\n                                <div className=\"subTitle\"><FormattedMessage id=\"homeheader.check-health\" /></div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"right-content\">\r\n                            <div style={{ marginRight: '5rem' }}>\r\n                                <a href={process.env.REACT_APP_SUPPORT_URL || \"https://romantic-joliot-cfeb4b.netlify.app\"} target='_blank'><FormattedMessage id=\"homeheader.support\" /></a>\r\n                            </div>\r\n                            <div className=\"support\">\r\n                                <div className={language === LANGUAGES.VI ? 'language-vi active' : \"language-vi\"}><span onClick={() => this.changeLanguage(LANGUAGES.VI)}>VI</span></div>\r\n                                <div className={language === LANGUAGES.EN ? 'language-en active' : \"language-en\"}><span onClick={() => this.changeLanguage(LANGUAGES.EN)}>EN</span></div>\r\n                                {\r\n                                    !user ? (\r\n                                        <div className=\"action-button\" onClick={this.nagvigateLogin}>\r\n                                            Đăng nhập\r\n                                        </div>\r\n                                    ) : (\r\n                                        <div className=\"action-button\" onClick={this.props.handleLogout}>\r\n                                            Đăng xuất\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style={{ marginTop: \"80px\" }} />\r\n                {isShowBanner &&\r\n                    <div className=\"home-header-banner\">\r\n                        <div className=\"bar\">\r\n                            <div className=\"title1\">\r\n                                <FormattedMessage id=\"banner.title1\" />\r\n                            </div>\r\n                            <div className=\"title2\">\r\n                                <FormattedMessage id=\"banner.title2\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"search\">\r\n                            <i className=\"fas fa-search\" />\r\n                            <input type=\"text\" placeholder={language === LANGUAGES.VI ? \"Tìm chuyên khoa khám bệnh\" : \"Find a medical specialty\"} />\r\n                        </div>\r\n                        <div className=\"others-media\">\r\n                            <div className=\"ios-app\"></div>\r\n                            <div onClick={() => window.open(process.env.REACT_APP_MOBILE_URL, \"_blank\")} className=\"android-app\"></div>\r\n                        </div>\r\n \r\n                        <div className=\"options\">\r\n                            <div className=\"options-child\">\r\n                                <div className=\"icon-child\">\r\n                                    <i className=\"fas fa-hospital hospital fa-2x\" />\r\n                                </div>\r\n                                <div className=\"text-child text-center\"><FormattedMessage id=\"banner.child1\" /></div>\r\n                            </div>\r\n\r\n                            <div className=\"options-child\">\r\n                                <div className=\"icon-child\">\r\n                                    <i className=\"fas fa-mobile-alt ktx fa-2x\"></i>\r\n                                </div>\r\n                                <div className=\"text-child text-center\"><FormattedMessage id=\"banner.child2\" /></div>\r\n                            </div>\r\n\r\n                            <div className=\"options-child\">\r\n                                <div className=\"icon-child\">\r\n                                    <i className=\"fas fa-notes-medical fa-2x ktq\"></i>\r\n                                </div>\r\n                                <div className=\"text-child text-center\"><FormattedMessage id=\"banner.child3\" /></div>\r\n                            </div>\r\n\r\n                            <div className=\"options-child\">\r\n                                <div className=\"icon-child\">\r\n                                    <i className=\"fas fa-stethoscope fa-2x xnyh\" />\r\n                                </div>\r\n                                <div className=\"text-child text-center\"><FormattedMessage id=\"banner.child4\" /></div>\r\n                            </div>\r\n\r\n                            <div className=\"options-child\">\r\n                                <div className=\"icon-child\">\r\n                                    <i className=\"fas fa-hand-holding-heart sktt fa-2x\"></i>\r\n                                </div>\r\n                                <div className=\"text-child text-center\"><FormattedMessage id=\"banner.child5\" /></div>\r\n                            </div>\r\n\r\n                            <div className=\"options-child\">\r\n                                <div className=\"icon-child\">\r\n                                    <i className=\"fas fa-briefcase-medical fa-2x knk\"></i>\r\n                                </div>\r\n                                <div className=\"text-child text-center\"><FormattedMessage id=\"banner.child6\" /></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                }\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        language: state.app.language,\r\n        user: state.user.userInfo\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeLanguageAppRedux: (language) => dispatch(actions.changeLanguageApp(language)),\r\n        handleLogout: () => dispatch(actions.processLogout())\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(HomeHeader));\r\n","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initContentOfConfirmModal = {\r\n    isOpen: false,\r\n    messageId: \"\",\r\n    handleFunc: null,\r\n    dataFunc: null\r\n}\r\n\r\nconst initialState = {\r\n    started: true,\r\n    language: 'vi',\r\n    systemMenuPath: '/system/home-page',\r\n    doctorMenuPath: \"/doctor/manage-schedule\",\r\n    patientMenuPath: '/home',\r\n    contentOfConfirmModal: {\r\n        ...initContentOfConfirmModal\r\n    }\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.APP_START_UP_COMPLETE:\r\n            return {\r\n                ...state,\r\n                started: true\r\n            }\r\n        case actionTypes.SET_CONTENT_OF_CONFIRM_MODAL:\r\n            return {\r\n                ...state,\r\n                contentOfConfirmModal: {\r\n                    ...state.contentOfConfirmModal,\r\n                    ...action.contentOfConfirmModal\r\n                }\r\n            }\r\n        case actionTypes.CHANGE_LANGUAGE:\r\n            return {\r\n                ...state,\r\n                language: action.language\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default appReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    isLoggedIn: false,\r\n    userInfo: null\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.USER_LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: true,\r\n                userInfo: action.userInfo\r\n            }\r\n        case actionTypes.USER_LOGIN_FAIL:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                userInfo: null\r\n            }\r\n        case actionTypes.PROCESS_LOGOUT:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                userInfo: null\r\n            }\r\n        case actionTypes.UPDATE_USER_INFO: {\r\n            return {\r\n                ...state,\r\n                userInfo: {\r\n                    ...state.userInfo,\r\n                    ...action.payload\r\n                }\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default appReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    genders: [],\r\n    roles: [],\r\n    positions: [],\r\n    isLoading: false,\r\n    users: [],\r\n    topDoctors: [],\r\n    allDoctors: [],\r\n    allDoctorsDetail: [],\r\n    allSpecialty: [],\r\n    allClinic: [],\r\n    allScheduleTime: [],\r\n    requiredDoctorInfo: [],\r\n    allProvince: []\r\n}\r\n\r\nconst adminReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_INFO_START:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        case actionTypes.FETCH_GENDER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                genders: action.data\r\n            }\r\n        case actionTypes.FETCH_POSITION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                positions: action.data\r\n            }\r\n        case actionTypes.FETCH_ROLE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                roles: action.data\r\n            }\r\n        case actionTypes.FETCH_ALL_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                users: action.users,\r\n                isLoading: false\r\n            }\r\n        case actionTypes.FETCH_TOP_DOCTOR_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                topDoctors: action.data\r\n            }\r\n        case actionTypes.FETCH_ALL_DOCTOR_SUCCESS:\r\n            return {\r\n                ...state,\r\n                allDoctors: action.data\r\n            }\r\n        case actionTypes.FETCH_ALLCODE_SCHEDULE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                allScheduleTime: action.data\r\n            }\r\n        case actionTypes.FETCH_REQUIRED_DOCTOR_INFO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                requiredDoctorInfo: action.data\r\n            }\r\n        case actionTypes.FETCH_ALL_SPECIALTY_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                allSpecialty: action.data\r\n            }\r\n        case actionTypes.FETCH_ALL_CLINIC_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                allClinic: action.data\r\n            }\r\n        case actionTypes.FETCH_ALL_DETAIL_DOCTOR_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                allDoctorsDetail: action.data\r\n            }\r\n        case actionTypes.FETCH_ALL_DETAIL_DOCTOR_FAIL:\r\n        case actionTypes.FETCH_ALL_CLINIC_FAIL:\r\n        case actionTypes.FETCH_ALL_SPECIALTY_FAIL:\r\n        case actionTypes.FETCH_REQUIRED_DOCTOR_INFO_FAIL:\r\n        case actionTypes.FETCH_ALLCODE_SCHEDULE_FAIL:\r\n        case actionTypes.FETCH_ALL_DOCTOR_FAIL:\r\n        case actionTypes.FETCH_TOP_DOCTOR_FAIL:\r\n        case actionTypes.FETCH_ALL_USER_FAIL:\r\n        case actionTypes.FETCH_GENDER_FAIL:\r\n        case actionTypes.FETCH_POSITION_FAIL:\r\n        case actionTypes.FETCH_ROLE_FAIL:\r\n            return {\r\n                ...state,\r\n                isLoading: false\r\n            }\r\n        default:\r\n            return {\r\n                ...state,\r\n                isLoading: false\r\n            }\r\n    }\r\n}\r\n\r\nexport default adminReducer;","import {combineReducers} from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\n\r\nimport appReducer from \"./appReducer\";\r\nimport userReducer from \"./userReducer\";\r\nimport adminReducer from './adminReducer'\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { persistReducer } from 'redux-persist';\r\n\r\nconst persistCommonConfig = {\r\n    storage: storage,\r\n    stateReconciler: autoMergeLevel2,\r\n};\r\n\r\n\r\nconst userPersistConfig = {\r\n    ...persistCommonConfig,\r\n    key: 'user',\r\n    whitelist: ['isLoggedIn', 'userInfo']\r\n};\r\n\r\nconst appPersistConfig = {\r\n    ...persistCommonConfig,\r\n    key: \"app\",\r\n    whitelist: [\"language\"]\r\n}\r\n\r\nconst store = (history) => combineReducers({\r\n    router: connectRouter(history),\r\n    user: persistReducer(userPersistConfig, userReducer),\r\n    app: persistReducer(appPersistConfig ,appReducer),\r\n    admin: adminReducer\r\n})\r\n\r\nexport default store","import { logger } from \"redux-logger\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport { createBrowserHistory } from 'history';\r\n\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { createStateSyncMiddleware } from 'redux-state-sync';\r\nimport { persistStore } from 'redux-persist';\r\n\r\nimport createRootReducer from './store/reducers/rootReducer';\r\nimport actionTypes from './store/actions/actionTypes';\r\n\r\nconst environment = process.env.NODE_ENV || \"development\";\r\nlet isDevelopment = environment === \"development\";\r\n\r\n//hide redux logs\r\nisDevelopment = false;\r\n\r\n\r\nexport const history = createBrowserHistory({ basename: process.env.REACT_APP_ROUTER_BASE_NAME });\r\n\r\nconst reduxStateSyncConfig = {\r\n    whitelist: [\r\n        actionTypes.APP_START_UP_COMPLETE,\r\n        actionTypes.CHANGE_LANGUAGE\r\n    ]\r\n}\r\n\r\nconst rootReducer = createRootReducer(history);\r\nconst middleware = [\r\n    routerMiddleware(history),\r\n    thunkMiddleware,\r\n    createStateSyncMiddleware(reduxStateSyncConfig),\r\n]\r\nif (isDevelopment) middleware.push(logger);\r\n\r\nconst composeEnhancers = (isDevelopment && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : compose;\r\n\r\nconst reduxStore = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(...middleware)),\r\n)\r\n\r\nexport const dispatch = reduxStore.dispatch;\r\n\r\nexport const persistor = persistStore(reduxStore);\r\n\r\nexport default reduxStore;","import locationHelperBuilder from \"redux-auth-wrapper/history4/locationHelper\";\r\nimport { connectedRouterRedirect } from \"redux-auth-wrapper/history4/redirect\";\r\n\r\nconst locationHelper = locationHelperBuilder({});\r\n\r\nexport const userIsAuthenticated = connectedRouterRedirect({\r\n    authenticatedSelector: state => state.user.isLoggedIn,\r\n    wrapperDisplayName: 'UserIsAuthenticated',\r\n    redirectPath: '/login'\r\n});\r\n\r\nexport const userIsNotAuthenticated = connectedRouterRedirect({\r\n    // Want to redirect the user when they are authenticated\r\n    authenticatedSelector: state => !state.user.isLoggedIn,\r\n    wrapperDisplayName: 'UserIsNotAuthenticated',\r\n    redirectPath: (state, ownProps) => locationHelper.getRedirectQueryParam(ownProps) || '/',\r\n    allowRedirectBack: false\r\n});","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Home extends Component {\r\n\r\n    render() {\r\n        const { isLoggedIn } = this.props;\r\n        let linkToRedirect = isLoggedIn ? '/system/home-page' : '/home';\r\n\r\n        return (\r\n            <Redirect to={linkToRedirect} />\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { push } from \"connected-react-router\";\r\nimport * as actions from '../../store/actions';\r\nimport './Login.scss';\r\nimport { handleLogin } from '../../services/userService';\r\nimport { withRouter } from 'react-router'\r\nimport { FormattedMessage } from 'react-intl'\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            isShowPassword: false,\r\n            err: ''\r\n        };\r\n    }\r\n\r\n    validateInput = () => {\r\n        const { language } = this.props\r\n        if (this.state.email === \"\")\r\n            return {\r\n                errCode: 1,\r\n                errMessage: language === 'vi' ? \"Email không được để trống\" : \"Mising required email parameter!\"\r\n            }\r\n        if (this.state.password === \"\")\r\n            return {\r\n                errCode: 1,\r\n                errMessage: language === 'vi' ? \"Mật khẩu không hợp lệ\" : \"Mising required password parameter!\"\r\n            }\r\n        return {\r\n            errCode: 0\r\n        }\r\n    }\r\n\r\n\r\n    submit = async () => {\r\n        const { email, password } = this.state\r\n        this.setState({ err: \"\" })\r\n        let validate = this.validateInput()\r\n        if (validate.errCode !== 0) {\r\n            this.setState({ err: validate.errMessage })\r\n            return\r\n        }\r\n        try {\r\n            let data = await handleLogin(email, password)\r\n            if (data && data.errCode !== 0) {\r\n                this.setState({ err: data.message })\r\n            }\r\n            if (data && data.errCode === 0) {\r\n                this.props.userLoginSuccess(data.user);\r\n            }\r\n        } catch (err) {\r\n            if (err.response && err.response.data) {\r\n                this.setState({ err: err.response.data.message })\r\n            }\r\n        }\r\n    }\r\n\r\n    handleShowPassword = () => {\r\n        this.setState({\r\n            isShowPassword: !this.state.isShowPassword\r\n        })\r\n    }\r\n\r\n    onKeyPress = (e) => {\r\n        if (e.charCode === 13)\r\n            this.submit()\r\n    }\r\n\r\n    handleChangeText = (e) => {\r\n        const { name, value } = e.target\r\n        let cpState = this.state\r\n        cpState[name] = value\r\n        this.setState(cpState)\r\n    }\r\n\r\n    render() {\r\n        const { email, password, isShowPassword, err } = this.state\r\n        const { language } = this.props\r\n\r\n        return (\r\n            <div className=\"login-bg\">\r\n                <div id=\"loginform\">\r\n                    <div id=\"form_login\">\r\n                        <h2 id=\"headerTitle\">\r\n                            {language === 'vi' ? \"Đăng nhập\" : \"Sign in\"}\r\n                        </h2>\r\n                        <div className=\"form-group rowWapper\">\r\n                            <label>\r\n                                Email\r\n                            </label>\r\n                            <input\r\n                                placeholder=\"email\"\r\n                                id=\"username\"\r\n                                name=\"email\"\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                value={email}\r\n                                onChange={this.handleChangeText}\r\n                                onKeyPress={this.onKeyPress}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group rowWapper\">\r\n                            <label>\r\n                                {language === 'vi' ? \"Mật khẩu\" : \"Password\"}\r\n                            </label>\r\n                            <input \r\n                                placeholder={language === 'vi' ? \"Mật khẩu\" : \"Password\"}\r\n                                name=\"password\"\r\n                                type={isShowPassword ? \"text\" : \"password\"}\r\n                                className=\"form-control\"\r\n                                value={password}\r\n                                onChange={this.handleChangeText}\r\n                                onKeyPress={this.onKeyPress}\r\n                            />\r\n                            <span\r\n                                onClick={this.handleShowPassword}\r\n                                className=\"eye-icon\"\r\n                            >\r\n                                <i className={isShowPassword ? \"far fa-eye\" : \"far fa-eye-slash\"}></i>\r\n                            </span>\r\n                        </div>\r\n\r\n                        {err && (\r\n                            <div className='error'>\r\n                                <span className='login-error-message'>{err}</span>\r\n                            </div>\r\n                        )}\r\n                        <div style={{ height: '30px' }} />\r\n                        <div className=\"btn btn-login\">\r\n                            <button\r\n                                onClick={this.submit}\r\n                                className=\"btn\"\r\n                            >{language === 'vi' ? \"Đăng nhập\" : \"Sign in\"}</button>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        navigate: (path) => dispatch(push(path)),\r\n        // userLoginFail: () => dispatch(actions.userLoginFail()),\r\n        userLoginSuccess: (userInfo) => dispatch(actions.userLoginSuccess(userInfo))\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));\r\n","import React, { useEffect } from 'react';\r\nimport \"./UserManage.scss\"\r\nimport { FormattedMessage } from 'react-intl'\r\nimport { useHistory } from 'react-router'\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst arrButton = [\r\n  {\r\n    path: \"/system/user-manage\",\r\n    name: <FormattedMessage id='menu.admin.crud-redux' />\r\n  },\r\n  {\r\n    path: '/system/manage-doctor',\r\n    name: <FormattedMessage id=\"menu.admin.manage-doctor\" />\r\n  },\r\n  {\r\n    path: '/doctor/manage-schedule',\r\n    name: <FormattedMessage id=\"menu.doctor.manage-schedule\" />\r\n  },\r\n  {\r\n    path: \"/system/manage-clinic\",\r\n    name: <FormattedMessage id=\"menu.admin.manage-clinic\" />\r\n  },\r\n  {\r\n    path: \"/system/manage-specialty\",\r\n    name: <FormattedMessage id=\"menu.admin.manage-specialty\" />\r\n  },\r\n  {\r\n    path: '/doctor/manage-patient',\r\n    name: <FormattedMessage id=\"menu.doctor.manage-patient\" />\r\n  }\r\n]\r\n\r\nfunction UserManage() {\r\n  const history = useHistory()\r\n  const { userInfo } = useSelector(state => state.user)\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      if (userInfo.roleId === \"R3\") {\r\n        history.replace('/home')\r\n      }\r\n      if (userInfo.roleId === \"R2\") {\r\n        history.replace('/doctor/manage-schedule')\r\n      }\r\n    }\r\n  }, [userInfo])\r\n\r\n  return (\r\n    <div className=\"bg px-3\">\r\n      <div className=\"title text-center\"> Manage users with Augustus Flynn</div>\r\n      <div className=\"w-100 pt-5\">\r\n        <div className=\"d-flex justify-content-center\">\r\n          <div className=\"h5\">\r\n            <FormattedMessage id=\"homeheader.landing\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"d-flex justify-content-center pt-3\">\r\n          <div className=\"row\">\r\n            {\r\n              arrButton.map(item => {\r\n                return (<div className=\"col-12 col-md-4\">\r\n                  <button onClick={() => history.push(item.path)} className=\"custom-button\">\r\n                    {item.name}\r\n                  </button>\r\n                </div>)\r\n              })\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserManage;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nimport './Navigator.scss';\r\n\r\nclass MenuGroup extends Component {\r\n\r\n    render() {\r\n        const { name, children } = this.props;\r\n        return (\r\n            <li className=\"menu-group\">\r\n                <div className=\"menu-group-name\">\r\n                    <FormattedMessage id={name} />\r\n                </div>\r\n                <ul className=\"menu-list list-unstyled\">\r\n                    {children}\r\n                </ul>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nclass Menu extends Component {\r\n\r\n    render() {\r\n        const { name, active, link, children, onClick, hasSubMenu, onLinkClick } = this.props;\r\n        return (\r\n            <li className={\"menu\" + (hasSubMenu ? \" has-sub-menu\" : \"\") + (\"\") + (active ? \" active\" : \"\")}>\r\n                {hasSubMenu ? (\r\n                    <Fragment>\r\n                        <span\r\n                            data-toggle=\"collapse\"\r\n                            className={\"menu-link collapsed\"}\r\n                            onClick={onClick}\r\n                            aria-expanded={\"false\"}\r\n                        >\r\n                            <FormattedMessage id={name} />\r\n                            <div className=\"icon-right\">\r\n                                <i className={\"far fa-angle-right\"} />\r\n                            </div>\r\n                        </span>\r\n                        <div>\r\n                            <ul className=\"sub-menu-list list-unstyled\">\r\n                                {children}\r\n                            </ul>\r\n                        </div>\r\n                    </Fragment>\r\n                ) : (\r\n                        <Link to={link} className=\"menu-link\" onClick={onLinkClick}>\r\n                            <FormattedMessage id={name} />\r\n                        </Link>\r\n                    )}\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nclass SubMenu extends Component {\r\n\r\n    getItemClass = path => {\r\n        return this.props.location.pathname === path ? \"active\" : \"\";\r\n    };\r\n\r\n    render() {\r\n        const { name, link, onLinkClick } = this.props;\r\n        return (\r\n            <li className={\"sub-menu \" + this.getItemClass(link)}>\r\n                <Link to={link} className=\"sub-menu-link\" onClick={onLinkClick}>\r\n                    <FormattedMessage id={name} />\r\n                </Link>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nconst MenuGroupWithRouter = withRouter(MenuGroup);\r\nconst MenuWithRouter = withRouter(Menu);\r\nconst SubMenuWithRouter = withRouter(SubMenu);\r\n\r\nconst withRouterInnerRef = (WrappedComponent) => {\r\n\r\n    class InnerComponentWithRef extends React.Component {\r\n        render() {\r\n            const { forwardRef, ...rest } = this.props;\r\n            return <WrappedComponent {...rest} ref={forwardRef} />;\r\n        }\r\n    }\r\n\r\n    const ComponentWithRef = withRouter(InnerComponentWithRef, { withRef: true });\r\n\r\n    return React.forwardRef((props, ref) => {\r\n        return <ComponentWithRef {...props} forwardRef={ref} />;\r\n    });\r\n};\r\n\r\nclass Navigator extends Component {\r\n    state = {\r\n        expandedMenu: {}\r\n    };\r\n\r\n    toggle = (groupIndex, menuIndex) => {\r\n        const expandedMenu = {};\r\n        const needExpand = !(this.state.expandedMenu[groupIndex + '_' + menuIndex] === true);\r\n        if (needExpand) {\r\n            expandedMenu[groupIndex + '_' + menuIndex] = true;\r\n        }\r\n\r\n        this.setState({\r\n            expandedMenu: expandedMenu\r\n        });\r\n    };\r\n\r\n    isMenuHasSubMenuActive = (location, subMenus, link) => {\r\n        if (subMenus) {\r\n            if (subMenus.length === 0) {\r\n                return false;\r\n            }\r\n\r\n            const currentPath = location.pathname;\r\n            for (let i = 0; i < subMenus.length; i++) {\r\n                const subMenu = subMenus[i];\r\n                if (subMenu.link === currentPath) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (link) {\r\n            return this.props.location.pathname === link;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    checkActiveMenu = () => {\r\n        const { menus, location } = this.props;\r\n        outerLoop:\r\n        for (let i = 0; i < menus.length; i++) {\r\n            const group = menus[i];\r\n            if (group.menus && group.menus.length > 0) {\r\n                for (let j = 0; j < group.menus.length; j++) {\r\n                    const menu = group.menus[j];\r\n                    if (menu.subMenus && menu.subMenus.length > 0) {\r\n                        if (this.isMenuHasSubMenuActive(location, menu.subMenus, null)) {\r\n                            const key = i + '_' + j;\r\n                            this.setState({\r\n                                expandedMenu: {\r\n                                    [key]: true\r\n                                }\r\n                            });\r\n                            break outerLoop;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.checkActiveMenu();\r\n    };\r\n\r\n    // componentWillReceiveProps(nextProps, prevState) {\r\n    //     const { location, setAccountMenuPath, setSettingMenuPath } = this.props;\r\n    //     const { location: nextLocation } = nextProps;\r\n    //     if (location !== nextLocation) {\r\n    //         let pathname = nextLocation && nextLocation.pathname;\r\n    //         if ((pathname.startsWith('/account/') || pathname.startsWith('/fds/account/'))) {\r\n    //             setAccountMenuPath(pathname);\r\n    //         }\r\n    //         if (pathname.startsWith('/settings/')) {\r\n    //             setSettingMenuPath(pathname);\r\n    //         };\r\n    //     };\r\n    // };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { location } = this.props;\r\n        const { location: prevLocation } = prevProps;\r\n        if (location !== prevLocation) {\r\n            this.checkActiveMenu();\r\n        };\r\n    };\r\n\r\n    render() {\r\n        const { menus, location, onLinkClick } = this.props;\r\n        return (\r\n            <Fragment>\r\n                <ul className=\"navigator-menu list-unstyled\">\r\n                    {\r\n                        menus.map((group, groupIndex) => {\r\n                            return (\r\n                                <Fragment key={groupIndex}>\r\n                                    <MenuGroupWithRouter name={group.name}>\r\n                                        {group.menus ? (\r\n                                            group.menus.map((menu, menuIndex) => {\r\n                                                const isMenuHasSubMenuActive = this.isMenuHasSubMenuActive(location, menu.subMenus, menu.link);\r\n                                                const isSubMenuOpen = this.state.expandedMenu[groupIndex + '_' + menuIndex] === true;\r\n                                                return (\r\n                                                    <MenuWithRouter\r\n                                                        key={menuIndex}\r\n                                                        active={isMenuHasSubMenuActive}\r\n                                                        name={menu.name}\r\n                                                        link={menu.link}\r\n                                                        hasSubMenu={menu.subMenus}\r\n                                                        isOpen={isSubMenuOpen}\r\n                                                        onClick={() => this.toggle(groupIndex, menuIndex)}\r\n                                                        onLinkClick={onLinkClick}\r\n                                                    >\r\n                                                        {menu.subMenus && menu.subMenus.map((subMenu, subMenuIndex) => (\r\n                                                            <SubMenuWithRouter\r\n                                                                key={subMenuIndex}\r\n                                                                name={subMenu.name}\r\n                                                                link={subMenu.link}\r\n                                                                onClick={this.closeOtherExpand}\r\n                                                                onLinkClick={onLinkClick}\r\n                                                            />\r\n                                                        ))}\r\n                                                    </MenuWithRouter>\r\n                                                );\r\n                                            })\r\n                                        ) : null}\r\n                                    </MenuGroupWithRouter>\r\n                                </Fragment>\r\n                            );\r\n                        })\r\n                    }\r\n                </ul>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouterInnerRef(Navigator);\r\n","export const adminMenu = [\r\n    { //Quản lí người dùng\r\n        name: 'menu.admin.manage-user',\r\n        menus: [\r\n            {\r\n                name: 'menu.admin.crud', link: '/system/home-page',\r\n            },\r\n            {\r\n                name: 'menu.admin.crud-redux', link: '/system/user-manage',\r\n            },\r\n            {\r\n                name: 'menu.admin.manage-doctor', link: '/system/manage-doctor',\r\n            },\r\n            // { //Quản lí lịch khám bệnh\r\n            //     name: 'menu.doctor.manage-schedule', link: '/doctor/manage-schedule',\r\n            // },\r\n            // { //Quản lí bệnh nhân\r\n            //     name: 'menu.doctor.manage-patient', link: '/doctor/manage-patient',\r\n            // }\r\n        ]\r\n    },\r\n    { //Quản lí phòng khám\r\n        name: 'menu.admin.clinic',\r\n        menus: [\r\n            {\r\n                name: 'menu.admin.manage-clinic', link: '/system/manage-clinic',\r\n            }\r\n        ]\r\n    },\r\n    { //Quản lí chuyên khoa\r\n        name: 'menu.admin.specialty',\r\n        menus: [\r\n            {\r\n                name: 'menu.admin.manage-specialty', link: '/system/manage-specialty',\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\nexport const doctorMenu = [\r\n    {\r\n        name: 'menu.admin.manage-user',\r\n        menus: [\r\n            { //Quản lí lịch khám bệnh\r\n                name: 'menu.doctor.manage-schedule', link: '/doctor/manage-schedule',\r\n            },\r\n            { //Quản lí bệnh nhân\r\n                name: 'menu.doctor.manage-patient', link: '/doctor/manage-patient',\r\n            }\r\n        ]\r\n    }\r\n];","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { FormattedMessage } from 'react-intl'\r\nimport * as actions from \"../../store/actions\";\r\nimport Navigator from '../../components/Navigator';\r\nimport { adminMenu, doctorMenu } from './menuApp';\r\nimport './Header.scss';\r\nimport { LANGUAGES, USER_ROLE } from '../../utils/constant'\r\nimport _ from 'lodash'\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            menuApp: []\r\n        }\r\n    }\r\n\r\n    handleChangeLanguage = (l) => {\r\n        this.props.changeLanguageApp(l);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { userInfo } = this.props\r\n        let menu = []\r\n        if (userInfo && !_.isEmpty(userInfo)) {\r\n            let role = userInfo.roleId\r\n\r\n            if (role === USER_ROLE.ADMIN)\r\n                menu = adminMenu\r\n            else if (role === USER_ROLE.DOCTOR)\r\n                menu = doctorMenu\r\n\r\n            this.setState({ menuApp: menu })\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const { processLogout, language, userInfo } = this.props;\r\n        const { menuApp } = this.state\r\n        return (\r\n            <div className=\"header-container\">\r\n                {/* thanh navigator */}\r\n                <div className=\"header-tabs-container\">\r\n                    <Navigator menus={menuApp} />\r\n                </div>\r\n\r\n                {/* nút logout */}\r\n\r\n                <div className=\"languages\">\r\n                    <span className=\"welcome\"><FormattedMessage id=\"homeheader.welcome\" />{userInfo.lastName && userInfo.lastName} {userInfo.firstName && userInfo.firstName}!</span>\r\n                    <span\r\n                        className={language === LANGUAGES.VI ? 'language-vi active' : \"language-vi\"}\r\n                        onClick={() => this.handleChangeLanguage(LANGUAGES.VI)}\r\n                    >VI</span>\r\n                    <span className={language === LANGUAGES.EN ? 'language-en active' : \"language-en\"} onClick={() => this.handleChangeLanguage(LANGUAGES.EN)} >EN</span>\r\n\r\n                    <div className=\"btn btn-logout\" onClick={processLogout}>\r\n                        <i className=\"fas fa-sign-out-alt\"></i>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        language: state.app.language,\r\n        userInfo: state.user.userInfo\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        processLogout: () => dispatch(actions.processLogout()),\r\n        changeLanguageApp: (language) => dispatch(actions.changeLanguageApp(language))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React, { Component } from 'react';\r\nimport \"./ManageDoctor.scss\"\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../store/actions'\r\nimport { CRUD_ACTIONS, LANGUAGES } from '../../../utils'\r\nimport MarkdownIt from 'markdown-it';\r\nimport MdEditor from 'react-markdown-editor-lite';\r\nimport 'react-markdown-editor-lite/lib/index.css';\r\nimport { FormattedMessage } from 'react-intl'\r\n\r\nimport Select from 'react-select'\r\nimport { getDetailInfoDoctor } from '../../../services/userService'\r\n\r\nconst mdParser = new MarkdownIt(/* Markdown-it options */);\r\n\r\nclass ManageDoctor extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            //save to Markdown\r\n            contentMarkdown: '',\r\n            contentHTML: '',\r\n            description: '',\r\n            hasOldData: false,\r\n            action: CRUD_ACTIONS.CREATE,\r\n            listDoctos: [],\r\n            selectedDoctor: null,\r\n\r\n\r\n            //save to Doctor_info\r\n            listPrice: [],\r\n            listPayment: [],\r\n            listProvince: [],\r\n            listClinic: [],\r\n            listSpecialty: [],\r\n            selectedClinic: null,\r\n            selectedPayment: null,\r\n            selectedPrice: null,\r\n            selectedProvince: null,\r\n            nameClinic: '',\r\n            clinicAddress: '',\r\n            note: '',\r\n            selectedSpecialty: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchALLDoctor()\r\n        this.props.getRequiredDoctorInfo()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { allDoctors, language, requiredDoctorInfo } = this.props\r\n        if (prevProps.allDoctors !== allDoctors) {\r\n            let dataSelect = this.buildInputDataSelectDoctor(allDoctors)\r\n            this.setState({\r\n                listDoctos: dataSelect\r\n            })\r\n        }\r\n\r\n        if (language !== prevProps.language) {\r\n            let dataSelect = this.buildInputDataSelectDoctor(allDoctors)\r\n            this.setState({\r\n                listDoctos: dataSelect\r\n            })\r\n        }\r\n\r\n        if (prevProps.requiredDoctorInfo !== requiredDoctorInfo) {\r\n            let dataPrice = this.buildInputDoctorRequiredInfo(requiredDoctorInfo.resPrice, \"PRICE\")\r\n            let dataPayment = this.buildInputDoctorRequiredInfo(requiredDoctorInfo.resPayment)\r\n            let dataProvince = this.buildInputDoctorRequiredInfo(requiredDoctorInfo.resProvince)\r\n            let dataSpecialty = this.buildInputDoctorRequiredInfo(requiredDoctorInfo.resSpecialty, \"SPECIALTY\")\r\n            let dataClinic = this.buildInputDoctorRequiredInfo(requiredDoctorInfo.resClinic, \"SPECIALTY\")\r\n            this.setState({\r\n                listPrice: dataPrice,\r\n                listPayment: dataPayment,\r\n                listProvince: dataProvince,\r\n                listSpecialty: dataSpecialty,\r\n                listClinic: dataClinic\r\n            })\r\n        }\r\n\r\n        if (language !== prevProps.language) {\r\n            let dataPrice = this.buildInputDoctorRequiredInfo(requiredDoctorInfo.resPrice, \"PRICE\")\r\n            let dataPayment = this.buildInputDoctorRequiredInfo(requiredDoctorInfo.resPayment)\r\n            let dataProvince = this.buildInputDoctorRequiredInfo(requiredDoctorInfo.resProvince)\r\n            let dataSpecialty = this.buildInputDoctorRequiredInfo(requiredDoctorInfo.resSpecialty, \"SPECIALTY\")\r\n            let dataClinic = this.buildInputDoctorRequiredInfo(requiredDoctorInfo.resClinic, \"SPECIALTY\")\r\n\r\n            this.setState({\r\n                listPrice: dataPrice,\r\n                listPayment: dataPayment,\r\n                listProvince: dataProvince,\r\n                listSpecialty: dataSpecialty,\r\n                listClinic: dataClinic\r\n            })\r\n        }\r\n    }\r\n\r\n    buildInputDataSelectDoctor = (data) => {\r\n        const { language } = this.props\r\n        let result = [];\r\n\r\n        if (data && data.length > 0) {\r\n            for (let i = 0; i < data.length; i++) {\r\n                let obj = {}\r\n\r\n                obj.label = language === LANGUAGES.VI ?\r\n                    `${data[`${i}`].lastName} ${data[`${i}`].firstName}` :\r\n                    `${data[`${i}`].firstName} ${data[`${i}`].lastName}`\r\n                obj.value = data[`${i}`].id\r\n\r\n                result.push(obj)\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    buildInputDoctorRequiredInfo = (data, type = \"NONE\") => {\r\n        const { language } = this.props\r\n        let result = [];\r\n\r\n        if (type === \"PRICE\") {\r\n            if (data && data.length > 0) {\r\n                for (let i = 0; i < data.length; i++) {\r\n                    let obj = {}\r\n\r\n                    obj.label = language === LANGUAGES.VI ?\r\n                        `${data[`${i}`].valueVi} VND` :\r\n                        `${data[`${i}`].valueEn} USD`\r\n                    obj.value = data[`${i}`].keyMap\r\n\r\n                    result.push(obj)\r\n                }\r\n            }\r\n        }\r\n        else if (type === \"SPECIALTY\") {\r\n            for (let i = 0; i < data.length; i++) {\r\n                let obj = {}\r\n\r\n                obj.label = language === LANGUAGES.VI ?\r\n                    `${data[`${i}`].nameVi}` :\r\n                    `${data[`${i}`].nameEn}`\r\n                obj.value = data[`${i}`].id\r\n\r\n                result.push(obj)\r\n            }\r\n        }\r\n        else {\r\n            if (data && data.length > 0) {\r\n                for (let i = 0; i < data.length; i++) {\r\n                    let obj = {}\r\n\r\n                    obj.label = language === LANGUAGES.VI ? `${data[`${i}`].valueVi}` : `${data[`${i}`].valueEn}`\r\n                    obj.value = data[`${i}`].keyMap\r\n\r\n                    result.push(obj)\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    handleEditorChange = ({ html, text }) => {\r\n        this.setState({\r\n            contentMarkdown: text,\r\n            contentHTML: html,\r\n        })\r\n    }\r\n\r\n    handleSaveDetailDoctor = async () => {\r\n        const {\r\n            contentHTML,\r\n            contentMarkdown,\r\n            description,\r\n            selectedDoctor,\r\n            action,\r\n            selectedPayment,\r\n            selectedPrice,\r\n            selectedProvince,\r\n            nameClinic,\r\n            clinicAddress,\r\n            note,\r\n            selectedClinic,\r\n            selectedSpecialty\r\n        } = this.state\r\n\r\n        await this.props.saveInfoDoctorRedux({\r\n            contentHTML: contentHTML,\r\n            contentMarkdown: contentMarkdown,\r\n            description: description,\r\n            doctorId: selectedDoctor.value,\r\n            action: action,\r\n            selectedPayment: selectedPayment.value,\r\n            selectedPrice: selectedPrice.value,\r\n            selectedProvince: selectedProvince.value,\r\n            selectedSpecialty: selectedSpecialty.value,\r\n            selectedClinic: selectedClinic.value,\r\n            nameClinic: nameClinic,\r\n            clinicAddress: clinicAddress,\r\n            note: note\r\n        })\r\n\r\n        this.setState({\r\n            contentHTML: \"\",\r\n            contentMarkdown: \"\",\r\n            description: \"\",\r\n            doctorId: \"\",\r\n            action: CRUD_ACTIONS.CREATE,\r\n            selectedPayment: null,\r\n            selectedPrice: null,\r\n            selectedProvince: null,\r\n            selectedSpecialty: null,\r\n            selectedClinic: null,\r\n            selectedDoctor: null,\r\n            nameClinic: \"\",\r\n            clinicAddress: \"\",\r\n            note: \"\"\r\n        })\r\n    }\r\n\r\n    handleChangeSelect = async (selectedDoctor, name) => {\r\n        const { listPayment, listProvince, listPrice, listSpecialty, listClinic } = this.state\r\n        this.setState({ selectedDoctor })\r\n\r\n        let res = await getDetailInfoDoctor(selectedDoctor.value)\r\n        if (res && res.errCode === 0 && res.data.Markdown) {\r\n            let mardown = res.data.Markdown\r\n\r\n            let addressClinicId = '',\r\n                nameClinic = '',\r\n                note = '',\r\n                paymentId = '',\r\n                priceId = '',\r\n                provinceId = '',\r\n                specialtyId = \"\",\r\n                clinicId = ''\r\n            let selectedPayment = {},\r\n                selectedPrice = {},\r\n                selectedProvince = {},\r\n                selectedSpecialty = {},\r\n                selectedClinic = {}\r\n            if (res.data.Doctor_Info) {\r\n                addressClinicId = res.data.Doctor_Info.addressClinicId\r\n                nameClinic = res.data.Doctor_Info.nameClinic\r\n                note = res.data.Doctor_Info.note\r\n                paymentId = res.data.Doctor_Info.paymentId\r\n                priceId = res.data.Doctor_Info.priceId\r\n                provinceId = res.data.Doctor_Info.provinceId\r\n                specialtyId = res.data.Doctor_Info.specialtyId\r\n                clinicId = res.data.Doctor_Info.selectedClinic\r\n\r\n                selectedClinic = listClinic.find(item => item.value === clinicId)\r\n                selectedSpecialty = listSpecialty.find(item => item.value === specialtyId)\r\n                selectedPayment = listPayment.find(item => item.value === paymentId)\r\n                selectedPrice = listPrice.find(item => item.value === priceId)\r\n                selectedProvince = listProvince.find(item => item.value === provinceId)\r\n            }\r\n\r\n            this.setState({\r\n                contentHTML: mardown.contentHTML,\r\n                contentMarkdown: mardown.contentMarkdown,\r\n                description: mardown.description,\r\n                hasOldData: true,\r\n                action: CRUD_ACTIONS.EDIT,\r\n                selectedPayment: selectedPayment,\r\n                selectedPrice: selectedPrice,\r\n                selectedProvince: selectedProvince,\r\n                selectedSpecialty: selectedSpecialty,\r\n                selectedClinic: selectedClinic,\r\n                nameClinic: nameClinic,\r\n                clinicAddress: addressClinicId,\r\n                note: note,\r\n            })\r\n        } else {\r\n            this.setState({\r\n                contentHTML: \"\",\r\n                contentMarkdown: \"\",\r\n                description: \"\",\r\n                hasOldData: false,\r\n                action: CRUD_ACTIONS.CREATE,\r\n                selectedPayment: null,\r\n                selectedPrice: null,\r\n                selectedProvince: null,\r\n                selectedSpecialty: null,\r\n                selectedClinic: null,\r\n                nameClinic: '',\r\n                clinicAddress: '',\r\n                note: '',\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChangeSelectDoctorInfo = (selectedValue, name) => {\r\n        let stateName = name.name\r\n        let copyState = this.state\r\n        copyState[stateName] = selectedValue\r\n        this.setState({ ...copyState })\r\n    }\r\n\r\n    handleOnChangeTextInput = (e) => {\r\n        const { name, value } = e.target\r\n        let cpState = this.state\r\n        cpState[name] = value\r\n        this.setState({ ...cpState })\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            selectedDoctor,\r\n            description,\r\n            listDoctos,\r\n            contentMarkdown,\r\n            hasOldData,\r\n            listPrice,\r\n            listPayment,\r\n            listProvince,\r\n            selectedPayment,\r\n            selectedPrice,\r\n            selectedProvince,\r\n            nameClinic,\r\n            clinicAddress,\r\n            note,\r\n            selectedClinic,\r\n            selectedSpecialty,\r\n            listClinic,\r\n            listSpecialty,\r\n        } = this.state;\r\n        const {\r\n            isLoading\r\n        } = this.props\r\n\r\n        return (\r\n            <div className=\"manage-doctor-container\">\r\n                <div className=\"manage-doctor-title\">\r\n                    <FormattedMessage id=\"manage-doctor.add-a-doctor\" />\r\n                </div>\r\n\r\n                {isLoading && <h6 style={{ color: \"red\" }}>Loading data. . . Please wait!</h6>}\r\n                <div className=\"more-info\">\r\n                    <div className=\"content-left form-group\">\r\n                        <label className=\"\">\r\n                            <FormattedMessage id=\"manage-doctor.choose-a-doctor\" />\r\n                        </label>\r\n\r\n                        <Select\r\n                            value={selectedDoctor}\r\n                            onChange={this.handleChangeSelect}\r\n                            options={listDoctos}\r\n                            name=\"selectedDoctor\"\r\n                            placeholder={<FormattedMessage id=\"manage-doctor.choose-a-doctor\" />}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"content-right\">\r\n                        <label>\r\n                            <FormattedMessage id=\"manage-doctor.intro-info\" />\r\n                        </label>\r\n                        <textarea\r\n                            rows={4}\r\n                            className=\"form-control\"\r\n                            onChange={this.handleOnChangeTextInput}\r\n                            name=\"description\"\r\n                            value={description}\r\n                        >\r\n\r\n                        </textarea>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"more-info-extra row\">\r\n                    <div className=\"col-4 form-group\">\r\n                        <label><FormattedMessage id=\"manage-doctor.choose-a-price\" /></label>\r\n                        <Select\r\n                            value={selectedPrice}\r\n                            onChange={this.handleChangeSelectDoctorInfo}\r\n                            options={listPrice}\r\n                            name=\"selectedPrice\"\r\n                            placeholder={<FormattedMessage id=\"manage-doctor.choose-a-price\" />}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-4 form-group\">\r\n                        <label><FormattedMessage id=\"manage-doctor.payment\" /></label>\r\n                        <Select\r\n                            value={selectedPayment}\r\n                            onChange={this.handleChangeSelectDoctorInfo}\r\n                            options={listPayment}\r\n                            name=\"selectedPayment\"\r\n                            placeholder={<FormattedMessage id=\"manage-doctor.payment\" />}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-4 form-group\">\r\n                        <label><FormattedMessage id=\"manage-doctor.choose-a-province\" /></label>\r\n                        <Select\r\n                            value={selectedProvince}\r\n                            onChange={this.handleChangeSelectDoctorInfo}\r\n                            options={listProvince}\r\n                            name=\"selectedProvince\"\r\n                            placeholder={<FormattedMessage id=\"manage-doctor.choose-a-province\" />}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-4 form-group\">\r\n                        <label><FormattedMessage id=\"manage-doctor.clinic-name\" /></label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            name=\"nameClinic\"\r\n                            value={nameClinic}\r\n                            onChange={this.handleOnChangeTextInput}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-4 form-group\">\r\n                        <label><FormattedMessage id=\"manage-doctor.clinic-address\" /></label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            value={clinicAddress}\r\n                            name=\"clinicAddress\"\r\n                            onChange={this.handleOnChangeTextInput}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-4 form-group\">\r\n                        <label><FormattedMessage id=\"manage-doctor.note\" /></label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            value={note}\r\n                            name=\"note\"\r\n                            onChange={this.handleOnChangeTextInput}\r\n                        />\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className='row'>\r\n                    <div className=\"col-4 form-group\">\r\n                        <label><FormattedMessage id=\"manage-doctor.select-specialty\" /></label>\r\n                        <Select\r\n                            value={selectedSpecialty}\r\n                            onChange={this.handleChangeSelectDoctorInfo}\r\n                            options={listSpecialty}\r\n                            name=\"selectedSpecialty\"\r\n                            placeholder={<FormattedMessage id=\"manage-doctor.select-specialty\" />}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-4 form-group\">\r\n                        <label><FormattedMessage id=\"manage-doctor.select-clinic\" /></label>\r\n                        <Select\r\n                            value={selectedClinic}\r\n                            onChange={this.handleChangeSelectDoctorInfo}\r\n                            options={listClinic}\r\n                            name=\"selectedClinic\"\r\n                            placeholder={<FormattedMessage id=\"manage-doctor.select-clinic\" />}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"manage-doctor-editor\">\r\n                    <MdEditor\r\n                        style={{ height: '500px' }}\r\n                        renderHTML={text => mdParser.render(text)}\r\n                        onChange={this.handleEditorChange}\r\n                        value={contentMarkdown}\r\n                    />\r\n                </div>\r\n                {\r\n                    hasOldData ? (\r\n                        <button\r\n                            className=\"save-content-doctor\"\r\n                            onClick={this.handleSaveDetailDoctor}\r\n                        >\r\n                            <span>\r\n                                <FormattedMessage id=\"manage-doctor.edit\" />\r\n                            </span>\r\n                        </button>\r\n                    ) : (\r\n                        <button\r\n                            className=\"create-content-doctor\"\r\n                            onClick={this.handleSaveDetailDoctor}\r\n                        >\r\n                            <span>\r\n                                <FormattedMessage id=\"manage-doctor.save\" />\r\n                            </span>\r\n                        </button>\r\n                    )\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        allDoctors: state.admin.allDoctors,\r\n        language: state.app.language,\r\n        requiredDoctorInfo: state.admin.requiredDoctorInfo,\r\n        isLoading: state.admin.isLoading\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchALLDoctor: () => dispatch(actions.fetchALLDoctor()),\r\n        getRequiredDoctorInfo: () => dispatch(actions.getDoctorRequiredInfo()),\r\n        saveInfoDoctorRedux: (data) => dispatch(actions.saveInfoDoctorRedux(data))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageDoctor);\r\n","import React, { Component } from 'react';\r\nimport \"./TableManageSpecialty.scss\"\r\n\r\nclass TableManageSpecialty extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    handleDelete = (user) => {\r\n        this.props.deleteFromParent(user.id)\r\n    }\r\n\r\n    handleEdit = (user) => {\r\n        this.props.handleEditFromParent(user)\r\n    }\r\n\r\n    render() {\r\n        const { data } = this.props\r\n        return (\r\n            <React.Fragment>\r\n                <table id=\"table-manage-user\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Tên chuyên khoa</th>\r\n                            <th>Specialty's name</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                        {data && data.map((item, i) => (\r\n                            <tr key={i}>\r\n                                <td>{item.nameVi}</td>\r\n                                <td>{item.nameEn}</td>\r\n                                <td>\r\n                                    <button\r\n                                        className=\"btn-edit\"\r\n                                        onClick={() => {\r\n                                            this.handleEdit(item)\r\n                                        }}\r\n                                    >\r\n                                        <i className=\"fas fa-pencil-alt \"></i>\r\n                                    </button>\r\n                                    <button className=\"btn-delete\"\r\n                                        onClick={() => this.handleDelete(item)}\r\n                                    >\r\n                                        <i className=\"fas fa-trash\"></i>\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default TableManageSpecialty;\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport './ManageSpecialty.scss'\r\nimport { FormattedMessage } from 'react-intl'\r\n//import markdonw\r\nimport MarkdownIt from 'markdown-it';\r\nimport MdEditor from 'react-markdown-editor-lite';\r\nimport 'react-markdown-editor-lite/lib/index.css';\r\n//\r\nimport { CRUD_ACTIONS, CommonUtils } from '../../../utils'\r\nimport { createNewSpecialty, getAllSpecialties, deleteSpecialty, editSpecialty } from '../../../services/userService'\r\nimport { toast } from 'react-toastify';\r\nimport TableManageSpecialty from './TableManageSpecialty';\r\n\r\nconst mdParser = new MarkdownIt(/* Markdown-it options */);\r\n\r\n\r\nclass ManageSpecialty extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            nameVi: \"\",\r\n            nameEn: \"\",\r\n            imgBase64: \"\",\r\n            descriptionHTML: \"\",\r\n            descriptionMarkdown: \"\",\r\n            descriptionMarkdown: \"\",\r\n            allSpecialty: [],\r\n            action: CRUD_ACTIONS.CREATE,\r\n            id: ''\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.fetchDataSpecialty()\r\n    }\r\n\r\n    fetchDataSpecialty = async () => {\r\n        let res = await getAllSpecialties()\r\n        if (res && res.errCode === 0) {\r\n            this.setState({\r\n                allSpecialty: res.data\r\n            })\r\n        }\r\n    }\r\n\r\n    async componentDidUpdate(prevProps) {\r\n\r\n    }\r\n\r\n    handleEditorChange = ({ html, text }) => {\r\n        this.setState({\r\n            descriptionMarkdown: text,\r\n            descriptionHTML: html,\r\n        })\r\n    }\r\n\r\n    handleChangeText = (e) => {\r\n        const { value, name } = e.target\r\n        let copyState = this.state\r\n        copyState[name] = value\r\n        this.setState({ ...copyState })\r\n    }\r\n\r\n    handleChangeImg = async (files) => {\r\n        if (files) {\r\n            let file = files[0]\r\n\r\n            //encode user image\r\n            let b64 = await CommonUtils.getBase64(file)\r\n            //to preview img //\r\n            // let imgUrl = URL.createObjectURL(file)\r\n            this.setState({\r\n                imgBase64: b64\r\n            })\r\n        }\r\n    }\r\n\r\n    handleSubmit = async () => {\r\n        const {\r\n            action,\r\n            nameVi,\r\n            nameEn,\r\n            imgBase64,\r\n            descriptionHTML,\r\n            descriptionMarkdown,\r\n            id\r\n        } = this.state\r\n\r\n        if (action === CRUD_ACTIONS.CREATE) {\r\n            let res = await createNewSpecialty({\r\n                nameVi,\r\n                nameEn,\r\n                descriptionHTML,\r\n                descriptionMarkdown,\r\n                imgBase64\r\n            })\r\n\r\n            if (res && res.errCode === 0) {\r\n                toast.success(res.message)\r\n                this.setState({\r\n                    nameVi: \"\",\r\n                    nameEn: \"\",\r\n                    imgBase64: \"\",\r\n                    descriptionHTML: \"\",\r\n                    descriptionMarkdown: \"\",\r\n                    action: CRUD_ACTIONS.CREATE\r\n                })\r\n            }\r\n            else\r\n                toast.error(res.errMessage)\r\n        } else {\r\n            let res = await editSpecialty({\r\n                nameVi,\r\n                nameEn,\r\n                image: imgBase64,\r\n                descriptionHTML,\r\n                descriptionMarkdown,\r\n                id\r\n            })\r\n            if (res && res.errCode === 0) {\r\n                toast.success(res.message)\r\n                this.setState({\r\n                    nameVi: \"\",\r\n                    nameEn: \"\",\r\n                    imgBase64: \"\",\r\n                    descriptionHTML: \"\",\r\n                    descriptionMarkdown: \"\",\r\n                    action: CRUD_ACTIONS.CREATE,\r\n                    id: \"\"\r\n                })\r\n            }\r\n            else\r\n                toast.error(res.errMessage)\r\n        }\r\n\r\n        await this.fetchDataSpecialty()\r\n    }\r\n\r\n    deleteFromParent = async (id) => {\r\n        let message = await deleteSpecialty(id)\r\n        if (message && message.errCode === 0) {\r\n            toast.success(message.message)\r\n        } else {\r\n            toast.error(message.errMessage)\r\n        }\r\n\r\n        await this.fetchDataSpecialty()\r\n    }\r\n\r\n    handleEditFromParent = async (item) => {\r\n        this.setState({\r\n            nameVi: item.nameVi,\r\n            nameEn: item.nameEn,\r\n            image: item.image,\r\n            descriptionHTML: item.descriptionHTML,\r\n            descriptionMarkdown: item.descriptionMarkdown,\r\n            action: CRUD_ACTIONS.EDIT,\r\n            id: item.id\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { descriptionMarkdown, nameVi, nameEn, allSpecialty } = this.state\r\n\r\n        return (\r\n            <div className=\"manage-specialty-container\">\r\n                <div className=\"ms-title\">\r\n\r\n                </div>\r\n\r\n                <div className=\"add-new-specialty row\">\r\n                    <div className=\"col-3 form-group\">\r\n                        <label>\r\n                            Tên chuyên khoa\r\n                        </label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"nameVi\"\r\n                            value={nameVi}\r\n                            onChange={this.handleChangeText}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-3 form-group\">\r\n                        <label>\r\n                            Specialty's name\r\n                        </label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"nameEn\"\r\n                            value={nameEn}\r\n                            onChange={this.handleChangeText}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <FormattedMessage id=\"manage-specialty.specialty-img\" />\r\n                        <input\r\n                            className=\"form-control-file\"\r\n                            type=\"file\"\r\n                            onChange={(e) => this.handleChangeImg(e.target.files)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <MdEditor\r\n                            style={{ height: '300px' }}\r\n                            renderHTML={text => mdParser.render(text)}\r\n                            onChange={this.handleEditorChange}\r\n                            value={descriptionMarkdown}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-12\">\r\n                        <button className=\"btn-save-specialty\" onClick={this.handleSubmit}>\r\n                            <FormattedMessage id=\"manage-specialty.save\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <TableManageSpecialty\r\n                    data={allSpecialty}\r\n                    deleteFromParent={this.deleteFromParent}\r\n                    handleEditFromParent={this.handleEditFromParent}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageSpecialty);\r\n","import React, { Component } from 'react';\r\nimport \"./TableManageClinic.scss\"\r\nimport { connect } from 'react-redux';\r\n\r\nclass TableManageClinic extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n    }\r\n\r\n    handleDelete = (user) => {\r\n        this.props.deleteFromParent(user.id)\r\n    }\r\n\r\n    handleEdit = (user) => {\r\n        this.props.handleEditFromParent(user)\r\n    }\r\n\r\n    render() {\r\n        const { data } = this.props\r\n        return (\r\n            <React.Fragment>\r\n                <table id=\"table-manage-user\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Tên phòng khám</th>\r\n                            <th>Clinic's name</th>\r\n                            <th>Địa chỉ</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                        {data && data.map((item, i) => (\r\n                            <tr key={i}>\r\n                                <td>{item.nameVi}</td>\r\n                                <td>{item.nameEn}</td>\r\n                                <td>{item.address}</td>\r\n                                <td>\r\n                                    <button\r\n                                        className=\"btn-edit\"\r\n                                        onClick={() => {\r\n                                            this.handleEdit(item)\r\n                                        }}\r\n                                    >\r\n                                        <i className=\"fas fa-pencil-alt \"></i>\r\n                                    </button>\r\n                                    <button className=\"btn-delete\"\r\n                                        onClick={() => this.handleDelete(item)}\r\n                                    >\r\n                                        <i className=\"fas fa-trash\"></i>\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableManageClinic);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport './ManageClinic.scss'\r\nimport { FormattedMessage } from 'react-intl'\r\n//import markdonw\r\nimport MarkdownIt from 'markdown-it';\r\nimport MdEditor from 'react-markdown-editor-lite';\r\nimport 'react-markdown-editor-lite/lib/index.css';\r\n//\r\nimport { CRUD_ACTIONS, CommonUtils } from '../../../utils'\r\nimport { createNewClinic } from '../../../services/userService'\r\nimport { toast } from 'react-toastify';\r\nimport { getAllClinics, editClinic, deleteClinic } from '../../../services/userService'\r\nimport TableManageClinic from './TableManageClinic';\r\n\r\nconst mdParser = new MarkdownIt(/* Markdown-it options */);\r\n\r\n\r\nclass ManageClinic extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            nameVi: \"\",\r\n            nameEn: \"\",\r\n            image: \"\",\r\n            descriptionHTML: \"\",\r\n            descriptionMarkdown: \"\",\r\n            address: \"\",\r\n            action: CRUD_ACTIONS.CREATE,\r\n            allClinics: [],\r\n            id: ''\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.fetchDataClinic()\r\n    }\r\n\r\n    fetchDataClinic = async () => {\r\n        let res = await getAllClinics()\r\n        if (res && res.errCode === 0) {\r\n            this.setState({\r\n                allClinics: res.data\r\n            })\r\n        }\r\n    }\r\n\r\n    handleEditorChange = ({ html, text }) => {\r\n        this.setState({\r\n            descriptionMarkdown: text,\r\n            descriptionHTML: html,\r\n        })\r\n    }\r\n\r\n    handleChangeText = (e) => {\r\n        const { value, name } = e.target\r\n        let copyState = this.state\r\n        copyState[name] = value\r\n        this.setState({ ...copyState })\r\n    }\r\n\r\n    handleChangeImg = async (e) => {\r\n        let files = e.target.files\r\n        if (files && files[0]) {\r\n            let file = files[0]\r\n\r\n            //encode user image\r\n            let b64 = await CommonUtils.getBase64(file)\r\n            //to preview img //\r\n            // let imgUrl = URL.createObjectURL(file)\r\n            this.setState({\r\n                image: b64\r\n            })\r\n        }\r\n    }\r\n\r\n    handleSubmit = async () => {\r\n        const {\r\n            action,\r\n            nameVi,\r\n            nameEn,\r\n            image,\r\n            descriptionHTML,\r\n            descriptionMarkdown,\r\n            address,\r\n            id\r\n        } = this.state\r\n        if (action === CRUD_ACTIONS.CREATE) {\r\n            let res = await createNewClinic({\r\n                nameVi,\r\n                nameEn,\r\n                image,\r\n                descriptionHTML,\r\n                descriptionMarkdown,\r\n                address,\r\n            })\r\n            if (res && res.errCode === 0) {\r\n                toast.success(res.message)\r\n                this.setState({\r\n                    nameVi: \"\",\r\n                    nameEn: \"\",\r\n                    image: \"\",\r\n                    descriptionHTML: \"\",\r\n                    descriptionMarkdown: \"\",\r\n                    address: '',\r\n                    action: CRUD_ACTIONS.CREATE\r\n                })\r\n            }\r\n            else\r\n                toast.error(res.errMessage)\r\n        } else {\r\n            let res = await editClinic({\r\n                nameVi,\r\n                nameEn,\r\n                image,\r\n                descriptionHTML,\r\n                descriptionMarkdown,\r\n                address,\r\n                id\r\n            })\r\n            if (res && res.errCode === 0) {\r\n                toast.success(res.message)\r\n                this.setState({\r\n                    nameVi: \"\",\r\n                    nameEn: \"\",\r\n                    image: \"\",\r\n                    descriptionHTML: \"\",\r\n                    descriptionMarkdown: \"\",\r\n                    address: '',\r\n                    action: CRUD_ACTIONS.CREATE\r\n                })\r\n            }\r\n            else\r\n                toast.error(res.errMessage)\r\n        }\r\n\r\n        await this.fetchDataClinic()\r\n    }\r\n\r\n    deleteFromParent = async (id) => {\r\n        let message = await deleteClinic(id)\r\n        if (message && message.errCode === 0) {\r\n            toast.success(message.message)\r\n        } else {\r\n            toast.error(message.errMessage)\r\n        }\r\n        await this.fetchDataClinic()\r\n    }\r\n\r\n    handleEditFromParent = async (item) => {\r\n        this.setState({\r\n            nameVi: item.nameVi,\r\n            nameEn: item.nameEn,\r\n            image: item.image,\r\n            descriptionHTML: item.descriptionHTML,\r\n            descriptionMarkdown: item.descriptionMarkdown,\r\n            address: item.address,\r\n            action: CRUD_ACTIONS.EDIT,\r\n            id: item.id\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            descriptionMarkdown,\r\n            nameVi,\r\n            nameEn,\r\n            address,\r\n            allClinics,\r\n            action\r\n        } = this.state\r\n\r\n        return (\r\n            <div className=\"manage-specialty-container\">\r\n                <div className=\"ms-title\">\r\n\r\n                </div>\r\n\r\n                <div className=\"add-new-specialty row\">\r\n                    <div className=\"col-3 form-group\">\r\n                        <label>\r\n                            Tên phòng khám\r\n                        </label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"nameVi\"\r\n                            value={nameVi}\r\n                            onChange={this.handleChangeText}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-3 form-group\">\r\n                        <label>\r\n                            Clinic's name\r\n                        </label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"nameEn\"\r\n                            value={nameEn}\r\n                            onChange={this.handleChangeText}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <FormattedMessage id=\"manage-specialty.specialty-img\" />\r\n                        <input\r\n                            className=\"form-control-file\"\r\n                            type=\"file\"\r\n                            onChange={this.handleChangeImg}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-6 form-group\">\r\n                        <FormattedMessage id=\"manage-specialty.address\" />\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"address\"\r\n                            value={address}\r\n                            onChange={this.handleChangeText}\r\n                        />                  </div>\r\n\r\n                    <div className=\"col-12\">\r\n                        <MdEditor\r\n                            style={{ height: '300px' }}\r\n                            renderHTML={text => mdParser.render(text)}\r\n                            onChange={this.handleEditorChange}\r\n                            value={descriptionMarkdown}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-12\">\r\n                        <button\r\n                            className={action === CRUD_ACTIONS.CREATE ? \"btn-save-specialty\" : \"btn-save-specialty btn-primary\"}\r\n                            onClick={this.handleSubmit}\r\n                        >                            <FormattedMessage id=\"manage-specialty.save\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <TableManageClinic\r\n                    data={allClinics}\r\n                    deleteFromParent={this.deleteFromParent}\r\n                    handleEditFromParent={this.handleEditFromParent}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageClinic);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport UserManage from '../containers/System/UserManage';\r\nimport UserRedux from '../containers/System/Admin/UserRedux';\r\nimport Header from '../containers/Header/Header';\r\nimport ManageDoctor from '../containers/System/Admin/ManageDoctor';\r\nimport ManageSpecialty from '../containers/System/Specialty/ManageSpecialty';\r\nimport ManageClinic from '../containers/System/Clinic/ManageClinic';\r\n\r\nclass System extends Component {\r\n    getRedirectLink = () => {\r\n        const { userInfo, systemMenuPath, doctorMenuPath, patientMenuPath } = this.props\r\n        if (userInfo) {\r\n            switch (userInfo.roleId) {\r\n                case \"R1\":\r\n                    return systemMenuPath\r\n                case \"R2\":\r\n                    return doctorMenuPath\r\n                default:\r\n                    return patientMenuPath\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        const { isLoggedIn } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                {isLoggedIn && <Header />}\r\n                <div className=\"system-container\">\r\n                    <div className=\"system-list\">\r\n                        <Switch>\r\n                            <Route path=\"/system/home-page\" component={UserManage} />\r\n                            <Route path=\"/system/user-manage\" component={UserRedux} />\r\n                            <Route path=\"/system/manage-doctor\" component={ManageDoctor} />\r\n                            <Route path=\"/system/manage-specialty\" component={ManageSpecialty} />\r\n                            <Route path=\"/system/manage-clinic\" component={ManageClinic} />\r\n\r\n                            <Route component={() => {\r\n                                return (<Redirect to={this.getRedirectLink()} />)\r\n                            }} />\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        systemMenuPath: state.app.systemMenuPath,\r\n        doctorMenuPath: state.app.doctorMenuPath,\r\n        patientMenuPath: state.app.patientMenuPath,\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        userInfo: state.user.userInfo\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(System);\r\n","import React, { Component } from 'react'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport { connect } from 'react-redux';\r\nimport Slider from \"react-slick\";\r\nimport { LANGUAGES } from '../../../utils/constant'\r\nimport { withRouter } from 'react-router'\r\nimport * as actions from '../../../store/actions'\r\n\r\nclass Specialty extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            dataSpecialty: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.props.fetchAllSpecialty()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { allSpecialty } = this.props\r\n        if (prevProps.allSpecialty !== allSpecialty) {\r\n            this.setState({\r\n                dataSpecialty: [...allSpecialty]\r\n            })\r\n        }\r\n    }\r\n\r\n    handleViewDetailSpecialty = (item) => {\r\n        this.props.history.push(`/detail-specialty/${item.id}`)\r\n    }\r\n\r\n    handleViewAllSpecialty = () => {\r\n        this.props.history.push(`/all-specialty`)\r\n    }\r\n\r\n    render() {\r\n        const { dataSpecialty } = this.state\r\n        const { language } = this.props\r\n\r\n        return (\r\n            <div className=\"section-share section-specialty\">\r\n                <div className=\"section-container\">\r\n                    <div className=\"section-header\">\r\n                        <span className=\"title-sec\" ><FormattedMessage id=\"banner.specialized-examination\" /> </span>\r\n                        <button\r\n                            className=\"btn-sec\"\r\n                            onClick={this.handleViewAllSpecialty}\r\n                        ><FormattedMessage id=\"banner.watch-more\" /></button>\r\n                    </div>\r\n                    <div className=\"section-body\">\r\n                        <Slider {...this.props.settings}>\r\n                            {\r\n                                dataSpecialty && dataSpecialty.length > 0 && dataSpecialty.map((item, i) => {\r\n                                    return (\r\n                                        <div\r\n                                            className=\"section-customize\"\r\n                                            key={i}\r\n                                            onClick={() => this.handleViewDetailSpecialty(item)}\r\n                                        >\r\n                                            <div\r\n                                                className=\"bg-img section-specialty\"\r\n                                                style={{ backgroundImage: `url(${item.image})`, margin: '0 auto' }}\r\n                                            />\r\n                                            <div\r\n                                                style={{\r\n                                                    paddingTop: \"30px\",\r\n                                                    fontWeight: \"500\",\r\n                                                    fontSize: \"15px\",\r\n                                                    paddingLeft: \"15px\",\r\n                                                    textAlign: 'center'\r\n                                                }}\r\n                                            >{language === LANGUAGES.VI ? item.nameVi : item.nameEn}</div>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Slider>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        language: state.app.language,\r\n        allSpecialty: state.admin.allSpecialty\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchAllSpecialty: () => dispatch(actions.fetchAllSpecialty())\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Specialty));\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl'\r\nimport { getTopClinics } from '../../../services/userService'\r\nimport Slider from \"react-slick\";\r\nimport { LANGUAGES } from '../../../utils'\r\nimport { withRouter } from 'react-router'\r\n\r\nclass MeicalFacility extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            dataClinics: []\r\n        }\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        let res = await getTopClinics(8)\r\n        if (res && res.errCode === 0) {\r\n            this.setState({\r\n                dataClinics: res.data\r\n            })\r\n        }\r\n    }\r\n\r\n    handleViewDetailSpecialty = (item) => {\r\n        this.props.history.push(`/detail-clinic/${item.id}`)\r\n    }\r\n\r\n    handleViewAllSpecialty = () => {\r\n        this.props.history.push(`/all-clinic`)\r\n    }\r\n\r\n    render() {\r\n        const { dataClinics } = this.state\r\n        const { language, settings } = this.props\r\n        return (\r\n            <div className=\"section-share section-medical-facility\">\r\n                <div className=\"section-container\">\r\n                    <div className=\"section-header\">\r\n                        <span className=\"title-sec\"><FormattedMessage id=\"banner.outstanding-medical-facility\" /></span>\r\n                        <button\r\n                            className=\"btn-sec\"\r\n                            onClick={this.handleViewAllSpecialty}\r\n                        ><FormattedMessage id=\"banner.watch-more\" /></button>\r\n                    </div>\r\n                    <div className=\"section-body\">\r\n                        <Slider {...settings}>\r\n                            {\r\n                                dataClinics && dataClinics.length > 0 && dataClinics.map((item, i) => {\r\n                                    return (\r\n                                        <div\r\n                                            className=\"section-customize\"\r\n                                            key={i}\r\n                                            onClick={() => this.handleViewDetailSpecialty(item)}\r\n                                        >\r\n                                            <div\r\n                                                className=\"bg-img section-medical-facility\"\r\n                                                style={{ backgroundImage: `url(${item.image})`, margin: '0 auto' }}\r\n                                            />\r\n                                            <div\r\n                                                style={{\r\n                                                    paddingTop: \"30px\",\r\n                                                    fontWeight: \"500\",\r\n                                                    fontSize: \"15px\",\r\n                                                    paddingLeft: \"15px\",\r\n                                                    textAlign: 'center'\r\n                                                }}\r\n                                            >{language === LANGUAGES.VI ? item.nameVi : item.nameEn}</div>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Slider>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        language: state.app.language,\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, null)(MeicalFacility));\r\n","import React, { Component } from 'react'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router'\r\nimport * as actions from '../../../store/actions'\r\nimport Slider from \"react-slick\";\r\nimport { LANGUAGES } from '../../../utils'\r\n\r\nclass OutStandingDoctor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            arrDoctos: []\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { topDoctors } = this.props\r\n        if (prevProps.topDoctors !== topDoctors) {\r\n            this.setState({\r\n                arrDoctos: [...topDoctors]\r\n            })\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.props.loadTopDoctor(8)\r\n    }\r\n\r\n    handleViewDetailDoctor = (item) => {\r\n        this.props.history.push(`/detail-doctor/${item.id}`)\r\n    }\r\n\r\n    getNameSpecialty = (specialtyId) => {\r\n        const { allSpecialty, language } = this.props\r\n        let name = ''\r\n        if (!allSpecialty || !allSpecialty.length > 0)\r\n            return name\r\n\r\n        for (let i = 0; i < allSpecialty.length; i++) {\r\n            if (specialtyId === allSpecialty[i].id) {\r\n                name = language === LANGUAGES.VI ? allSpecialty[i].nameVi : allSpecialty[i].nameEn\r\n                break;\r\n            }\r\n        }\r\n\r\n        return name\r\n    }\r\n\r\n    handleViewAllDoctor = () => {\r\n        this.props.history.push(`/all-doctor`)\r\n    }\r\n\r\n    render() {\r\n        const { arrDoctos } = this.state\r\n        const { language } = this.props\r\n        return (\r\n            <div className=\"section-share section-outstanding-doctor\">\r\n                <div className=\"section-container\">\r\n                    <div className=\"section-header\">\r\n                        <span className=\"title-sec\" ><FormattedMessage id=\"banner.outstanding-doctors\" /></span>\r\n                        <button\r\n                            className=\"btn-sec\"\r\n                            onClick={this.handleViewAllDoctor}\r\n                        >{language === LANGUAGES.VI ? \"TÌM KIẾM\" : \"FIND A DOCTOR\"}</button>\r\n                    </div>\r\n                    <div className=\"section-body\">\r\n                        <Slider {...this.props.settings}>\r\n\r\n                            {arrDoctos && arrDoctos.length > 0 && arrDoctos.map((item, i) => {\r\n                                let nameVi = `${item.positionData.valueVi}, ${item.lastName} ${item.firstName} `\r\n                                let nameEn = `${item.positionData.valueEn}, ${item.firstName} ${item.lastName}`\r\n\r\n                                return (\r\n                                    <div\r\n                                        className=\"section-customize\"\r\n                                        key={i}\r\n                                        onClick={() => this.handleViewDetailDoctor(item)}\r\n                                    >\r\n                                        <div className=\"customize-border\">\r\n                                            <div className=\"outer-bg\">\r\n                                                <div\r\n                                                    className=\"bg-img section-outstanding-doctor\"\r\n                                                    style={{ backgroundImage: `url(${item.image})` }}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"position text-center text-hover\">\r\n                                                <div>{language === LANGUAGES.EN ? nameEn : nameVi}</div>\r\n                                                <div>{item.Doctor_Info && item.Doctor_Info.specialtyId ? this.getNameSpecialty(item.Doctor_Info.specialtyId) : \"\"}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>)\r\n                            })}\r\n                        </Slider>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        language: state.app.language,\r\n        topDoctors: state.admin.topDoctors,\r\n        allSpecialty: state.admin.allSpecialty\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        loadTopDoctor: (limit) => dispatch(actions.fetchTopDoctor(limit))\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(OutStandingDoctor));\r\n","import React, { Component } from 'react'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport { connect } from 'react-redux';\r\nimport { LANGUAGES } from '../../../utils';\r\n\r\n\r\nclass About extends Component {\r\n    render() {\r\n        const { language } = this.props\r\n        return (\r\n            <div className=\"section-share section-about\">\r\n                <div className=\"section-about-header\">\r\n                    <FormattedMessage id=\"banner.prevention\" />\r\n                </div>\r\n                <div className=\"section-about-content\">\r\n                    <div className=\"content-left\">\r\n                        <iframe\r\n                            width=\"100%\"\r\n                            height=\"400px\"\r\n                            src=\"https://www.youtube.com/embed/12_QnjCPHZ8\"\r\n                            title=\"YouTube video player\"\r\n                            frameBorder=\"0\"\r\n                            allow=\"accelerometer; \r\n                        autoplay; \r\n                        clipboard-write; \r\n                        encrypted-media; \r\n                        gyroscope; \r\n                        picture-in-picture\"\r\n                            allowFullScreen></iframe>\r\n                    </div>\r\n\r\n                    <div className=\"content-right\">\r\n                        <span>\r\n                            {\r\n                                language === LANGUAGES.VI ? (\r\n                                    <>\r\n                                        <h5>Quy tắc 5K phòng tránh COVID-19</h5>\r\n                                        <div><b>KHẨU TRANG</b>: Đeo khẩu trang vải thường xuyên tại nơi công cộng, nơi tập trung đông người; đeo khẩu trang y tế tại các cơ sở y tế, khu cách ly.</div>\r\n                                        <div><b>KHỬ KHUẨN</b>: Rửa tay thường xuyên bằng xà phòng hoặc dung dịch sát khuẩn tay. Vệ sinh các bề mặt/ vật dụng thường xuyên tiếp xúc (tay nắm cửa, điện thoại, máy tính bảng, mặt bàn, ghế…). Giữ vệ sinh, lau rửa và để nhà cửa thông thoáng.</div>\r\n                                        <div><b>KHOẢNG CÁCH</b>: Giữ khoảng cách khi tiếp xúc với người khác.</div>\r\n                                        <div><b>KHÔNG TỤ TẬP</b> đông người.</div>\r\n                                        <div><b>KHAI BÁO Y TẾ:</b> thực hiện khai báo y tế trên App NCOVI; cài đặt ứng dụng BlueZone tại địa chỉ https://www.bluezone.gov.vnđể được cảnh báo nguy cơ lây nhiễm COVID-19.</div>\r\n\r\n                                        <div>===================<br />Khi có dấu hiệu sốt, ho, khó thở hãy gọi điện cho đường dây nóng của Bộ Y tế 19009095 hoặc đường dây nóng của y tế địa phương để được tư vấn, hỗ trợ, hướng dẫn đi khám bệnh đảm bảo an toàn.</div>\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        <h5>Vietnam's 5K rule to prevent epidemics</h5>\r\n                                        <div><b>MASK</b>: Wear cloth masks regularly in public places, places where people gather; Wear medical masks at medical facilities and isolation areas.</div>\r\n                                        <div><b>Disinfection</b>:  Wash your hands often with soap or hand sanitizer. Clean frequently touched surfaces/items (doorknobs, phones, tablets, tables, chairs, etc.). Keep clean, wash and keep the house well ventilated.</div>\r\n                                        <div><b>DISTANCE</b>: Keep your distance when in contact with others.</div>\r\n                                        <div>DO NOT HAVE <b> HUGE PEOPLE.</b></div>\r\n                                        <div><b>HEALTH DECLARATION</b>: make medical declaration on NCOVI App; Install the BlueZone application at https://www.bluezone.gov.vn to be warned about the risk of COVID-19 infection.</div>\r\n                                        <div>===================<br />When there are signs of fever, cough, difficulty breathing, please call the hotline of the Ministry of Health 19009095 or the hotline of the local health center for advice, support and instructions for safe medical examination.</div>\r\n                                    </>\r\n                                )\r\n                            }\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        language: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(About);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { LANGUAGES } from '../../../utils/constant';\r\nimport './CovidSection.scss'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport Select from 'react-select'\r\nimport { withRouter } from 'react-router'\r\nimport axios from '../../../axios'\r\nimport moment from 'moment'\r\n\r\nclass CovidSection extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            selectedCountry: { label: \"Viet Nam\", value: \"vietnam\" },\r\n            listCountries: [],\r\n            infoCOVID: null\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.fetchCountries()\r\n        await this.handOnChangeSelect(this.state.selectedCountry)\r\n    }\r\n\r\n    async componentDidUpdate(prevProps) {\r\n        const { language } = this.props\r\n\r\n        if (prevProps.language !== language) {\r\n            this.getName()\r\n        }\r\n    }\r\n\r\n    handleViewDetail = () => {\r\n        this.props.history.push('/detail-covid')\r\n    }\r\n\r\n    fetchCountries = async () => {\r\n        let countries = await axios.get(\"https://api.covid19api.com/countries\")\r\n        if (countries && countries.length > 0) {\r\n            this.setState({\r\n                listCountries: this.buildDataSelecter(countries)\r\n            })\r\n        }\r\n    }\r\n\r\n    buildDataSelecter = (data) => {\r\n        let result = []\r\n        for (let i = 0; i < data.length; i++) {\r\n            let obj = {}\r\n            obj.label = data[i].Country\r\n            obj.value = data[i].Slug\r\n\r\n            result.push(obj)\r\n        }\r\n        return result;\r\n    }\r\n\r\n    handOnChangeSelect = async (selectedCountry) => {\r\n        let id = selectedCountry.value\r\n        this.setState({ selectedCountry })\r\n        await axios.get(`https://api.covid19api.com/dayone/country/${id}`)\r\n            .then((res) => {\r\n                if (res && res.length > 0) {\r\n                    let data = res[res.length - 2]\r\n                    this.setState({ infoCOVID: data })\r\n                }\r\n            })\r\n    }\r\n\r\n    getName = () => {\r\n        const { infoCOVID } = this.state\r\n        const { language } = this.props\r\n        return infoCOVID ?\r\n            language === LANGUAGES.VI ?\r\n                moment(new Date(infoCOVID.Date)).locale('vi').format(\"LLL\") :\r\n                moment(new Date(infoCOVID.Date)).locale('en').format(\"LLL\")\r\n            :\r\n            '0'\r\n    }\r\n\r\n    render() {\r\n        const { selectedCountry, listCountries, infoCOVID } = this.state\r\n\r\n        return (\r\n            <div className=\"covid-section-container\">\r\n                <div className=\"c-s-titile-home\">\r\n                    <span>\r\n                        <FormattedMessage id=\"banner.covid\" />\r\n                        <button\r\n                            className=\"btn-sec\"\r\n                            onClick={this.handleViewDetail}\r\n                        ><FormattedMessage id=\"banner.watch-more\" /></button>                    </span>\r\n                    <div style={{ paddingBottom: \"10px\" }}>\r\n                        {\r\n                            this.getName()\r\n                        }\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"selector\">\r\n                    <Select\r\n                        value={selectedCountry}\r\n                        onChange={this.handOnChangeSelect}\r\n                        options={listCountries}\r\n                        className=\"col-4\"\r\n                        name=\"selectedClinic\"\r\n                        placeholder={<FormattedMessage id=\"manage-doctor.select-country\" />}\r\n                    />\r\n\r\n                </div>\r\n                <div className=\"c-s-info\">\r\n                    <div className=\"c-s-content-have\">\r\n                        <div className=\"content-title\">\r\n                            <FormattedMessage id=\"homeheader.total-infections\" />\r\n                        </div>\r\n                        <div className=\"content-subtitle\">\r\n                            {infoCOVID ? infoCOVID.Confirmed : '0'}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"c-s-content-pass\">\r\n                        <div className=\"content-title\">\r\n                            <FormattedMessage id=\"homeheader.recovered\" />\r\n                        </div>\r\n                        <div className=\"content-subtitle\">\r\n                            {infoCOVID ? infoCOVID.Active : '0'}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"c-s-content-die\">\r\n                        <div className=\"content-title\">\r\n                            <FormattedMessage id=\"homeheader.deaths\" />\r\n                        </div>\r\n                        <div className=\"content-subtitle\">\r\n                            {infoCOVID ? infoCOVID.Deaths : '0'}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CovidSection));\r\n","import React from 'react'\r\nimport './HomePage.scss'\r\nimport HomeHeader from './HomeHeader';\r\nimport Specialty from './Sections/Specialty';\r\nimport MedicalFacility from './Sections/MedicalFacility';\r\n\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport OutstandingDoctor from './Sections/Outstanding-Doctor';\r\nimport About from './Sections/About';\r\nimport HomeFooter from './HomeFooter';\r\nimport CovidSection from './Sections/Covid'\r\n\r\nfunction HomePage() {\r\n    let settings = {\r\n        dots: false,\r\n        infinite: false,\r\n        speed: 500,\r\n        slidesToShow: 4,\r\n        slidesToScroll: 1\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <HomeHeader isShowBanner={true} />\r\n            <Specialty settings={settings} />\r\n            <MedicalFacility settings={settings} />\r\n            <OutstandingDoctor settings={settings} />\r\n            <CovidSection />\r\n            <About />\r\n            <HomeFooter />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default HomePage;\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { LANGUAGES } from '../../../../utils/constant';\r\nimport './ProfileDoctor.scss'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport { getProfileDoctorById } from '../../../../services/userService'\r\nimport NumberFormat from 'react-number-format';\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass ProfileDoctor extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            dataProfile: {}\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { doctorId } = this.props\r\n        let doctorInfo = await this.getInfoDoctor(doctorId)\r\n        if (doctorInfo)\r\n            this.setState({ dataProfile: doctorInfo })\r\n    }\r\n\r\n    async componentDidUpdate(prevProps) {\r\n\r\n    }\r\n\r\n    getInfoDoctor = async (id) => {\r\n        let result = {}\r\n        if (id) {\r\n            let res = await getProfileDoctorById(id)\r\n            if (res && res.errCode === 0) {\r\n                result = res.data\r\n            }\r\n        }\r\n\r\n        return result\r\n    }\r\n\r\n    getProvinceName = () => {\r\n        const { dataProfile } = this.state\r\n        const { language } = this.props\r\n        let name = ''\r\n        if (dataProfile && dataProfile.Doctor_Info && dataProfile.Doctor_Info.provinceData) {\r\n            let data = dataProfile.Doctor_Info.provinceData\r\n            name = language === LANGUAGES.VI ? data.valueVi : data.valueEn\r\n        }\r\n\r\n        return name\r\n    }\r\n\r\n    renderTimeBooking = (dataTime) => {\r\n        const { language } = this.props\r\n\r\n        if (dataTime && !_.isEmpty(dataTime)) {\r\n            let time = language === LANGUAGES.VI ? dataTime.timeTypeData.valueVi : dataTime.timeTypeData.valueEn\r\n            let date = language === LANGUAGES.VI ?\r\n                moment.unix(+dataTime.date / 1000).format(\"dddd - DD/MM/YYYY\") :\r\n                moment.unix(+dataTime.date / 1000).locale('en').format(\"ddd - YYYY/MM/DD\")\r\n            return (\r\n                <>\r\n                    <div>{time} - {date}</div>\r\n                    <div>\r\n                        <FormattedMessage id=\"modal-booking.free-booking\" />\r\n                    </div>\r\n                </>\r\n            )\r\n        }\r\n\r\n        return <></>\r\n    }\r\n\r\n    render() {\r\n        const { dataProfile } = this.state\r\n        const { language, isShowDoctorDescription, dataTime, isShowLink, isShowPrice, doctorId } = this.props\r\n        let name = '', priceVi = '', priceEn = ''\r\n        if (dataProfile) {\r\n            if (language === LANGUAGES.VI)\r\n                name = dataProfile.lastName + \" \" + dataProfile.firstName\r\n            else\r\n                name = dataProfile.firstName + \" \" + dataProfile.lastName\r\n        }\r\n        if (dataProfile && dataProfile.Doctor_Info && dataProfile.Doctor_Info.priceData) {\r\n            priceEn = dataProfile.Doctor_Info.priceData.valueEn\r\n            priceVi = dataProfile.Doctor_Info.priceData.valueVi\r\n        }\r\n        return (\r\n            <div className=\"profile-doctor-container\">\r\n                <div className=\"intro-doctor\">\r\n                    <div\r\n                        className=\"content-left\"\r\n                        style={{ backgroundImage: `url(${dataProfile.image ? dataProfile.image : \"\"})` }}\r\n                    />\r\n\r\n                    <div className=\"content-right\">\r\n                        <div className=\"up\">\r\n                            {name}\r\n                        </div>\r\n\r\n                        <div className=\"down\">\r\n                            {\r\n                                isShowDoctorDescription ?\r\n                                    <>\r\n                                        {\r\n                                            (dataProfile.Markdown && dataProfile.Markdown.description) &&\r\n                                            <span>\r\n                                                {dataProfile.Markdown.description}\r\n                                            </span>\r\n                                        }\r\n                                    </> :\r\n                                    <>\r\n                                        {this.renderTimeBooking(dataTime)}\r\n                                    </>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"detail-doctor-location\">\r\n                    <i className=\"fas fa-map-marker-alt\" />\r\n                    <span>\r\n                        {this.getProvinceName()}\r\n                    </span>\r\n                </div>\r\n                {isShowLink && (\r\n                    <div className='pf-btn-view-more'>\r\n                        <Link to={`/detail-doctor/${doctorId}`}><FormattedMessage id=\"banner.watch-more\" /></Link>\r\n                    </div>\r\n                )}\r\n\r\n                {isShowPrice && (\r\n                    <div className=\"price\">\r\n                        <FormattedMessage id=\"extra-doctor-info.price\" />: {\"  \"}\r\n                        <NumberFormat\r\n                            value={language === LANGUAGES.VI ? priceVi : priceEn}\r\n                            displayType='text'\r\n                            thousandSeparator={true}\r\n                            suffix={language === LANGUAGES.VI ? 'đ' : '$'}\r\n                            style={{ color: \"#333\" }}\r\n                        />\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileDoctor);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport './BookingModal.scss'\r\nimport { Modal } from 'reactstrap';\r\nimport { FormattedMessage } from 'react-intl'\r\nimport ProfileDoctor from '../ProfileDoctor';\r\nimport * as actions from '../../../../../store/actions'\r\nimport { LANGUAGES } from '../../../../../utils';\r\nimport Select from 'react-select'\r\nimport { editUser, postBookingAppointment } from '../../../../../services/userService'\r\nimport { toast } from 'react-toastify';\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\nimport LoadingOverlay from 'react-loading-overlay-ts';\r\n\r\nclass BookingModal extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            firstName: \"\",\r\n            lastName: '',\r\n            phoneNumber: '',\r\n            email: \"\",\r\n            address: \"\",\r\n            reason: '',\r\n            birthday: \"\",\r\n            gender: \"\",\r\n            selectedGender: \"\",\r\n            timeType: '',\r\n            listGender: [],\r\n            isLoading: false\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.props.fetchGender()\r\n        const { user, genders } = this.props\r\n\r\n        if (user && !_.isEmpty(user)) {\r\n            this.setState({\r\n                firstName: user.firstName,\r\n                lastName: user.lastName,\r\n                phoneNumber: user.phoneNumber,\r\n                email: user.email,\r\n                address: user.address,\r\n                birthday: user.birthday,\r\n                selectedGender: this.buildFirstGenderSelect(genders)\r\n            })\r\n        }\r\n    }\r\n\r\n    async componentDidUpdate(prevProps) {\r\n        const { genders, language, dataSchedule } = this.props\r\n        if (prevProps.genders !== genders) {\r\n            this.setState({\r\n                listGender: this.buildDataGender(genders),\r\n                timeType: dataSchedule.timeType,\r\n                selectedGender: this.buildFirstGenderSelect(genders)\r\n            })\r\n\r\n        }\r\n\r\n        if (language !== prevProps.language) {\r\n            this.setState({\r\n                listGender: this.buildDataGender(genders)\r\n            })\r\n        }\r\n    }\r\n\r\n    buildFirstGenderSelect = (genders) => {\r\n        const { language, user } = this.props\r\n        if (user && !_.isEmpty(user)) {\r\n            let result = {}\r\n            for (let i = 0; i < genders.length; i++) {\r\n                if (genders[i].keyMap === user.gender) {\r\n                    result.value = genders[i].keyMap;\r\n                    result.label = language === LANGUAGES.VI ? genders[i].valueVi : genders[i].valueEn\r\n                    break\r\n                }\r\n            }\r\n\r\n            return result\r\n        } else {\r\n            return {\r\n                label: genders[0].label,\r\n                value: genders[0].keyMap\r\n            }\r\n        }\r\n    }\r\n\r\n    onChangeText = (e) => {\r\n        const { value, name } = e.target\r\n        let copyState = this.state\r\n        copyState[name] = value\r\n        this.setState({ ...copyState })\r\n    }\r\n\r\n    buildDataGender = (data) => {\r\n        const { language } = this.props\r\n\r\n        let result = []\r\n\r\n        if (data && data.length > 0) {\r\n            data.map(item => {\r\n                let obj = {}\r\n                obj.label = language === LANGUAGES.VI ? item.valueVi : item.valueEn\r\n                obj.value = item.keyMap\r\n                result.push(obj)\r\n\r\n                return item\r\n            })\r\n        }\r\n\r\n        return result\r\n    }\r\n\r\n    handleChangeSelect = async (selectedGender) => {\r\n        this.setState({ selectedGender })\r\n    }\r\n\r\n    validateInput = () => {\r\n        const valid = [\r\n            \"firstName\",\r\n            \"lastName\",\r\n            \"phoneNumber\",\r\n            \"email\",\r\n            \"address\",\r\n            \"reason\",\r\n            \"birthday\",\r\n            \"selectedGender\",\r\n            \"timeType\",\r\n        ]\r\n\r\n        for (let i = 0; i < valid.length; i++) {\r\n            if (!this.state[valid[i]]) {\r\n                toast.warn(\"You must fill in input \" + valid[i])\r\n                return false\r\n            }\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    handleSubmit = async () => {\r\n        const {\r\n            firstName,\r\n            lastName,\r\n            phoneNumber,\r\n            email,\r\n            address,\r\n            reason,\r\n            birthday,\r\n            selectedGender,\r\n            timeType\r\n        } = this.state\r\n\r\n        const { dataSchedule, language } = this.props\r\n\r\n        if (!this.validateInput()) return\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n\r\n        let timeString = this.buildTimeBooking(dataSchedule)\r\n        let doctorName = this.buildDoctorName(dataSchedule)\r\n        const dataUser = {\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            phoneNumber: phoneNumber,\r\n            email: email,\r\n            address: address,\r\n            reason: reason,\r\n            date: dataSchedule.date,\r\n            birthday: birthday,\r\n            doctorId: this.props.doctorId,\r\n            gender: selectedGender.value,\r\n            timeType: timeType,\r\n            language: language,\r\n            timeString: timeString,\r\n            doctorName: doctorName\r\n        }\r\n\r\n        let res = await postBookingAppointment(dataUser)\r\n        if (this.props.isLoggedIn) {\r\n            editUser({\r\n                ...dataUser,\r\n                birthday: birthday,\r\n                id: this.props.user.id\r\n            })\r\n            this.props.updateUserInfo({\r\n                ...dataUser,\r\n                birthday: birthday\r\n            })\r\n        }\r\n\r\n        if (res && res.errCode === 0) {\r\n            toast.success(res.message)\r\n            this.props.toggle()\r\n            this.setState({\r\n                isLoading: false\r\n            })\r\n        }\r\n        else {\r\n            toast.error(res.errMessage)\r\n            this.setState({\r\n                isLoading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    buildTimeBooking = (dataTime) => {\r\n        const { language } = this.props\r\n\r\n        if (dataTime && !_.isEmpty(dataTime)) {\r\n            let time = language === LANGUAGES.VI ? dataTime.timeTypeData.valueVi : dataTime.timeTypeData.valueEn\r\n            let date = language === LANGUAGES.VI ?\r\n                moment.unix(+dataTime.date / 1000).format(\"dddd - DD/MM/YYYY\") :\r\n                moment.unix(+dataTime.date / 1000).locale('en').format(\"ddd - YYYY/MM/DD\")\r\n            return `${time} - ${date}`\r\n        }\r\n\r\n        return \"\"\r\n    }\r\n\r\n\r\n    buildDoctorName = (dataName) => {\r\n        const { language } = this.props\r\n        if (dataName && !_.isEmpty(dataName)) {\r\n            let name = language === LANGUAGES.VI ?\r\n                `${dataName.doctorData.lastName} ${dataName.doctorData.firstName}` :\r\n                `${dataName.doctorData.firstName} ${dataName.doctorData.lastName}`\r\n            return name\r\n        }\r\n        return ''\r\n    }\r\n\r\n    render() {\r\n        const { isOpen, toggle, dataSchedule, doctorId, language } = this.props\r\n        const {\r\n            firstName,\r\n            lastName,\r\n            phoneNumber,\r\n            email,\r\n            address,\r\n            reason,\r\n            birthday,\r\n            listGender,\r\n            selectedGender,\r\n            isLoading\r\n        } = this.state\r\n\r\n        return (\r\n            <LoadingOverlay\r\n                active={isLoading}\r\n                spinner\r\n                text={language === LANGUAGES.VI ? 'Đang gửi...' : 'Sending content...'}\r\n            >\r\n                <Modal\r\n                    isOpen={isOpen}\r\n                    toggle={toggle}\r\n                    className=\"booking-modal-container\"\r\n                    size=\"lg\"\r\n                    centered\r\n                >\r\n                    <div className=\"booking-modal-content\">\r\n                        <div className=\"booking-modal-header\">\r\n                            <span className=\"left\">\r\n                                <FormattedMessage id=\"modal-booking.booking\" />\r\n                            </span>\r\n\r\n                            <span className=\"right\" onClick={toggle}>\r\n                                <i className=\"fas fa-times\" />\r\n                            </span>\r\n                        </div>\r\n\r\n                        <div className=\"booking-modal-body container\">\r\n                            <div className=\"doctor-info\">\r\n                                <ProfileDoctor\r\n                                    doctorId={doctorId}\r\n                                    isShowDoctorDescription={false}\r\n                                    dataTime={dataSchedule}\r\n                                    isShowLink={false}\r\n                                    isShowPrice={true}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className='row'>\r\n                                <div className=\"col-6 form-group\">\r\n                                    <label>\r\n                                        <FormattedMessage id=\"manage-user.last-name\" />\r\n                                    </label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        name=\"lastName\"\r\n                                        value={lastName}\r\n                                        onChange={this.onChangeText}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"col-6 form-group\">\r\n                                    <label>\r\n                                        <FormattedMessage id=\"manage-user.first-name\" />\r\n                                    </label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        name=\"firstName\"\r\n                                        value={firstName}\r\n                                        onChange={this.onChangeText}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"col-6 form-group\">\r\n                                    <label>\r\n                                        <FormattedMessage id=\"manage-user.phone-number\" />\r\n                                    </label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        name=\"phoneNumber\"\r\n                                        value={phoneNumber}\r\n                                        onChange={this.onChangeText}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"col-6 form-group\">\r\n                                    <label>Email</label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        name=\"email\"\r\n                                        value={email}\r\n                                        onChange={this.onChangeText}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"col-6 form-group\">\r\n                                    <label>\r\n                                        <FormattedMessage id=\"manage-user.address\" />\r\n                                    </label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        name=\"address\"\r\n                                        value={address}\r\n                                        onChange={this.onChangeText}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"col-6 form-group\">\r\n                                    <label>\r\n                                        <FormattedMessage id=\"manage-user.gender\" />\r\n                                    </label>\r\n                                    <Select\r\n                                        value={selectedGender}\r\n                                        onChange={this.handleChangeSelect}\r\n                                        options={listGender}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"col-6 form-group\">\r\n                                    <label>\r\n                                        <FormattedMessage id=\"manage-user.birthday\" />\r\n                                    </label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        name=\"birthday\"\r\n                                        value={birthday}\r\n                                        onChange={this.onChangeText}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"col-6 form-group\">\r\n                                    <label>\r\n                                        <FormattedMessage id=\"manage-user.reason\" />\r\n                                    </label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        name=\"reason\"\r\n                                        value={reason}\r\n                                        onChange={this.onChangeText}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"booking-modal-footer\">\r\n                            <button className=\"btn-confirm\" onClick={this.handleSubmit}>\r\n                                <FormattedMessage id=\"modal-booking.submit\" />\r\n                            </button>\r\n\r\n                            <button className=\"btn-cancel\" onClick={toggle}>\r\n                                <FormattedMessage id=\"modal-booking.cancel\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </LoadingOverlay>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language,\r\n        genders: state.admin.genders,\r\n        user: state.user.userInfo,\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchGender: () => dispatch(actions.fetchGenderStart()),\r\n        updateUserInfo: (data) => dispatch(actions.updateUserInfo(data))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BookingModal);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { LANGUAGES } from '../../../../utils/constant';\r\nimport './DoctorSchedule.scss'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport moment from 'moment'\r\nimport localization from 'moment/locale/vi'\r\nimport { getScheduleDoctorByDate } from '../../../../services/userService'\r\nimport BookingModal from './Modal/BookingModal';\r\n\r\nclass DoctorSchedule extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            allDays: [],\r\n            allAvailableTimes: [],\r\n            isShowModal: false,\r\n            dataScheduleTimeModal: {}\r\n        }\r\n    }\r\n\r\n    getArrayDays = () => {\r\n        const { language } = this.props\r\n\r\n        let arrDate = []\r\n        for (let i = 0; i < 3; i++) {\r\n            let obj = {}\r\n            if (language === LANGUAGES.VI) {\r\n                if (i === 0) {\r\n                    let labelVi = moment(new Date()).format('DD/MM')\r\n                    let today = `Hôm nay - ${labelVi}`\r\n                    obj.labelVi = today;\r\n                } else {\r\n                    obj.labelVi = this.capitalizeFirstLetter(moment(new Date()).add(i, 'days').format('dddd - DD/MM'))\r\n                }\r\n            } else {\r\n                if (i === 0) {\r\n                    let labelEn = moment(new Date()).locale('en').format('DD/MM')\r\n                    let today = `Today - ${labelEn}`\r\n                    obj.labelEn = today;\r\n                } else {\r\n                    obj.labelEn = moment(new Date()).add(i, 'days').locale('en').format('ddd - DD/MM')\r\n                }\r\n            }\r\n            obj.value = moment(new Date()).add(i, 'days').startOf('day').valueOf()\r\n\r\n            arrDate.push(obj)\r\n        }\r\n\r\n        return arrDate\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const allDays = await this.getArrayDays()\r\n        if (allDays && allDays.length > 0) {\r\n            this.setState({\r\n                allDays,\r\n            })\r\n        }\r\n\r\n        let res = await getScheduleDoctorByDate(this.props.doctorIdFromParent, this.state.allDays[0].value)\r\n        if (res && res.errCode === 0) {\r\n            this.setState({\r\n                allAvailableTimes: res.data\r\n            })\r\n        }\r\n    }\r\n\r\n    async componentDidUpdate(prevProps) {\r\n        const { language, doctorIdFromParent } = this.props\r\n        const { allDays } = this.state\r\n\r\n        if (prevProps.language !== language) {\r\n            const allDays = this.getArrayDays()\r\n            this.setState({ allDays })\r\n        }\r\n\r\n        if (prevProps.doctorIdFromParent !== doctorIdFromParent) {\r\n            let res = await getScheduleDoctorByDate(doctorIdFromParent, allDays[0].value)\r\n            if (res && res.errCode === 0) {\r\n                this.setState({\r\n                    allAvailableTimes: res.data\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    handleChangeSelect = async (e) => {\r\n        if (this.props.doctorIdFromParent) {\r\n            let doctorId = this.props.doctorIdFromParent\r\n            let date = e.target.value\r\n\r\n            let res = await getScheduleDoctorByDate(doctorId, date)\r\n\r\n            let allTime = []\r\n\r\n            if (res && res.errCode === 0) {\r\n                allTime = res.data\r\n                this.setState({\r\n                    allAvailableTimes: allTime\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    onHandleChoose = (item) => {\r\n        const { isShowModal } = this.state\r\n        this.setState({\r\n            isShowModal: !isShowModal,\r\n            dataScheduleTimeModal: item\r\n        })\r\n    }\r\n\r\n    toggle = () => {\r\n        const { isShowModal } = this.state\r\n        this.setState({ isShowModal: !isShowModal })\r\n    }\r\n\r\n    capitalizeFirstLetter(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n    render() {\r\n        const { allDays, allAvailableTimes, isShowModal, dataScheduleTimeModal } = this.state\r\n        const { language, doctorIdFromParent } = this.props\r\n\r\n        return (\r\n            <>\r\n                {\r\n                    isShowModal &&\r\n                    <BookingModal\r\n                        dataSchedule={dataScheduleTimeModal}\r\n                        isOpen={isShowModal}\r\n                        toggle={this.toggle}\r\n                        doctorId={doctorIdFromParent}\r\n                    />\r\n                }\r\n                <div className=\"doctor-schedule-container\">\r\n                    <div className=\"all-schedule\">\r\n                        <select onChange={this.handleChangeSelect}>\r\n                            {allDays && allDays.length > 0 && allDays.map((item, index) => {\r\n                                return (\r\n                                    <option\r\n                                        value={item.value}\r\n                                        key={index}\r\n                                    >\r\n                                        {language === LANGUAGES.VI ? item.labelVi : item.labelEn}\r\n                                    </option>\r\n                                )\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"all-available-time\">\r\n                        <div className=\"text-calendar\">\r\n                            <span className=\"\">\r\n                                <i className=\"fas fa-calendar-alt\" />\r\n                                <FormattedMessage id=\"patient.detail-doctor.schedule\" />\r\n                            </span>\r\n                        </div>\r\n\r\n                        <div className=\"time-content\">\r\n                            <>\r\n                                {\r\n                                    allAvailableTimes && allAvailableTimes.length > 0 ? allAvailableTimes.map((value, index) => {\r\n                                        let valueVi = value && value.timeTypeData ? value.timeTypeData.valueVi : ''\r\n                                        let valueEn = value && value.timeTypeData ? value.timeTypeData.valueEn : ''\r\n\r\n                                        return (\r\n                                            <button\r\n                                                key={index}\r\n                                                className={\"btn btn-schedule\"}\r\n                                                onClick={() => this.onHandleChoose(value)}\r\n                                            >\r\n                                                {language === LANGUAGES.VI ? valueVi : valueEn}\r\n                                            </button>\r\n                                        )\r\n                                    }) : (\r\n                                        <div style={{ marginBottom: \"5px\" }}>\r\n                                            <FormattedMessage id=\"patient.detail-doctor.none-schedule\" />\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                                <div className=\"book-fee\">\r\n                                    <span>\r\n                                        <i className=\"fas fa-hand-point-up fa-2r\" />\r\n                                        <FormattedMessage id=\"patient.fee\" />\r\n                                    </span>\r\n                                </div>\r\n                            </>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DoctorSchedule);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { LANGUAGES } from '../../../../utils/constant';\r\nimport './DoctorExtraInfo.scss'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport { getExtraInfoDoctorById } from '../../../../services/userService'\r\nimport NumberFormat from 'react-number-format';\r\n\r\nclass DoctorExtraInfo extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            viewDetail: false,\r\n            extraInfo: {}\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { doctorIdFromParent } = this.props\r\n        if (doctorIdFromParent) {\r\n            let res = await getExtraInfoDoctorById(doctorIdFromParent)\r\n            if (res && res.errCode === 0) {\r\n                this.setState({ extraInfo: res.data })\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    async componentDidUpdate(prevProps) {\r\n        const { doctorIdFromParent } = this.props\r\n        if (prevProps.doctorIdFromParent !== doctorIdFromParent) {\r\n            let res = await getExtraInfoDoctorById(doctorIdFromParent)\r\n            if (res && res.errCode === 0) {\r\n                this.setState({ extraInfo: res.data })\r\n            }\r\n        }\r\n    }\r\n\r\n    showInfo = () => {\r\n        const { viewDetail } = this.state\r\n\r\n        this.setState({ viewDetail: !viewDetail })\r\n    }\r\n\r\n    render() {\r\n        const { viewDetail, extraInfo } = this.state\r\n        const { language } = this.props\r\n\r\n        let priceEn = '', priceVi = '',\r\n            provinceVi = '', provinceEn = '',\r\n            paymentVi = '', paymentEn = ''\r\n        if (extraInfo && extraInfo.priceData) {\r\n            priceEn = extraInfo.priceData.valueEn\r\n            priceVi = extraInfo.priceData.valueVi\r\n        }\r\n\r\n        if (extraInfo && extraInfo.provinceData) {\r\n            provinceEn = extraInfo.provinceData.valueEn\r\n            provinceVi = extraInfo.provinceData.valueVi\r\n        }\r\n\r\n        if (extraInfo && extraInfo.paymentData) {\r\n            paymentEn = extraInfo.paymentData.valueEn\r\n            paymentVi = extraInfo.paymentData.valueVi\r\n        }\r\n\r\n        return (\r\n            <div className=\"doctor-extra-info-container\">\r\n                <div className=\"content-up\">\r\n                    <div className=\"text-title\">\r\n                        <FormattedMessage id=\"extra-doctor-info.clinic-address\" />\r\n                    </div>\r\n                    <div className=\"name-clinic\">{extraInfo.nameClinic}</div>\r\n                    <div className=\"detail-address\">{extraInfo.addressClinicId} - {language === LANGUAGES.VI ? provinceVi : provinceEn}</div>\r\n                </div>\r\n\r\n                <div className=\"content-down\">\r\n                    {!viewDetail ?\r\n                        (\r\n                            <div className=\"btn-show\">\r\n                                <FormattedMessage id=\"extra-doctor-info.price\" />: {\" \"}\r\n                                <NumberFormat\r\n                                    value={language === LANGUAGES.VI ? priceVi : priceEn}\r\n                                    displayType='text'\r\n                                    thousandSeparator={true}\r\n                                    suffix={language === LANGUAGES.VI ? 'đ' : '$'}\r\n                                    style={{ color: \"#333\" }}\r\n                                />\r\n                                {\"     \"}\r\n                                <span onClick={this.showInfo}>\r\n                                    <FormattedMessage id=\"extra-doctor-info.view-detail\" />\r\n                                </span>\r\n                            </div>\r\n                        ) : (\r\n                            <>\r\n                                <div className=\"text-title\">\r\n                                    <FormattedMessage id=\"extra-doctor-info.price\" />\r\n                                </div>\r\n\r\n                                <div className=\"price-detail\">\r\n                                    <span className=\"left\">\r\n                                        <FormattedMessage id=\"extra-doctor-info.price\" />\r\n                                    </span>\r\n                                    <span className=\"right\">\r\n                                        <NumberFormat\r\n                                            value={language === LANGUAGES.VI ? priceVi : priceEn}\r\n                                            displayType='text'\r\n                                            thousandSeparator={true}\r\n                                            suffix={language === LANGUAGES.VI ? 'đ' : '$'}\r\n                                        />\r\n                                    </span>\r\n                                    <div className=\"note\">\r\n                                        {extraInfo.note}\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"payment\">\r\n                                    <FormattedMessage id=\"extra-doctor-info.payment\" />: {\" \"}\r\n                                    {\r\n                                        language === LANGUAGES.VI ? paymentVi : paymentEn\r\n                                    }\r\n                                </div>\r\n\r\n                                <div className=\"btn-show\">\r\n                                    <span onClick={this.showInfo}>\r\n                                        <FormattedMessage id=\"extra-doctor-info.hide-detail\" />\r\n                                    </span>\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    }\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DoctorExtraInfo);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { LANGUAGES } from '../../../../utils/constant';\r\n\r\nclass LikeButton extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    initFacebookSDK() {\r\n        if (window.FB) {\r\n            window.FB.XFBML.parse();\r\n        }\r\n\r\n        let { language } = this.props;\r\n        let locale = language === LANGUAGES.VI ? 'vi_VN' : 'en_US'\r\n        window.fbAsyncInit = function () {\r\n            window.FB.init({\r\n                appId: process.env.REACT_APP_FACEBOOK_APP_ID,\r\n                cookie: true,  // enable cookies to allow the server to access\r\n                // the session\r\n                xfbml: true,  // parse social plugins on this page\r\n                version: 'v2.5' // use version 2.1\r\n            });\r\n        };\r\n        // Load the SDK asynchronously\r\n        (function (d, s, id) {\r\n            var js, fjs = d.getElementsByTagName(s)[0];\r\n            if (d.getElementById(id)) return;\r\n            js = d.createElement(s); js.id = id;\r\n            js.src = `//connect.facebook.net/${locale}/sdk.js`;\r\n            fjs.parentNode.insertBefore(js, fjs);\r\n        }(document, 'script', 'facebook-jssdk'));\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.initFacebookSDK()\r\n    }\r\n\r\n    async componentDidUpdate(prevProps) {\r\n        if (prevProps.language !== this.props.language) {\r\n            this.initFacebookSDK()\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { dataHref } = this.props\r\n        return (\r\n            <>\r\n                <div\r\n                    className=\"fb-like\"\r\n                    data-href={dataHref}\r\n                    data-width=\"\"\r\n                    data-layout=\"standard\"\r\n                    data-action=\"like\"\r\n                    data-size=\"small\"\r\n                    data-share=\"true\"\r\n                ></div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LikeButton);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { LANGUAGES } from '../../../../utils/constant';\r\n\r\nclass Comment extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    initFacebookSDK() {\r\n        if (window.FB) {\r\n            window.FB.XFBML.parse();\r\n        }\r\n\r\n        let { language } = this.props;\r\n        let locale = language === LANGUAGES.VI ? 'vi_VN' : 'en_US'\r\n        window.fbAsyncInit = function () {\r\n            window.FB.init({\r\n                appId: process.env.REACT_APP_FACEBOOK_APP_ID,\r\n                cookie: true,  // enable cookies to allow the server to access\r\n                // the session\r\n                xfbml: true,  // parse social plugins on this page\r\n                version: 'v2.5' // use version 2.1\r\n            });\r\n        };\r\n        // Load the SDK asynchronously\r\n        (function (d, s, id) {\r\n            var js, fjs = d.getElementsByTagName(s)[0];\r\n            if (d.getElementById(id)) return;\r\n            js = d.createElement(s); js.id = id;\r\n            js.src = `//connect.facebook.net/${locale}/sdk.js`;\r\n            fjs.parentNode.insertBefore(js, fjs);\r\n        }(document, 'script', 'facebook-jssdk'));\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.initFacebookSDK()\r\n    }\r\n\r\n    async componentDidUpdate(prevProps) {\r\n        if (prevProps.language !== this.props.language) {\r\n            this.initFacebookSDK()\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { dataHref, numberCmt, width } = this.props\r\n        return (\r\n            <>\r\n                <div\r\n                    className=\"fb-comments\"\r\n                    data-href={dataHref}\r\n                    data-width={width ? width : ''}\r\n                    data-numposts={numberCmt ? numberCmt : \"5\"}\r\n                >\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Comment);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport HomeHeader from '../../HomeHeader';\r\nimport \"./DetailDoctor.scss\"\r\nimport { getDetailInfoDoctor } from '../../../../services/userService'\r\nimport { LANGUAGES } from '../../../../utils/constant';\r\nimport DoctorSchedule from './DoctorSchedule';\r\nimport DoctorExtraInfo from './DoctorExtraInfo';\r\nimport LikeButton from '../Social/LikeButton';\r\nimport Comment from '../Social/Comment';\r\n\r\nclass DetailDoctor extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            detailDoctor: {},\r\n        }\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        if (this.props.match && this.props.match.params && this.props.match.params.id) {\r\n            let doctorId = this.props.match.params.id\r\n            let res = await getDetailInfoDoctor(doctorId)\r\n            if (res && res.errCode === 0) {\r\n                this.setState({\r\n                    detailDoctor: res.data,\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    getProvinceName = () => {\r\n        const { detailDoctor } = this.state\r\n        const { language } = this.props\r\n        let name = ''\r\n        if (detailDoctor && detailDoctor.Doctor_Info && detailDoctor.Doctor_Info.provinceData) {\r\n            let data = detailDoctor.Doctor_Info.provinceData\r\n            name = language === LANGUAGES.VI ? data.valueVi : data.valueEn\r\n        }\r\n\r\n        return name\r\n    }\r\n\r\n    render() {\r\n        const { detailDoctor } = this.state\r\n        const { language } = this.props\r\n        let nameVi = \"\", nameEn = \"\"\r\n\r\n        if (detailDoctor.positionData) {\r\n            nameVi = `${detailDoctor.positionData.valueVi} ${detailDoctor.lastName} ${detailDoctor.firstName}`\r\n            nameEn = `${detailDoctor.positionData.valueEn === \"None\" ? \"\" : detailDoctor.positionData.valueEn} ${detailDoctor.firstName} ${detailDoctor.lastName}`\r\n        }\r\n\r\n        let currentURL = +process.env.REACT_APP_IS_LOCALHOST === 1 ?\r\n            \"https://daisycare-bot.herokuapp.com/\" :\r\n            window.location.href\r\n\r\n        return (\r\n\r\n            <>\r\n                <HomeHeader isShowBanner={false} />\r\n                <div className=\"doctor-detail-container\">\r\n                    <div className=\"intro-doctor\">\r\n                        <div\r\n                            className=\"content-left\"\r\n                            style={{ backgroundImage: `url(${detailDoctor.image ? detailDoctor.image : \"\"})` }}\r\n                        >\r\n\r\n                        </div>\r\n\r\n                        <div className=\"content-right\">\r\n                            <div className=\"up\">\r\n                                {language === LANGUAGES.VI ? nameVi : nameEn}\r\n                            </div>\r\n                            <div className=\"down\">\r\n                                {\r\n                                    (detailDoctor.Markdown && detailDoctor.Markdown.description) &&\r\n                                    <span\r\n                                        dangerouslySetInnerHTML={{\r\n                                            __html: detailDoctor.Markdown.description.replace('\\n', '<br/>') \r\n                                        }}\r\n                                    />\r\n                                }\r\n                                <br />\r\n                                <LikeButton\r\n                                    dataHref={currentURL}\r\n                                />\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"detail-doctor-location\">\r\n                        <i className=\"fas fa-map-marker-alt\" />\r\n                        <span>\r\n                            {this.getProvinceName()}\r\n                        </span>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"schedule-doctor\">\r\n                        <div className=\"content-left\">\r\n                            <DoctorSchedule doctorIdFromParent={this.props.match.params.id} />\r\n                        </div>\r\n\r\n                        <div className=\"content-right\">\r\n                            <DoctorExtraInfo doctorIdFromParent={this.props.match.params.id} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"detail-doctor\">\r\n                        {detailDoctor && detailDoctor.Markdown && detailDoctor.Markdown.contentHTML && (\r\n                            <div\r\n                                dangerouslySetInnerHTML={{\r\n                                    __html: detailDoctor.Markdown.contentHTML\r\n                                }}\r\n                            />\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"comment-doctor\">\r\n                        <Comment\r\n                            dataHref={currentURL}\r\n                            width=\"100%\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailDoctor);\r\n","import React, { Component } from 'react';\r\nimport Flatpickr from 'react-flatpickr';\r\nimport moment from 'moment';\r\n\r\nimport { KeyCodeUtils } from \"../../utils\";\r\nimport './DatePicker.scss';\r\n\r\n// const CustomInput = ({ value, defaultValue, inputRef, onInputChange, onInputBlur, ...props }) => {\r\n//     return <input {...props} className='custom-form-control custom-date-input' defaultValue={defaultValue} ref={inputRef}\r\n//         onChange={onInputChange}\r\n//         onBlur={onInputBlur}\r\n//     />;\r\n// };\r\n\r\nclass DatePicker extends Component {\r\n\r\n    flatpickrNode = null;\r\n\r\n    nodeRef = element => {\r\n        this.flatpickr = element && element.flatpickr;\r\n        this.flatpickrNode = element && element.node;\r\n        if (this.flatpickrNode) {\r\n            this.flatpickrNode.addEventListener('blur', this.handleBlur);\r\n            this.flatpickrNode.addEventListener('keydown', this.handlerKeyDown);\r\n        }\r\n    };\r\n\r\n    handlerKeyDown = (event) => {\r\n        const keyCode = event.which || event.keyCode;\r\n        if (keyCode === KeyCodeUtils.ENTER) {\r\n            event.preventDefault();\r\n            const { onChange } = this.props;\r\n            const value = event.target.value;\r\n\r\n            // Take the blur event and process the string value\r\n            const valueMoment = moment(value, 'DD/MM/YYYY');\r\n            onChange([valueMoment.toDate(), valueMoment.toDate()]);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.flatpickrNode) {\r\n            this.flatpickrNode.removeEventListener('blur', this.handleBlur);\r\n            this.flatpickrNode.removeEventListener('keydown', this.handlerKeyDown);\r\n        }\r\n    }\r\n\r\n    handleBlur = (event) => {\r\n        const { onChange } = this.props;\r\n        const value = event.target.value;\r\n\r\n        // Take the blur event and process the string value\r\n        event.preventDefault();\r\n        const valueMoment = moment(value, 'DD/MM/YYYY');\r\n        onChange([valueMoment.toDate(), valueMoment.toDate()]);\r\n    };\r\n\r\n    onOpen = () => {\r\n        if (this.flatpickrNode) {\r\n            // this.flatpickrNode.blur();\r\n        }\r\n    }\r\n\r\n    close() {\r\n        this.flatpickr.close();\r\n    }\r\n\r\n    checkDateValue = (str, max) => {\r\n        if (str.charAt(0) !== '0' || str === '00') {\r\n            var num = parseInt(str);\r\n            if (isNaN(num) || num <= 0 || num > max) num = 1;\r\n            str = num > parseInt(max.toString().charAt(0)) && num.toString().length === 1 ? '0' + num : num.toString();\r\n        };\r\n        return str;\r\n    }\r\n\r\n    // autoFormatonBlur = (value) => {\r\n    //     var input = value;\r\n    //     var values = input.split('/').map(function (v, i) {\r\n    //         return v.replace(/\\D/g, '')\r\n    //     });\r\n    //     var output = '';\r\n\r\n    //     if (values.length == 3) {\r\n    //         var year = values[2].length !== 4 ? parseInt(values[2]) + 2000 : parseInt(values[2]);\r\n    //         var month = parseInt(values[0]) - 1;\r\n    //         var day = parseInt(values[1]);\r\n    //         var d = new Date(year, month, day);\r\n    //         if (!isNaN(d)) {\r\n    //             //document.getElementById('result').innerText = d.toString();\r\n    //             var dates = [d.getMonth() + 1, d.getDate(), d.getFullYear()];\r\n    //             output = dates.map(function (v) {\r\n    //                 v = v.toString();\r\n    //                 return v.length == 1 ? '0' + v : v;\r\n    //             }).join(' / ');\r\n    //         };\r\n    //     };\r\n    //     // this.value = output;\r\n    //     return output;\r\n    // }\r\n\r\n    autoFormatOnChange = (value, seperator) => {\r\n        var input = value;\r\n\r\n        let regexForDeleting = new RegExp(`\\\\D\\\\${seperator}$`);\r\n\r\n        //if (/\\D\\/$/.test(input)) input = input.substr(0, input.length - 3); // dat.nt: Xóa thêm 1 ký tự nếu xóa dấu cách sau / (VD: 12 / 12 /=> 12 / 1)\r\n\r\n        if (regexForDeleting.test(input)) input = input.substr(0, input.length - 3);\r\n\r\n        var values = input.split(seperator).map(function (v) {\r\n            return v.replace(/\\D/g, '')\r\n        });\r\n\r\n        if (values[0]) values[0] = this.checkDateValue(values[0], 31);\r\n        if (values[1]) values[1] = this.checkDateValue(values[1], 12);\r\n        var output = values.map(function (v, i) {\r\n            return v.length === 2 && i < 2 ? v + ' ' + seperator + ' ' : v;\r\n        });\r\n        return output.join('').substr(0, 14);\r\n    }\r\n\r\n    onInputChange = (e) => {\r\n        if (this.DISPLAY_FORMAT === this.DATE_FORMAT_AUTO_FILL) {\r\n            let converted = this.autoFormatOnChange(e.target.value, this.SEPERATOR);\r\n            e.target.value = converted;\r\n        }\r\n    }\r\n\r\n    onInputBlur = (e) => {\r\n    }\r\n\r\n    //dat.nt : Auto Fill cho dạng ngăn cách và format cụ thể (seperator có thể dc thay thế)\r\n    SEPERATOR = \"/\";\r\n    DATE_FORMAT_AUTO_FILL = \"d/m/Y\"; // Format không thay đổi\r\n\r\n    // dat.nt : Format ngày hiển thị\r\n    DISPLAY_FORMAT = \"d/m/Y\";\r\n\r\n    render() {\r\n        const { value, onChange, minDate, onClose, ...otherProps } = this.props;\r\n        const options = {\r\n            dateFormat: this.DISPLAY_FORMAT,\r\n            allowInput: true,\r\n            disableMobile: true,\r\n            onClose: onClose,\r\n            onOpen: this.onOpen\r\n        };\r\n        if (minDate) {\r\n            options.minDate = minDate;\r\n        }\r\n        return (\r\n            <Flatpickr\r\n                ref={this.nodeRef}\r\n                value={value}\r\n                onChange={onChange}\r\n                options={options}\r\n                // render={\r\n                //     ({ defaultValue, value, ...props }, ref) => {\r\n                //         return <CustomInput defaultValue={defaultValue} inputRef={ref} onInputChange={this.onInputChange} onInputBlur={this.onInputBlur} />\r\n                //     }\r\n                // }\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default DatePicker;\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport './RemedyModal.scss'\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { FormattedMessage } from 'react-intl'\r\nimport { CommonUtils, LANGUAGES } from '../../../utils';\r\n\r\nclass RemedyModal extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            email: '',\r\n            imageB64: ''\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { dataModal } = this.props\r\n        if (dataModal) {\r\n            this.setState({\r\n                email: dataModal.email\r\n            })\r\n        }\r\n    }\r\n\r\n    async componentDidUpdate(prevProps) {\r\n        const { dataModal } = this.props\r\n        if (prevProps.dataModal !== dataModal) {\r\n            this.setState({\r\n                email: dataModal.email\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    handleChangeImg = async (e) => {\r\n        if (e) {\r\n            let file = e.target.files[0]\r\n\r\n            //encode user image\r\n            let b64 = await CommonUtils.getBase64(file)\r\n            this.setState({\r\n                imageB64: b64,\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    handleChangeText = (e) => {\r\n        this.setState({\r\n            email: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSendRemedy = () => {\r\n        this.props.handleSendBill(this.state)\r\n    }\r\n    render() {\r\n        const { isOpen, toggle, language } = this.props\r\n        const { email } = this.state\r\n\r\n        return (\r\n            <Modal\r\n                isOpen={isOpen}\r\n                toggle={toggle}\r\n                className=\"booking-modal-container\"\r\n                size=\"md\"\r\n                centered\r\n            >\r\n                <ModalHeader toggle={toggle}>\r\n                    {\r\n                        language === LANGUAGES.VI ? \"ĐƠN THUỐC\" : \"REMEDY\"\r\n                    }\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6 form-group\">\r\n                            <label>\r\n                                <FormattedMessage id=\"manage-user.email\" />\r\n                            </label>\r\n                            <input type=\"email\" className=\"form-control\" value={email} onChange={this.handleChangeText} />\r\n                        </div>\r\n\r\n                        <div className=\"col-6 form-group\">\r\n                            <label>\r\n                                {\r\n                                    language === LANGUAGES.VI ? \"Chọn tệp\" : \"Choose a file\"\r\n                                }\r\n                            </label>\r\n                            <input\r\n                                type=\"file\"\r\n                                className=\"form-control-file\"\r\n                                onChange={this.handleChangeImg} />\r\n                        </div>\r\n                    </div>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={this.handleSendRemedy}>\r\n                        <FormattedMessage id=\"manage-patient.bill\" />\r\n                    </Button>{' '}\r\n                    <Button color=\"secondary\" onClick={toggle}>\r\n                        <FormattedMessage id=\"modal-booking.cancel\" />\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language,\r\n        genders: state.admin.genders\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RemedyModal);","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { LANGUAGES } from '../../../utils/constant';\r\nimport './ManagePatient.scss'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport DatePicker from '../../../components/Input/DatePicker'\r\nimport { getAllPatient, sendEmailRemedyService } from '../../../services/userService'\r\nimport moment from 'moment'\r\nimport RemedyModal from './RemedyModal';\r\nimport { toast } from 'react-toastify';\r\nimport LoadingOverlay from 'react-loading-overlay-ts';\r\nimport { withRouter } from 'react-router'\r\n\r\nclass ManagePatient extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            currentDate: moment(new Date()).startOf('day').valueOf(),\r\n            dataPatient: [],\r\n            isOpen: false,\r\n            dataModal: {},\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n    ArrayButton = [\r\n        {\r\n            name: <FormattedMessage id=\"feature.statistical\" />,\r\n            onClick: () => { }\r\n        },\r\n        {\r\n            name: 'Tải file mẫu',\r\n            onClick: () => {\r\n                window.open(process.env.REACT_APP_SERVER_URL + '/upload/sampleImport.xlsx', '_blank')\r\n            }\r\n        },\r\n        {\r\n            name: <FormattedMessage id=\"feature.export\" />,\r\n            onClick: () => { }\r\n        },\r\n        {\r\n            name: <FormattedMessage id=\"feature.import\" />,\r\n            onClick: () => { }\r\n\r\n        }\r\n    ]\r\n\r\n    async componentDidMount() {\r\n        const { user } = this.props\r\n        if (user.roleId !== \"R2\") {\r\n            this.props.history.replace('/home')\r\n        } else {\r\n            await this.getDataPatient()\r\n        }\r\n    }\r\n\r\n    getDataPatient = async () => {\r\n        const { user } = this.props\r\n        const { currentDate, isLoading } = this.state\r\n        const formattedDate = new Date(currentDate).getTime()\r\n        let res = await getAllPatient(user.id, formattedDate)\r\n        if (res && res.errCode === 0) {\r\n            this.setState({\r\n                dataPatient: res.data,\r\n                isLoading: isLoading ? false : isLoading\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChangeDayPicker = (date) => {\r\n        this.setState({ currentDate: date[0], isLoading: true })\r\n\r\n        this.getDataPatient()\r\n\r\n    }\r\n\r\n    getValueByLanguage = (data, type) => {\r\n        const { language } = this.props\r\n        if (type === \"PATIENT\") {\r\n            return language === LANGUAGES.VI ? `${data?.lastName || \"\"}  ${data?.firstName || \"\"}` : `${data?.firstName || \"\"} ${data?.lastName || \"\"}`\r\n        }\r\n        if (type === \"VALUE\") {\r\n            return language === LANGUAGES.VI ? data?.valueVi || \"\" : data?.valueEn || \"\"\r\n        }\r\n    }\r\n\r\n    handleConfirm = (item) => {\r\n        let data = {\r\n            doctorId: item.doctorId,\r\n            patientId: item.patientId,\r\n            email: item.patientData.email,\r\n            timeType: item.timeType,\r\n            firstName: item.patientData.firstName,\r\n            lastName: item.patientData.lastName\r\n        }\r\n\r\n        this.setState({\r\n            dataModal: data,\r\n            isOpen: true\r\n        })\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ isOpen: false, dataModal: {} })\r\n    }\r\n\r\n    handleSendBill = async (dataFromChild) => {\r\n        const { dataModal } = this.state\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n        let res = await sendEmailRemedyService({\r\n            email: dataFromChild.email,\r\n            file: dataFromChild.imageB64,\r\n            patientId: dataModal.patientId,\r\n            doctorId: dataModal.doctorId,\r\n            timeType: dataModal.timeType,\r\n            language: this.props.language,\r\n            firstName: dataModal.firstName,\r\n            lastName: dataModal.lastName,\r\n        })\r\n\r\n        if (res && res.errCode === 0) {\r\n            toast.success(res.message)\r\n            this.closeModal()\r\n            this.setState({ isLoading: false })\r\n            await this.getDataPatient()\r\n        } else {\r\n            toast.error(res.errMessage)\r\n            this.setState({ isLoading: false })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { currentDate, dataPatient, isOpen, dataModal, isLoading } = this.state\r\n        const { language } = this.props\r\n        return (\r\n            <LoadingOverlay\r\n                active={isLoading}\r\n                spinner\r\n                text={language === LANGUAGES.VI ? 'Đang gửi...' : 'Sending content...'}\r\n            >\r\n                <RemedyModal\r\n                    isOpen={isOpen}\r\n                    toggle={this.closeModal}\r\n                    dataModal={dataModal}\r\n                    handleSendBill={this.handleSendBill}\r\n                />\r\n                <div className=\"manage-patient-container\">\r\n                    <div className=\"m-p-title\">\r\n                        <FormattedMessage id=\"manage-patient.manage\" />\r\n                    </div>\r\n\r\n                    <div className='m-p-body row'>\r\n                        <div className=\"col-4 form-group\">\r\n                            <label>\r\n                                <FormattedMessage id=\"manage-patient.select-date\" />\r\n                            </label>\r\n                            <DatePicker\r\n                                onChange={this.handleChangeDayPicker}\r\n                                className=\"form-control\"\r\n                                value={currentDate}\r\n                            />\r\n                        </div>\r\n                        <div className='col-8'>\r\n                            <div className=\"row mt-4\">\r\n                                {\r\n                                    this.ArrayButton.map(item => {\r\n                                        return (\r\n                                            <div className=\"col-12 col-md-2 mb-3\">\r\n                                                <button onClick={item.onClick} className=\"custom-button\">\r\n                                                    {item.name}\r\n                                                </button>\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 table-manage-patient\">\r\n                            <table style={{ width: \"100%\" }}>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <th>STT</th>\r\n                                        <th><FormattedMessage id=\"manage-patient.fullname\" /></th>\r\n                                        <th><FormattedMessage id=\"manage-user.address\" /></th>\r\n                                        <th><FormattedMessage id=\"manage-patient.time\" /></th>\r\n                                        <th><FormattedMessage id=\"manage-patient.gender\" /></th>\r\n                                        <th><FormattedMessage id=\"manage-patient.date\" /></th>\r\n                                        <th><FormattedMessage id=\"manage-user.reason\" /></th>\r\n                                        <th><FormattedMessage id=\"manage-patient.actions\" /></th>\r\n                                    </tr>\r\n                                    {\r\n                                        dataPatient && dataPatient.length > 0 ? dataPatient.map((item, index) => {\r\n                                            return (\r\n                                                <tr key={index}>\r\n                                                    <td>{index + 1}</td>\r\n                                                    <td>{this.getValueByLanguage(item.patientData, \"PATIENT\")}</td>\r\n                                                    <td>{item?.patientData?.address || \"\"}</td>\r\n                                                    <td>{this.getValueByLanguage(item.timeData, \"VALUE\")}</td>\r\n                                                    <td>{this.getValueByLanguage(item?.patientData?.genderData || \"M\", \"VALUE\")}</td>\r\n                                                    <td>{item?.patientData?.birthday || \"\"}</td>\r\n                                                    <td>{item?.reason || \"\"}</td>\r\n                                                    <td>\r\n                                                        <button\r\n                                                            className=\"mp-btn-confirm\"\r\n                                                            onClick={() => this.handleConfirm(item)}\r\n                                                        >\r\n                                                            <FormattedMessage id=\"manage-patient.confirm\" />\r\n                                                        </button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            )\r\n                                        }) :\r\n                                            <tr>\r\n                                                <td colSpan=\"8\" style={{ textAlign: \"center\" }}>\r\n                                                    <FormattedMessage id=\"patient.detail-doctor.none-schedule\" />\r\n                                                </td>\r\n                                            </tr>\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </LoadingOverlay>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language,\r\n        user: state.user.userInfo\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, null)(ManagePatient));\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport \"./ManageSchedule.scss\"\r\nimport { FormattedMessage } from 'react-intl'\r\nimport Select from 'react-select'\r\nimport { LANGUAGES } from '../../../utils'\r\nimport * as actions from '../../../store/actions'\r\nimport DatePicker from '../../../components/Input/DatePicker'\r\nimport { toast } from 'react-toastify'\r\nimport { saveBulkSchedule } from '../../../services/userService'\r\nimport { withRouter } from 'react-router';\r\n\r\nclass ManageSchedule extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            selectedDoctor: null,\r\n            listDoctos: [],\r\n            currentDate: '',\r\n            allSchedule: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { patientMenuPath, user } = this.props\r\n        if (user && user.roleId === \"R3\")\r\n            this.props.history.replace(patientMenuPath)\r\n        else {\r\n            await this.props.fetchALLDoctor()\r\n            await this.props.fetchAllcodeSchedule()\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { allDoctors, language, allScheduleTime } = this.props\r\n        if (prevProps.allDoctors !== allDoctors) {\r\n            let dataSelect = this.buildInputDataSelect(allDoctors)\r\n            this.setState({\r\n                listDoctos: dataSelect\r\n            })\r\n        }\r\n\r\n        if (prevProps.language !== language) {\r\n            let dataSelect = this.buildInputDataSelect(allDoctors)\r\n            this.setState({\r\n                listDoctos: dataSelect\r\n            })\r\n        }\r\n\r\n        if (prevProps.allScheduleTime !== allScheduleTime) {\r\n            let data = allScheduleTime\r\n            if (data && data.length > 0) {\r\n                data = data.map((item) => ({\r\n                    ...item,\r\n                    isSelected: false\r\n                }))\r\n            }\r\n            this.setState({\r\n                allSchedule: data\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChangeSelect = (selectedDoctor) => {\r\n        this.setState({ selectedDoctor })\r\n    }\r\n\r\n    buildInputDataSelect = (data) => {\r\n        const { language } = this.props\r\n        let result = [];\r\n\r\n        if (data && data.length > 0) {\r\n            for (let i = 0; i < data.length; i++) {\r\n                let obj = {}\r\n\r\n                let labelVi = `${data[`${i}`].lastName} ${data[`${i}`].firstName}`\r\n                let labelEn = `${data[`${i}`].firstName} ${data[`${i}`].lastName}`\r\n\r\n                obj.label = language === LANGUAGES.VI ? labelVi : labelEn\r\n                obj.value = data[`${i}`].id\r\n\r\n                result.push(obj)\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    handleChangeDayPicker = (date) => {\r\n        this.setState({ currentDate: date[0] })\r\n    }\r\n\r\n    onHandleChoose = (item) => {\r\n        const { allSchedule } = this.state\r\n        if (allSchedule && allSchedule.length > 0) {\r\n            let copySchedule = allSchedule\r\n            copySchedule = allSchedule.map(i => {\r\n                if (i.id === item.id) {\r\n                    i.isSelected = !item.isSelected\r\n                }\r\n\r\n                return i\r\n            })\r\n\r\n            this.setState({\r\n                allSchedule: copySchedule\r\n            })\r\n        }\r\n    }\r\n\r\n    handleSubmit = async () => {\r\n        const { allSchedule, selectedDoctor, currentDate } = this.state\r\n        let result = []\r\n\r\n        if (!currentDate) {\r\n            toast.warn(\"Please choose date you want!\")\r\n            return\r\n        }\r\n\r\n        if (selectedDoctor && selectedDoctor.length > 0) {\r\n            toast.warn(\"Please choose a doctor you want!\")\r\n            return\r\n        }\r\n\r\n        let formatedDate = new Date(currentDate).getTime()\r\n        if (allSchedule && allSchedule.length > 0) {\r\n            let selectedTime = allSchedule.filter(item => item.isSelected === true)\r\n            if (selectedTime && selectedTime.length > 0) {\r\n                selectedTime.map(time => {\r\n                    let obj = {}\r\n                    obj.doctorId = selectedDoctor.value\r\n                    obj.date = formatedDate\r\n                    obj.timeType = time.keyMap\r\n\r\n                    result.push(obj)\r\n                    return obj\r\n                })\r\n            } else {\r\n                toast.warn(\"Invalid selected time!\")\r\n                return\r\n            }\r\n        }\r\n\r\n        let res = await saveBulkSchedule({\r\n            doctorId: selectedDoctor.value,\r\n            formatedDate: formatedDate,\r\n            arrSchedule: result\r\n        })\r\n        if (res && res.errCode === 0) {\r\n            toast.success(res.message)\r\n        } else {\r\n            toast.error(res.errMessage)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { selectedDoctor, listDoctos, currentDate, allSchedule } = this.state\r\n        const { language } = this.props\r\n        const yesterday = new Date(new Date().setDate(new Date().getDate() - 1))\r\n\r\n        return (\r\n            <div className=\"manage-schedule-container\">\r\n                <div className=\"m-s-title\">\r\n                    <FormattedMessage id=\"manage-schedule.title\" />\r\n                </div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6 form-group\">\r\n                            <label>\r\n                                <FormattedMessage id=\"manage-schedule.select-doctor\" />\r\n                            </label>\r\n                            <Select\r\n                                value={selectedDoctor}\r\n                                onChange={this.handleChangeSelect}\r\n                                options={listDoctos}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"col-6 form-group\">\r\n                            <label>\r\n                                <FormattedMessage id=\"manage-schedule.select-day\" />\r\n                            </label>\r\n                            <DatePicker\r\n                                onChange={this.handleChangeDayPicker}\r\n                                className=\"form-control\"\r\n                                value={currentDate}\r\n                                minDate={yesterday}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"col-12 pick-hour-container\">\r\n                            {\r\n                                allSchedule && allSchedule.length > 0 && allSchedule.map((value, index) => {\r\n                                    let valueVi = value.valueVi\r\n                                    let valueEn = value.valueEn\r\n                                    return (\r\n                                        <button\r\n                                            key={index}\r\n                                            className={value.isSelected ? \"btn btn-schedule active\" : \"btn btn-schedule\"}\r\n                                            onClick={() => this.onHandleChoose(value)}\r\n                                        >\r\n                                            {language === LANGUAGES.VI ? valueVi : valueEn}\r\n                                        </button>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n\r\n                        <button\r\n                            className=\"btn btn-primary btn-save-schedule\"\r\n                            onClick={this.handleSubmit}\r\n                        >\r\n                            <FormattedMessage id=\"manage-schedule.button\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        allDoctors: state.admin.allDoctors,\r\n        language: state.app.language,\r\n        allScheduleTime: state.admin.allScheduleTime,\r\n        patientMenuPath: state.app.patientMenuPath,\r\n        user: state.user.userInfo\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchALLDoctor: () => dispatch(actions.fetchALLDoctor()),\r\n        fetchAllcodeSchedule: () => dispatch(actions.fetchAllcodeSchedule())\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ManageSchedule));\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Header from '../containers/Header/Header';\r\nimport ManagePatient from '../containers/System/Doctor/ManagePatient';\r\nimport ManageSchedule from '../containers/System/Doctor/ManageSchedule';\r\n\r\nclass Doctor extends Component {\r\n    render() {\r\n        const { isLoggedIn } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                {isLoggedIn && <Header />}\r\n                <div className=\"system-container\">\r\n                    <div className=\"system-list\">\r\n                        <Switch>\r\n                            <Route path=\"/doctor/manage-schedule\" component={ManageSchedule} />\r\n                            <Route path=\"/doctor/manage-patient\" component={ManagePatient} />\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Doctor);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport './VerifyingEmail.scss'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport { postVerifyBooking } from '../../../services/userService'\r\nimport HomeHeader from '../HomeHeader';\r\nimport HomeFooter from '../HomeFooter';\r\n\r\nclass VerifyingEmail extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            statusVerify: false,\r\n            errCode: 2\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.props.location && this.props.location.search) {\r\n            const urlParams = new URLSearchParams(this.props.location.search)\r\n            const token = urlParams.get('token')\r\n            const doctorId = urlParams.get(\"doctorId\")\r\n            let res = await postVerifyBooking({\r\n                token: token,\r\n                doctorId: doctorId\r\n            })\r\n\r\n            if (res) {\r\n                this.setState({\r\n                    statusVerify: true,\r\n                    errCode: res.errCode\r\n                })\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    async componentDidUpdate(prevProps) {\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { statusVerify, errCode } = this.state\r\n        return (\r\n            <>\r\n                <HomeHeader />\r\n                <div className=\"verify-container\">\r\n                    {\r\n                        !statusVerify ? (\r\n                            <>\r\n                                <div className=\"container-loader col-12\">\r\n                                    <div className=\"loader\" />\r\n                                </div>\r\n                                <div style={{ textAlign: \"center\" }}>\r\n                                    <h4>\r\n                                        <FormattedMessage id=\"verify-email.wait\" />\r\n                                    </h4>\r\n                                </div>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <div className=\"container-loader col-12\">\r\n                                    <span>\r\n                                        {\r\n                                            +errCode === 0 ?\r\n                                                <i className=\"fas fa-calendar-check fa-6x\" /> :\r\n                                                <i className=\"fas fa-frown fa-6x\" />\r\n                                        }\r\n                                    </span>\r\n                                </div>\r\n                                {\r\n                                    +errCode === 0 ?\r\n                                        <h4 className=\"success\">\r\n                                            <FormattedMessage id=\"verify-email.succeed\" />\r\n                                        </h4> :\r\n                                        <div className=\"fail\">\r\n                                            <h4>\r\n                                                <FormattedMessage id=\"verify-email.failed\" />\r\n                                            </h4>\r\n                                            <div>\r\n                                                <FormattedMessage id=\"verify-email.wrong\" />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                }\r\n                            </>\r\n                        )\r\n                    }\r\n\r\n                    <div className=\"more-info\">\r\n                        <div><FormattedMessage id=\"verify-email.hotline\" /></div>\r\n                        <div><FormattedMessage id=\"verify-email.email\" /></div>\r\n                        <div><FormattedMessage id=\"verify-email.thanks\" /></div>\r\n                        <div><FormattedMessage id=\"verify-email.regard\" /></div>\r\n                    </div>\r\n                </div>\r\n                <HomeFooter />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VerifyingEmail);","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { LANGUAGES } from '../../../../utils/constant';\r\nimport './DetailSpecialty.scss'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport DoctorSchedule from '../Doctor/DoctorSchedule';\r\nimport DoctorExtraInfo from '../Doctor/DoctorExtraInfo';\r\nimport HomeHeader from '../../HomeHeader';\r\nimport HomeFooter from '../../HomeFooter'\r\nimport ProfileDoctor from '../Doctor/ProfileDoctor'\r\nimport { getDetailSpecialtyById, getAllCodeService } from '../../../../services/userService'\r\nimport _ from 'lodash';\r\nimport Select from 'react-select'\r\n\r\nclass DetailSpecialty extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            arrDoctorId: [],\r\n            listProvince: [],\r\n            selectedProvince: null,\r\n            dataDetailSpecialty: {},\r\n            isShowDetail: false\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.props.match && this.props.match.params && this.props.match.params.id) {\r\n            let specialtyId = this.props.match.params.id\r\n\r\n            let res = await getDetailSpecialtyById({\r\n                id: specialtyId,\r\n                location: \"ALL\"\r\n            })\r\n\r\n            let resProvince = await getAllCodeService(\"PROVINCE\")\r\n\r\n            if (res && res.errCode === 0 && resProvince && resProvince.errCode === 0) {\r\n                let arrId = []\r\n                let data = res.data\r\n                if (data && !_.isEmpty(data)) {\r\n                    let arr = data.doctorSpecialty;\r\n                    if (arr && arr.length > 0) {\r\n                        arr.map(item => {\r\n                            arrId.push(item.doctorId)\r\n                            return item\r\n                        })\r\n                    }\r\n                }\r\n                this.setState({\r\n                    dataDetailSpecialty: res.data,\r\n                    arrDoctorId: arrId,\r\n                    listProvince: this.buildInputDataSelectDoctor(resProvince.data)\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    buildInputDataSelectDoctor = (data) => {\r\n        const { language } = this.props\r\n        let result = [];\r\n\r\n        if (data && data.length > 0) {\r\n            for (let i = 0; i < data.length; i++) {\r\n                let obj = {}\r\n\r\n                obj.label = language === LANGUAGES.VI ?\r\n                    `${data[`${i}`].valueVi}` :\r\n                    `${data[`${i}`].valueEn}`\r\n                obj.value = data[`${i}`].keyMap\r\n\r\n                result.push(obj)\r\n            }\r\n            result.push({\r\n                label: language === LANGUAGES.VI ? \"Toàn quốc\" : \"All\",\r\n                value: \"ALL\"\r\n            })\r\n        }\r\n        return result;\r\n    }\r\n\r\n    handleChangeSelect = async (selectedProvince) => {\r\n        this.setState({ selectedProvince })\r\n        if (this.props.match && this.props.match.params && this.props.match.params.id) {\r\n            let specialtyId = this.props.match.params.id\r\n            let location = selectedProvince.value\r\n\r\n            let res = await getDetailSpecialtyById({\r\n                id: specialtyId,\r\n                location: location\r\n            })\r\n\r\n            if (res && res.errCode === 0) {\r\n                let arrId = []\r\n                let data = res.data\r\n                if (data && !_.isEmpty(data)) {\r\n                    let arr = data.doctorSpecialty;\r\n                    if (arr && arr.length > 0) {\r\n                        arr.map(item => {\r\n                            arrId.push(item.doctorId)\r\n                            return item\r\n                        })\r\n                    }\r\n                }\r\n                this.setState({\r\n                    dataDetailSpecialty: res.data,\r\n                    arrDoctorId: arrId,\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            arrDoctorId,\r\n            dataDetailSpecialty,\r\n            listProvince,\r\n            selectedProvince,\r\n            isShowDetail\r\n        } = this.state\r\n\r\n        return (\r\n            <div className=\"detail-specialty-container\">\r\n                <HomeHeader />\r\n                <div style={{ paddingTop: \"50px\" }} />\r\n                <div className=\"detail-specialty-body\">\r\n                    <div\r\n                        className=\"detail-specialty-description\"\r\n                        style={{ backgroundImage: `url(${dataDetailSpecialty.image})` }}\r\n                    >\r\n                        <div className=\"front-content\">\r\n                            {\r\n                                dataDetailSpecialty && !_.isEmpty(dataDetailSpecialty) && (\r\n                                    <div\r\n                                        dangerouslySetInnerHTML={{\r\n                                            __html: dataDetailSpecialty.descriptionHTML\r\n                                        }}\r\n                                        style={{ height: isShowDetail ? \"auto\" : \"200px\" }}\r\n                                    />\r\n                                )\r\n                            }\r\n                            <button\r\n                                onClick={() => this.setState({ isShowDetail: !isShowDetail })}\r\n                            >\r\n                                <FormattedMessage id={isShowDetail ? \"extra-doctor-info.hide-detail\" : \"extra-doctor-info.view-detail\"} />\r\n                            </button>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                    <Select\r\n                        value={selectedProvince}\r\n                        className=\"col-3 select-ds\"\r\n                        onChange={this.handleChangeSelect}\r\n                        options={listProvince}\r\n                        name=\"selectedProvince\"\r\n                        placeholder={<FormattedMessage id=\"manage-doctor.choose-a-province\" />}\r\n                    />\r\n\r\n                    {\r\n                        arrDoctorId && arrDoctorId.length > 0 ? arrDoctorId.map((item, index) => {\r\n                            return (\r\n                                <div className=\"each-doctor\" key={index}>\r\n\r\n                                    <div className=\"dt-content-left\">\r\n                                        <ProfileDoctor\r\n                                            doctorId={item}\r\n                                            isShowDoctorDescription={true}\r\n                                            isShowLink={true}\r\n                                            isShowPrice={false}\r\n                                        // dataTime={dataSchedule}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"dt-content-right\">\r\n                                        <div className=\"doctor-schedule\">\r\n                                            <DoctorSchedule doctorIdFromParent={item} />\r\n                                        </div>\r\n\r\n                                        <div className=\"doctor-extra-info\">\r\n                                            <DoctorExtraInfo doctorIdFromParent={item} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            )\r\n                        }) : (\r\n                            <div className=\"ds-none\">\r\n                                <FormattedMessage id=\"manage-doctor.none\" />\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n                <HomeFooter />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailSpecialty);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport './DetailClinic.scss'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport HomeHeader from '../../HomeHeader';\r\nimport HomeFooter from '../../HomeFooter';\r\nimport { getDetailClinicById } from '../../../../services/userService'\r\nimport _ from 'lodash'\r\nimport ProfileDoctor from '../Doctor/ProfileDoctor'\r\nimport DoctorSchedule from '../Doctor/DoctorSchedule';\r\nimport DoctorExtraInfo from '../Doctor/DoctorExtraInfo';\r\nimport { toast } from 'react-toastify';\r\n\r\nclass DetailClinic extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            dataDetailClinic: [],\r\n            arrDoctorId: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.props.match && this.props.match.params && this.props.match.params.id) {\r\n            let clinicId = this.props.match.params.id\r\n\r\n            let res = await getDetailClinicById(clinicId)\r\n\r\n            if (res && res.errCode === 0) {\r\n                let arrId = []\r\n                let data = res.data\r\n                if (data && !_.isEmpty(data)) {\r\n                    let arr = data.doctorClinic;\r\n                    if (arr && arr.length > 0) {\r\n                        arr.map(item => {\r\n                            arrId.push(item.doctorId)\r\n                            return item\r\n                        })\r\n                    }\r\n                }\r\n                this.setState({\r\n                    dataDetailClinic: res.data,\r\n                    arrDoctorId: arrId,\r\n                })\r\n            } else {\r\n                toast.error(res.errMessage)\r\n            }\r\n        }\r\n    }\r\n\r\n    async componentDidUpdate(prevProps) {\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { dataDetailClinic, arrDoctorId } = this.state\r\n        return (\r\n            <div className=\"detail-specialty-container\">\r\n                <HomeHeader />\r\n                <div style={{ paddingTop: \"50px\" }} />\r\n                <div className=\"detail-specialty-body\">\r\n                    {\r\n                        arrDoctorId && arrDoctorId.length > 0 ? arrDoctorId.map((item, index) => {\r\n                            return (\r\n                                <div className=\"each-doctor\" key={index}>\r\n\r\n                                    <div className=\"dt-content-left\">\r\n                                        <ProfileDoctor\r\n                                            doctorId={item}\r\n                                            isShowDoctorDescription={true}\r\n                                            isShowLink={true}\r\n                                            isShowPrice={false}\r\n                                        // dataTime={dataSchedule}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"dt-content-right\">\r\n                                        <div className=\"doctor-schedule\">\r\n                                            <DoctorSchedule doctorIdFromParent={item} />\r\n                                        </div>\r\n\r\n                                        <div className=\"doctor-extra-info\">\r\n                                            <DoctorExtraInfo doctorIdFromParent={item} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            )\r\n                        }) : (\r\n                            <div className=\"ds-none\">\r\n                                No data<br />\r\n                                <span class=\"iconify\" data-icon=\"icomoon-free:file-empty\"></span>\r\n                            </div>\r\n                        )\r\n                    }\r\n\r\n                    <div className=\"detail-specialty-description\">\r\n                        {\r\n                            dataDetailClinic && !_.isEmpty(dataDetailClinic) && (\r\n                                <div\r\n                                    dangerouslySetInnerHTML={{\r\n                                        __html: dataDetailClinic.descriptionHTML\r\n                                    }}\r\n                                />\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <HomeFooter />\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailClinic);\r\n","import React, { Component } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport moment from 'moment';\r\nimport { connect } from \"react-redux\";\r\nimport { LANGUAGES } from '../../utils/constant'\r\n\r\n\r\nclass LineChart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            options: {},\r\n            reportType: 'all'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.renderOptions()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { language, data } = this.props\r\n\r\n        if (language !== prevProps.language) {\r\n            this.generateOptions()\r\n            this.renderOptions()\r\n        }\r\n\r\n        if (prevProps.data !== data) {\r\n            this.generateOptions()\r\n            this.renderOptions()\r\n        }\r\n    }\r\n\r\n    generateOptions = (data) => {\r\n        const { language } = this.props\r\n        if (!data)\r\n            return\r\n        const categories = data.map((item) => moment(item.Date).format('DD/MM/YYYY'));\r\n\r\n        return {\r\n            chart: {\r\n                height: 500,\r\n            },\r\n            title: {\r\n                text: language === LANGUAGES.VI ? 'Tổng ca nhiễm' : \"Total infections\",\r\n            },\r\n            xAxis: {\r\n                categories: categories,\r\n                crosshair: true,\r\n            },\r\n            colors: ['#F3585B'],\r\n            yAxis: {\r\n                min: 0,\r\n                title: {\r\n                    text: null,\r\n                },\r\n                labels: {\r\n                    align: 'right',\r\n                },\r\n            },\r\n            tooltip: {\r\n                headerFormat: '<span style={{fontSize:\"10px\"}}>{point.key}</span><table>',\r\n                pointFormat:\r\n                    '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\r\n                    '<td style=\"padding:0\"><b>{point.y} ca</b></td></tr>',\r\n                footerFormat: '</table>',\r\n                shared: true,\r\n                useHTML: true,\r\n            },\r\n            plotOptions: {\r\n                column: {\r\n                    pointPadding: 0.2,\r\n                    borderWidth: 0,\r\n                },\r\n            },\r\n            series: [\r\n                {\r\n                    name: language === LANGUAGES.VI ? 'Tổng ca nhiễm' : \"Total infections\",\r\n                    data: data.map((item) => item.Confirmed),\r\n                },\r\n            ],\r\n        };\r\n    };\r\n\r\n    setReportType = (e) => {\r\n        this.setState({ reportType: e.target.name })\r\n        this.renderOptions()\r\n    }\r\n\r\n    renderOptions = () => {\r\n        const { reportType } = this.state\r\n        const { data } = this.props\r\n        let customData = [];\r\n        switch (reportType) {\r\n            case 'all':\r\n                customData = data;\r\n                break;\r\n            case '30':\r\n                customData = data.slice(Math.max(data.length - 30, 1));\r\n                break;\r\n            case '7':\r\n                customData = data.slice(Math.max(data.length - 7, 1));\r\n                break;\r\n\r\n            default:\r\n                customData = data;\r\n                break;\r\n        }\r\n\r\n        this.setState({ options: this.generateOptions(customData) });\r\n    }\r\n\r\n    render() {\r\n        const { options } = this.state\r\n        const { language } = this.props\r\n        return (\r\n            <>\r\n                <div\r\n                    className=\"form-group\"\r\n                    style={{ display: 'flex' }}\r\n                >\r\n                    <button\r\n                        name=\"all\"\r\n                        className=\"form-control\"\r\n                        onClick={this.setReportType}\r\n                    >\r\n                        {language === LANGUAGES.VI ? \"Tất cả\" : \"All\"}\r\n                    </button>\r\n                    <button\r\n                        name=\"30\"\r\n                        className=\"form-control\"\r\n                        onClick={this.setReportType}\r\n                    >\r\n                        {language === LANGUAGES.VI ? \"30 ngày\" : \"30 days\"}\r\n                    </button>\r\n                    <button\r\n                        className=\"form-control\"\r\n                        name=\"7\"\r\n                        onClick={this.setReportType}\r\n                    >\r\n                        {language === LANGUAGES.VI ? \"7 ngày\" : \"7 days\"}\r\n                    </button>\r\n                </div>\r\n                <HighchartsReact highcharts={Highcharts} options={options} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LineChart);","import React, { useEffect, useRef, useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport highchartsMap from 'highcharts/modules/map';\r\nimport { cloneDeep } from 'lodash';\r\nimport { LANGUAGES } from '../../utils/constant'\r\n\r\n// Load Highcharts modules\r\nhighchartsMap(Highcharts);\r\n\r\nconst initOptions = {\r\n    chart: {\r\n        height: '500',\r\n    },\r\n    title: {\r\n        text: null,\r\n    },\r\n    mapNavigation: {\r\n        enabled: true,\r\n    },\r\n    colorAxis: {\r\n        min: 0,\r\n        stops: [\r\n            [0.2, '#FFC4AA'],\r\n            [0.4, '#FF8A66'],\r\n            [0.6, '#FF392B'],\r\n            [0.8, '#B71525'],\r\n            [1, '\t#7A0826'],\r\n        ],\r\n    },\r\n    legend: {\r\n        layout: 'vertical',\r\n        align: 'right',\r\n        verticalAlign: 'bottom',\r\n    },\r\n    series: [\r\n        {\r\n            name: 'Dân số',\r\n            joinBy: ['hc-key', 'key'],\r\n        },\r\n    ],\r\n};\r\n\r\nconst HighMaps = ({ mapData, language }) => {\r\n    const [options, setOptions] = useState({});\r\n    const [mapLoaded, setMapLoaded] = useState(false);\r\n    const chartRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (mapData && Object.keys(mapData).length) {\r\n            const fakeData = mapData.features.map((feature, index) => ({\r\n                key: feature.properties['hc-key'],\r\n                value: index,\r\n            }));\r\n\r\n            setOptions(() => ({\r\n                ...initOptions,\r\n                title: {\r\n                    text: mapData.title,\r\n                },\r\n                series: [\r\n                    { ...initOptions.series[0], name: language === LANGUAGES.VI ? 'Dân số' : \"Population\", mapData: mapData, data: fakeData },\r\n                ],\r\n            }));\r\n\r\n            if (!mapLoaded) setMapLoaded(true);\r\n        }\r\n    }, [mapData, mapLoaded]);\r\n\r\n    useEffect(() => {\r\n        if (chartRef && chartRef.current) {\r\n            chartRef.current.chart.series[0].update({\r\n                mapData,\r\n            });\r\n        }\r\n    }, [options, mapData]);\r\n\r\n    if (!mapLoaded) return null;\r\n\r\n    return (\r\n        <HighchartsReact\r\n            highcharts={Highcharts}\r\n            options={cloneDeep(options)}\r\n            constructorType={'mapChart'}\r\n            ref={chartRef}\r\n        />\r\n    );\r\n};\r\n\r\nHighMaps.defaultProps = {\r\n    mapData: {},\r\n};\r\n\r\nexport default React.memo(HighMaps);\r\n","import axios from '../../axios'\r\n\r\nexport const fetchCountries = () => axios.get(\"https://api.covid19api.com/countries\")\r\n\r\nexport const fetchDataCOVID = (id) => axios.get(`https://api.covid19api.com/dayone/country/${id}`)","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { LANGUAGES } from '../../../../utils/constant';\r\nimport './DetailCOVID.scss'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport Select from 'react-select'\r\nimport moment from 'moment'\r\nimport LineChart from '../../../../components/Chart/LineChart'\r\nimport HighMaps from '../../../../components/Chart/HighMaps'\r\nimport { fetchCountries, fetchDataCOVID } from '../../../../components/Chart/chartService'\r\nimport HomeHeader from '../../HomeHeader'\r\nimport HomeFooter from '../../HomeFooter'\r\n\r\nclass DetailCOVID extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            selectedCountry: { label: \"Viet Nam\", value: \"vietnam\", id: \"vn\" },\r\n            listCountries: [],\r\n            infoCOVID: null,\r\n            report: [],\r\n            mapData: {}\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let countries = await fetchCountries()\r\n        if (countries && countries.length > 0) {\r\n            this.setState({\r\n                listCountries: this.buildDataSelecter(countries)\r\n            })\r\n        }\r\n\r\n        await this.handOnChangeSelect(this.state.selectedCountry)\r\n        this.getMapDataByCountryId()\r\n\r\n    }\r\n\r\n    async componentDidUpdate(prevProps) {\r\n        const { language } = this.props\r\n\r\n        if (prevProps.language !== language) {\r\n            this.getName()\r\n        }\r\n    }\r\n\r\n    getMapDataByCountryId = () => {\r\n        let countryId = this.state.selectedCountry.id.toLowerCase()\r\n        if (countryId) {\r\n            import(\r\n                `@highcharts/map-collection/countries/${countryId}/${countryId}-all.geo.json`\r\n            )\r\n                .then((res) => {\r\n                    this.setState({ mapData: res });\r\n                })\r\n                .catch((err) => console.log({ err }));\r\n        }\r\n    }\r\n\r\n    buildDataSelecter = (data) => {\r\n        let result = []\r\n        for (let i = 0; i < data.length; i++) {\r\n            let obj = {}\r\n            obj.label = data[i].Country\r\n            obj.value = data[i].Slug\r\n            obj.id = data[i].ISO2\r\n\r\n            result.push(obj)\r\n        }\r\n        return result;\r\n    }\r\n\r\n    handOnChangeSelect = async (selectedCountry) => {\r\n        let id = selectedCountry.value\r\n        this.setState({ selectedCountry })\r\n        await fetchDataCOVID(id)\r\n            .then((res) => {\r\n                if (res && res.length > 0) {\r\n                    let data = res[res.length - 2]\r\n                    res.pop()\r\n                    this.setState({ infoCOVID: data, report: res })\r\n                }\r\n            })\r\n        this.getMapDataByCountryId()\r\n    }\r\n\r\n    getName = () => {\r\n        const { infoCOVID } = this.state\r\n        const { language } = this.props\r\n        return infoCOVID ?\r\n            language === LANGUAGES.VI ?\r\n                moment(new Date(infoCOVID.Date)).locale('vi').format(\"LLL\") :\r\n                moment(new Date(infoCOVID.Date)).locale('en').format(\"LLL\")\r\n            :\r\n            '0'\r\n    }\r\n\r\n    render() {\r\n        const { selectedCountry, listCountries, infoCOVID, report, mapData } = this.state\r\n        return (\r\n            <>\r\n                <HomeHeader />\r\n                <div className=\"covid-section-container\">\r\n                    <div className=\"c-s-titile\">\r\n                        <span>\r\n                            <FormattedMessage id=\"banner.covid\" />\r\n                        </span>\r\n                        <div style={{ paddingBottom: \"10px\" }}>\r\n                            {\r\n                                this.getName()\r\n                            }\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"selector\">\r\n                        <Select\r\n                            value={selectedCountry}\r\n                            onChange={this.handOnChangeSelect}\r\n                            options={listCountries}\r\n                            className=\"col-4\"\r\n                            name=\"selectedClinic\"\r\n                            placeholder={<FormattedMessage id=\"manage-doctor.select-country\" />}\r\n                        />\r\n\r\n                    </div>\r\n                    <div className=\"c-s-info\">\r\n                        <div className=\"c-s-content-have\">\r\n                            <div className=\"content-title\">\r\n                                <FormattedMessage id=\"homeheader.total-infections\" />\r\n                            </div>\r\n                            <div className=\"content-subtitle\">\r\n                                {infoCOVID ? infoCOVID.Confirmed : '0'}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"c-s-content-pass\">\r\n                            <div className=\"content-title\">\r\n                                <FormattedMessage id=\"homeheader.recovered\" />\r\n                            </div>\r\n                            <div className=\"content-subtitle\">\r\n                                {infoCOVID ? infoCOVID.Active : '0'}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"c-s-content-die\">\r\n                            <div className=\"content-title\">\r\n                                <FormattedMessage id=\"homeheader.deaths\" />\r\n                            </div>\r\n                            <div className=\"content-subtitle\">\r\n                                {infoCOVID ? infoCOVID.Deaths : '0'}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ display: 'flex' }}>\r\n                        <div style={{ width: '60%' }}>\r\n                            <LineChart data={report} />\r\n\r\n                        </div>\r\n                        <div style={{ width: '40%' }}>\r\n                            <HighMaps mapData={mapData} language={this.props.language} />\r\n                        </div>\r\n                    </div>\r\n                </div >\r\n                <HomeFooter />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailCOVID);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { LANGUAGES } from '../../../../utils/constant';\r\nimport * as actions from '../../../../store/actions'\r\nimport { withRouter } from 'react-router'\r\nimport HomeHeader from '../../HomeHeader'\r\nimport HomeFooter from '../../HomeFooter'\r\nimport Select from 'react-select'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport './AllClinic.scss'\r\n\r\nclass AllClinic extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            listClinic: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { allClinic } = this.props\r\n        if (allClinic.length === 0) {\r\n            this.props.fetchAllClinic()\r\n        }\r\n\r\n        if (allClinic.length > 0) {\r\n            this.setState({\r\n                listClinic: this.buidDataSelect(allClinic)\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    buidDataSelect = (allClinic) => {\r\n        const { language } = this.props\r\n        let result = []\r\n\r\n        allClinic.map((item, i) => {\r\n            let obj = {}\r\n            let name = language === LANGUAGES.VI ? item.nameVi : item.nameEn\r\n            obj.label = name\r\n            obj.value = item.id\r\n            result.push(obj)\r\n            return item\r\n        })\r\n\r\n        return result\r\n    }\r\n\r\n    async componentDidUpdate(prevProps) {\r\n        const { language, allClinic } = this.props\r\n        if (prevProps.allClinic !== allClinic) {\r\n            this.setState({\r\n                listClinic: this.buidDataSelect(allClinic)\r\n            })\r\n        }\r\n\r\n        if (prevProps.language !== language) {\r\n            this.setState({\r\n                listClinic: this.buidDataSelect(allClinic)\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    handleViewDetailClinic = (item) => {\r\n        this.props.history.push(`/detail-clinic/${item.id}`)\r\n    }\r\n\r\n    handleChangeSelectClinic = (item) => {\r\n        this.props.history.push(`/detail-clinic/${item.value}`)\r\n    }\r\n    render() {\r\n        const { allClinic, language } = this.props\r\n        const { listClinic } = this.state\r\n\r\n        return (\r\n            <>\r\n                <HomeHeader />\r\n                <div style={{ marginTop: \"120px\" }} />\r\n                <Select\r\n                    onChange={this.handleChangeSelectClinic}\r\n                    options={listClinic}\r\n                    className=\"select\"\r\n                    placeholder={<FormattedMessage id=\"manage-doctor.choose-a-clinic\" />}\r\n                />\r\n                <div className=\"all-specialty-container\">\r\n                    {\r\n                        allClinic && allClinic.length > 0 ? allClinic.map((item, index) => {\r\n                            let name = language === LANGUAGES.VI ? item.nameVi : item.nameEn\r\n                            return (\r\n                                <div\r\n                                    className=\"all-specialty-content\"\r\n                                    key={index}\r\n                                    onClick={() => this.handleViewDetailClinic(item)}\r\n                                >\r\n                                    <div\r\n                                        className=\"a-s-image\"\r\n                                        style={{ backgroundImage: `url(${item.image})`, marginRight: '10px' }}\r\n                                    />\r\n                                    <div className=\"content-right\">\r\n                                        <div className=\"a-s-title\">{name}</div>\r\n                                        <div>{item.address || \"\"}</div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }) : (\r\n                            <div className='empty_content'>\r\n                                No data<br/>\r\n                                <span class=\"iconify\" data-icon=\"icomoon-free:file-empty\"></span>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n                <HomeFooter />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language,\r\n        allClinic: state.admin.allClinic\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchAllClinic: () => dispatch(actions.fetchAllClinic())\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AllClinic));","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { LANGUAGES } from '../../../../utils/constant';\r\nimport './AllSpecialty.scss'\r\nimport * as actions from '../../../../store/actions'\r\nimport { withRouter } from 'react-router'\r\nimport HomeHeader from '../../HomeHeader'\r\nimport HomeFooter from '../../HomeFooter'\r\n\r\nclass AllSpecialty extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { allSpecialty } = this.props\r\n        if (allSpecialty.length === 0) {\r\n            this.props.getAllSpecialty()\r\n        }\r\n    }\r\n\r\n    handleViewDetailSpecialty = (item) => {\r\n        this.props.history.push(`/detail-specialty/${item.id}`)\r\n    }\r\n\r\n    render() {\r\n        const { allSpecialty, language } = this.props\r\n\r\n        return (\r\n            <>\r\n                <HomeHeader />\r\n                <div style={{ marginTop: \"100px\" }} />\r\n                <div className=\"all-specialty-container\">\r\n                    {\r\n                        allSpecialty && allSpecialty.length > 0 ? allSpecialty.map((item, index) => {\r\n                            let name = language === LANGUAGES.VI ? item.nameVi : item.nameEn\r\n                            return (\r\n                                <div\r\n                                    className=\"all-specialty-content\"\r\n                                    key={index}\r\n                                    onClick={() => this.handleViewDetailSpecialty(item)}\r\n                                >\r\n                                    <div\r\n                                        className=\"a-s-image\"\r\n                                        style={{ backgroundImage: `url(${item.image})` }}\r\n                                    />\r\n                                    <div className=\"content-right\">\r\n                                        <span className=\"a-s-title\">\r\n                                            {name}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }) : (\r\n                            <div className='empty_content'>\r\n                                No data<br/>\r\n                                <span class=\"iconify\" data-icon=\"icomoon-free:file-empty\"></span>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n                <HomeFooter />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language,\r\n        allSpecialty: state.admin.allSpecialty\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getAllSpecialty: () => dispatch(actions.fetchAllSpecialty())\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AllSpecialty));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions';\r\nimport './Register.scss';\r\nimport { createUserService } from '../../services/userService';\r\nimport Select from 'react-select'\r\nimport { withRouter } from 'react-router'\r\nimport { toast } from 'react-toastify'\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            address: \"\",\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            phoneNumber: \"\",\r\n            birthday: \"\",\r\n            selectedGender: null,\r\n            listGenders: [],\r\n            confirmpass: \"\",\r\n            isShowPassword: false,\r\n            err: \"\"\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.props.fetchGender()\r\n        const { genders } = this.props\r\n        if(genders && genders.length > 0) {\r\n            this.setState({\r\n                listGenders: this.buildDataGender(genders)\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { genders } = this.props\r\n        if (prevProps.genders.length !== genders.length) {\r\n            this.setState({\r\n                listGenders: this.buildDataGender(genders)\r\n            })\r\n        }\r\n    }\r\n\r\n    handleShowPassword = () => {\r\n        this.setState({\r\n            isShowPassword: !this.state.isShowPassword\r\n        })\r\n    }\r\n\r\n    buildDataGender = (data) => {\r\n        let result = []\r\n\r\n        if (data && data.length > 0) {\r\n            data.map(item => {\r\n                let obj = {}\r\n                obj.label = item.valueVi\r\n                obj.value = item.keyMap\r\n                result.push(obj)\r\n\r\n                return item\r\n            })\r\n        }\r\n\r\n        return result\r\n    }\r\n\r\n    validatePass = () => {\r\n        const { password, confirmpass } = this.state\r\n        if (confirmpass !== password || !password || !confirmpass)\r\n            return false;\r\n\r\n        return true;\r\n    }\r\n\r\n    handleRegister = async () => {\r\n        if (!this.validatePass()) {\r\n            this.setState({\r\n                err: \"Your password don't match. Please try again!\"\r\n            })\r\n        } else {\r\n            const {\r\n                email,\r\n                password,\r\n                firstName,\r\n                lastName,\r\n                phoneNumber,\r\n                address,\r\n                selectedGender,\r\n                birthday\r\n            } = this.state\r\n            //call api\r\n            console.log('hceckcea', selectedGender)\r\n            if (!selectedGender) {\r\n                this.setState({\r\n                    err: \"Your gender isn't valid. Please try again!\"\r\n                })\r\n            } else {\r\n                let message = await createUserService({\r\n                    email: email,\r\n                    password: password,\r\n                    firstName: firstName,\r\n                    lastName: lastName,\r\n                    phoneNumber: phoneNumber,\r\n                    address: address,\r\n                    gender: selectedGender.value,\r\n                    birthday: birthday\r\n                })\r\n\r\n                if (message && message.errCode === 0) {\r\n                    toast.success(message.message)\r\n                    this.props.history.goBack()\r\n                } else {\r\n                    this.setState({ err: message.errMessage })\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChangeSelect = (selectedGender) => {\r\n        this.setState({ selectedGender: selectedGender })\r\n    }\r\n\r\n    handleChangeText = (e) => {\r\n        const { name, value } = e.target\r\n        let cpState = this.state\r\n        cpState[name] = value\r\n        this.setState(cpState)\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            email,\r\n            password,\r\n            isShowPassword,\r\n            err,\r\n            selectedGender,\r\n            listGenders,\r\n            confirmpass,\r\n            firstName,\r\n            lastName,\r\n            address,\r\n            phoneNumber,\r\n            birthday\r\n        } = this.state\r\n\r\n        return (\r\n            <div className=\"login-bg\">\r\n                <h2 className=\"title\">\r\n                    Register\r\n                </h2>\r\n\r\n                <div className=\"row form-group register-form\">\r\n                    <div className=\"col-4 form-group\">\r\n                        <input\r\n                            placeholder=\"email\"\r\n                            name=\"email\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={email}\r\n                            onChange={this.handleChangeText}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-4 form-group\">\r\n                        <div className=\"input-password\">\r\n                            <input\r\n                                placeholder=\"password\"\r\n                                name=\"password\"\r\n                                type={isShowPassword ? \"text\" : \"password\"}\r\n                                className=\"form-control\"\r\n                                value={password}\r\n                                onChange={this.handleChangeText}\r\n                            />\r\n                            <span\r\n                                className=\"icon-password\"\r\n                                onClick={this.handleShowPassword}\r\n                            >\r\n                                <i className={isShowPassword ? \"far fa-eye\" : \"far fa-eye-slash\"}></i>\r\n                            </span>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className=\"col-4 form-group\">\r\n                        <div className=\"input-password\">\r\n                            <input\r\n                                placeholder=\"confirm password\"\r\n                                name=\"confirmpass\"\r\n                                type={isShowPassword ? \"text\" : \"password\"}\r\n                                className=\"form-control\"\r\n                                value={confirmpass}\r\n                                onChange={this.handleChangeText}\r\n                            />\r\n                            <span\r\n                                className=\"icon-password\"\r\n                                onClick={this.handleShowPassword}\r\n                            >\r\n                                <i className={isShowPassword ? \"far fa-eye\" : \"far fa-eye-slash\"}></i>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-4 form-group\">\r\n                        <input\r\n                            placeholder=\"first name\"\r\n                            name=\"firstName\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={firstName}\r\n                            onChange={this.handleChangeText}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-4 form-group\">\r\n                        <input\r\n                            placeholder=\"last name\"\r\n                            name=\"lastName\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={lastName}\r\n                            onChange={this.handleChangeText}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-4 form-group\">\r\n                        <input\r\n                            placeholder=\"DD/MM/YYY\"\r\n                            name=\"birthday\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={birthday}\r\n                            onChange={this.handleChangeText}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-4 form-group\">\r\n                        <input\r\n                            placeholder=\"address\"\r\n                            name=\"address\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={address}\r\n                            onChange={this.handleChangeText}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-4 form-group \">\r\n                        <input\r\n                            placeholder=\"phone number\"\r\n                            name=\"phoneNumber\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={phoneNumber}\r\n                            onChange={this.handleChangeText}\r\n                        />\r\n                    </div>\r\n\r\n                    <Select\r\n                        value={selectedGender}\r\n                        className=\"col-4\"\r\n                        onChange={this.handleChangeSelect}\r\n                        options={listGenders}\r\n                        placeholder=\"Select gender\"\r\n                    />\r\n\r\n                    {err && (\r\n                        <div className='login-error col-12'>\r\n                            <span className='error'>{err}</span>\r\n                        </div>\r\n                    )}\r\n                    <div className=\"col-12\" style={{ height: '30px' }} />\r\n                    <div className=\"form-group btn-register\">\r\n                        <button\r\n                            onClick={this.handleRegister}\r\n                            className=\"btn\"\r\n                        >Sign up</button>\r\n\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        genders: state.admin.genders,\r\n    };\r\n};\r\n\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchGender: () => dispatch(actions.fetchGenderStart())\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Register));\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { ConnectedRouter as Router } from 'connected-react-router';\r\nimport { history } from '../redux'\r\nimport { ToastContainer } from 'react-toastify';\r\nimport './App.scss'\r\nimport { userIsAuthenticated, userIsNotAuthenticated } from '../hoc/authentication';\r\n\r\nimport { path } from '../utils'\r\n\r\nimport Home from '../routes/Home';\r\nimport Login from './Auth/Login';\r\nimport System from '../routes/System';\r\nimport HomePage from './HomePage/HomePage';\r\nimport DetailDoctor from './HomePage/Patient/Doctor/DetailDoctor';\r\nimport CustomScrollbars from '../components/CustomScrollbars'\r\nimport Doctor from '../routes/Doctor';\r\nimport VerifyingEmail from './HomePage/Patient/VerifyingEmail';\r\nimport DetailSpecialty from './HomePage/Patient/Specialty/DetailSpecialty';\r\nimport DetailClinic from './HomePage/Patient/Clinic/DetailClinic';\r\nimport DetailCOVID from './HomePage/Patient/COVID/DetailCOVID';\r\nimport AllDoctor from './HomePage/Patient/Doctor/AllDoctor';\r\nimport AllClinic from './HomePage/Patient/Clinic/AllClinic'\r\nimport AllSpecialty from './HomePage/Patient/Specialty/AllSpecialty'\r\nimport Register from './Auth/Register';\r\n\r\nclass App extends Component {\r\n\r\n    handlePersistorState = () => {\r\n        const { persistor } = this.props;\r\n        let { bootstrapped } = persistor.getState();\r\n        if (bootstrapped) {\r\n            if (this.props.onBeforeLift) {\r\n                Promise.resolve(this.props.onBeforeLift())\r\n                    .then(() => this.setState({ bootstrapped: true }))\r\n                    .catch(() => this.setState({ bootstrapped: true }));\r\n            } else {\r\n                this.setState({ bootstrapped: true });\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.handlePersistorState();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Router history={history}>\r\n                    <div className=\"main-container\">\r\n                        <div className=\"content-container\">\r\n                            <CustomScrollbars style={{ height: \"100vh\", width: \"100%\" }}>\r\n                                <Switch>\r\n                                    <Route path={path.HOME} exact component={(Home)} />\r\n                                    <Route path={path.LOGIN} component={userIsNotAuthenticated(Login)} />\r\n                                    <Route path={path.REGISTER} component={userIsNotAuthenticated(Register)} />\r\n                                    <Route path={path.SYSTEM} component={userIsAuthenticated(System)} />\r\n                                    <Route path={path.DOCTOR} component={userIsAuthenticated(Doctor)} />\r\n                                    <Route path={path.HOMEPAGE} component={HomePage} />\r\n                                    <Route path={path.DETAIL_DOCTOR} component={DetailDoctor} />\r\n                                    <Route path={path.ALL_DOCTOR} component={AllDoctor} />\r\n                                    <Route path={path.DETAIL_SPECIALTY} component={DetailSpecialty} />\r\n                                    <Route path={path.ALL_SPECIALTY} component={AllSpecialty} />\r\n                                    <Route path={path.DETAIL_CLINIC} component={DetailClinic} />\r\n                                    <Route path={path.ALL_CLINIC} component={AllClinic} />\r\n                                    <Route path={path.DETAIL_COVID} component={DetailCOVID} />\r\n                                    <Route path={path.VERIFY_EMAIL_BOOKING} component={VerifyingEmail} />\r\n                                </Switch>\r\n                            </CustomScrollbars>\r\n                        </div>\r\n\r\n                        {/* <ToastContainer\r\n                            className=\"toast-container\" toastClassName=\"toast-item\" bodyClassName=\"toast-item-body\"\r\n                            autoClose={false} hideProgressBar={true} pauseOnHover={false}\r\n                            pauseOnFocusLoss={true} closeOnClick={false} draggable={false}\r\n                            closeButton={<CustomToastCloseButton />}\r\n                        /> */}\r\n\r\n                        <ToastContainer\r\n                            position=\"bottom-right\"\r\n                            autoClose={3000}\r\n                            hideProgressBar={false}\r\n                            newestOnTop={false}\r\n                            closeOnClick\r\n                            rtl={false}\r\n                            pauseOnFocusLoss\r\n                            draggable\r\n                            pauseOnHover\r\n                        />\r\n                    </div>\r\n                </Router>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        started: state.app.started,\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { IntlProvider } from \"react-intl\";\r\n\r\nimport '@formatjs/intl-pluralrules/polyfill';\r\nimport '@formatjs/intl-pluralrules/locale-data/en';\r\nimport '@formatjs/intl-pluralrules/locale-data/vi';\r\n\r\nimport '@formatjs/intl-relativetimeformat/polyfill';\r\nimport '@formatjs/intl-relativetimeformat/locale-data/en';\r\nimport '@formatjs/intl-relativetimeformat/locale-data/vi';\r\n\r\nimport { LanguageUtils } from '../utils'\r\n\r\nconst messages = LanguageUtils.getFlattenedMessages();\r\n\r\nclass IntlProviderWrapper extends Component {\r\n\r\n    render() {\r\n        const { children, language } = this.props;\r\n        return (\r\n            <IntlProvider\r\n                locale={language}\r\n                messages={messages[language]}\r\n                defaultLocale=\"vi\">\r\n                {children}\r\n            </IntlProvider>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(IntlProviderWrapper);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './styles/styles.scss';\r\n\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport IntlProviderWrapper from \"./hoc/IntlProviderWrapper\";\r\n\r\n\r\nimport { Provider } from 'react-redux';\r\nimport reduxStore, { persistor } from './redux';\r\n\r\nconst renderApp = () => {\r\n    ReactDOM.render(\r\n        <Provider store={reduxStore}>\r\n            <IntlProviderWrapper>\r\n                <App persistor={persistor}/>\r\n            </IntlProviderWrapper>\r\n        </Provider>,\r\n        document.getElementById('root')\r\n    );\r\n};\r\n\r\nrenderApp();\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass HomeFooter extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"home-footer\">\r\n                <p>&copy; 2021 Augustus Flynn.\r\n                    More infomation...<br />\r\n                    <span className=\"facebook\">\r\n                        <a\r\n                            rel=\"noreferrer\"\r\n                            target=\"_blank\" href=\"https://www.facebook.com/huytung.novers/\"\r\n                            style={{ marginRight: \"10px\" }}\r\n                        >\r\n                            <i className=\"fab fa-facebook\"></i>\r\n                            Facebook\r\n                        </a>\r\n                    </span>\r\n                    <span className=\"github\">\r\n                        <a\r\n                            rel=\"noreferrer\"\r\n                            target=\"_blank\" href=\"https://github.com/augustustung\"\r\n                        >\r\n                            <i className=\"fab fa-github\"></i>\r\n                            Github\r\n                        </a>\r\n                    </span>\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        language: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeFooter);\r\n","import React, { Component } from 'react';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport './CustomScrollbars.scss';\r\n\r\nclass CustomScrollbars extends Component {\r\n    ref = React.createRef();\r\n\r\n    getScrollLeft =()=>{\r\n        const scrollbars = this.ref.current;\r\n        return scrollbars.getScrollLeft();\r\n    }\r\n    getScrollTop =()=>{\r\n        const scrollbars = this.ref.current;\r\n        return scrollbars.getScrollTop();\r\n    }\r\n\r\n    scrollToBottom = () => {\r\n        if (!this.ref || !this.ref.current) {\r\n            return;\r\n        }\r\n        const scrollbars = this.ref.current;\r\n        const targetScrollTop = scrollbars.getScrollHeight();\r\n        this.scrollTo(targetScrollTop);\r\n    };\r\n\r\n    scrollTo = (targetTop) => {\r\n        const { quickScroll } = this.props;\r\n        if (!this.ref || !this.ref.current) {\r\n            return;\r\n        }\r\n        const scrollbars = this.ref.current;\r\n        const originalTop = scrollbars.getScrollTop();\r\n        let iteration = 0;\r\n\r\n        const scroll = () => {\r\n            iteration++;\r\n            if (iteration > 30) {\r\n                return;\r\n            }\r\n            scrollbars.scrollTop(originalTop + (targetTop - originalTop) / 30 * iteration);\r\n\r\n            if (quickScroll && quickScroll === true) {\r\n                scroll();\r\n            } else {\r\n                setTimeout(() => {\r\n                    scroll();\r\n                }, 20);\r\n            }\r\n        };\r\n\r\n        scroll();\r\n    };\r\n\r\n    renderTrackHorizontal = (props) => {\r\n        return (\r\n            <div {...props} className=\"track-horizontal\" />\r\n        );\r\n    };\r\n\r\n    renderTrackVertical = (props) => {\r\n        return (\r\n            <div {...props} className=\"track-vertical\" />\r\n        );\r\n    };\r\n\r\n    renderThumbHorizontal = (props) => {\r\n        return (\r\n            <div {...props} className=\"thumb-horizontal\" />\r\n        );\r\n    };\r\n\r\n    renderThumbVertical = (props) => {\r\n        return (\r\n            <div {...props} className=\"thumb-vertical\" />\r\n        );\r\n    };\r\n\r\n    renderNone = (props) => {\r\n        return (\r\n            <div />\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { className, disableVerticalScroll, disableHorizontalScroll, children,...otherProps } = this.props;\r\n        return (\r\n            <Scrollbars\r\n                ref={this.ref}\r\n                autoHide={true}\r\n                autoHideTimeout={200}\r\n                hideTracksWhenNotNeeded={true}\r\n                className={className ? className + ' custom-scrollbar' : 'custom-scrollbar'}\r\n                {...otherProps}\r\n                renderTrackHorizontal={disableHorizontalScroll ? this.renderNone : this.renderTrackHorizontal}\r\n                renderTrackVertical={disableVerticalScroll ? this.renderNone : this.renderTrackVertical}\r\n                renderThumbHorizontal={disableHorizontalScroll ? this.renderNone : this.renderThumbHorizontal}\r\n                renderThumbVertical={disableVerticalScroll ? this.renderNone : this.renderThumbVertical}\r\n            >\r\n                {children}\r\n            </Scrollbars>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CustomScrollbars;"],"sourceRoot":""}